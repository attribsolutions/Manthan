{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\DriverPage\\\\DriverMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertState, commonPageField } from \"../../../store/actions\";\nimport { PostMethodForDriverMaster, getMethodForDriverList, PostMethod_ForDriverMasterSuccess, getMethod_ForDriverListSuccess, editDriverTypeSuccess, updateDriverTypeID } from \"../../../store/Administrator/DriverRedux/action\";\nimport { useHistory } from \"react-router-dom\";\nimport Flatpickr from \"react-flatpickr\";\nimport { comAddPageFieldFunc, formValid, formValChange, onChangeSelect, onChangeText, onChangeDate } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\nimport { pageField } from './validfiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DriverMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let editDataGetingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  const formRef = useRef(null);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(\"\");\n  const [EditData, setEditData] = useState([]);\n  const [DOB_Date_Select, setDOB_Date_Select] = useState(\"\"); // ////////////////////////////////////\n\n  const [state, setState] = useState({\n    values: {\n      Name: \"\",\n      Address: \"\",\n      UID: \"\",\n      DOB: ''\n    },\n    fieldLabel: {\n      Name: \"\",\n      Address: \"\",\n      UID: \"\",\n      DOB: ''\n    },\n    isError: {\n      Name: \"\",\n      Address: \"\",\n      UID: \"\",\n      DOB: ''\n    },\n    hasValid: {\n      Name: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      Address: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      UID: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      DOB: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  }); //////////////////////////\n  //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    PostAPIResponse: state.DriverReducer.PostDataMessage,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {\n    // dispatch(commonPageFieldSuccess([]));\n    dispatch(commonPageField(90));\n  }, []); //userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = undefined;\n\n    if (editDataGetingFromList === undefined) {\n      let locationPath = history.location.pathname;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === locationPath;\n      });\n    } else if (!(editDataGetingFromList === undefined)) {\n      let relatatedPage = props.relatatedPage;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === relatatedPage;\n      });\n    }\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (!(editDataGetingFromList === undefined)) {\n      setEditData(editDataGetingFromList);\n      setPageMode(pageModeProps);\n      setDOB_Date_Select(editDataGetingFromList.DOB);\n      dispatch(editDriverTypeSuccess({\n        Status: false\n      }));\n      dispatch(BreadcrumbShow(editDataGetingFromList.DriverMaster));\n      return;\n    }\n  }, [editDataGetingFromList]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForDriverMasterSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/DriverList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getMethod_ForDriverListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]); // ////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    if (pageField.length > 0) {\n      comAddPageFieldFunc({\n        state,\n        setState,\n        pageField\n      });\n    }\n  }, [pageField]);\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n\n  const formSubmitHandler = event => {\n    debugger;\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        Name: values.Name,\n        Address: values.Address,\n        DOB: values.DOB,\n        UID: values.UID\n      });\n\n      if (pageMode === 'edit') {\n        dispatch(updateDriverTypeID(jsonBody, EditData.id));\n      } else {\n        dispatch(PostMethodForDriverMaster(jsonBody));\n      }\n    }\n  };\n\n  const options = [{\n    value: 'active',\n    label: 'Active'\n  }, {\n    value: 'inactive',\n    label: 'In Active'\n  }, {\n    value: 'deleted',\n    label: 'Delete'\n  }]; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"DriverMaster | FoodERP-React FrontEnd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.Name, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 280,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              type: \"text\",\n                              className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              name: \"Name\",\n                              placeholder: \"Please Enter Name\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                                dispatch(BreadcrumbShow(event.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 281,\n                              columnNumber: 61\n                            }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 293,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 279,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"4\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  children: \"Date of Birth\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 299,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                                  id: \"FSSAIExipry\",\n                                  name: \"DOB\",\n                                  value: DOB_Date_Select,\n                                  className: \"form-control d-block p-2 bg-white text-dark\",\n                                  placeholder: \"YYYY-MM-DD\",\n                                  autoComplete: \"off\",\n                                  options: {\n                                    altInput: true,\n                                    altFormat: \"F j, Y\",\n                                    dateFormat: \"Y-m-d\"\n                                  },\n                                  onChange: (y, v, e) => {\n                                    onChangeDate({\n                                      e,\n                                      v,\n                                      state,\n                                      setState\n                                    });\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 300,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 298,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 297,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 296,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"4\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: [fieldLabel.Address, \" \"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 320,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                  defaultValue: options[0],\n                                  isSearchable: false,\n                                  className: \"react-dropdown\",\n                                  onChange: (v, e) => onChangeSelect({\n                                    e,\n                                    v,\n                                    state,\n                                    setState\n                                  }),\n                                  classNamePrefix: \"dropdown\",\n                                  options: options,\n                                  name: \"Address\",\n                                  styles: {\n                                    control: base => ({ ...base,\n                                      border: isError.Address.length > 0 ? '1px solid red' : ''\n                                    })\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 321,\n                                  columnNumber: 69\n                                }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"tex\",\n                                  children: isError.Name\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 338,\n                                  columnNumber: 65\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 319,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 318,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 317,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [fieldLabel.Address, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 349,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                type: \"text\",\n                                value: EditData.Address,\n                                className: isError.Address.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                name: \"Address\",\n                                placeholder: \"Please Enter Address\",\n                                autoComplete: \"off\",\n                                onChange: event => onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 350,\n                                columnNumber: 65\n                              }, this), isError.Address.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.Address\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 360,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 348,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 347,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: fieldLabel.UID\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 367,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"UID\",\n                                value: EditData.UID,\n                                type: \"text\",\n                                placeholder: \"Please Enter UID\",\n                                autoComplete: \"off\",\n                                className: isError.UID.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                onChange: event => onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 368,\n                                columnNumber: 65\n                              }, this), isError.UID.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.UID\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 378,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 366,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 365,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Update Party Type\",\n                                    className: \"btn btn-success w-md mt-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fas fa-edit me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 395,\n                                      columnNumber: 89\n                                    }, this), \"Update\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 390,\n                                    columnNumber: 85\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Save Party Type\",\n                                    className: \"btn btn-primary w-md mt-3 \",\n                                    children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"fas fa-save me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 406,\n                                      columnNumber: 91\n                                    }, this), \" Save\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 402,\n                                    columnNumber: 89\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 386,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 385,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 384,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 383,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(DriverMaster, \"VjFTWTMgHVtd7Wwbcr8ta5bqjP0=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = DriverMaster;\nexport default DriverMaster;\nconst Email = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst Mobile = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst NotNull = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","commonPageFieldSuccess","useDispatch","useSelector","AlertState","commonPageField","PostMethodForDriverMaster","getMethodForDriverList","PostMethod_ForDriverMasterSuccess","getMethod_ForDriverListSuccess","editDriverTypeSuccess","updateDriverTypeID","useHistory","Flatpickr","comAddPageFieldFunc","formValid","formValChange","onChangeSelect","onChangeText","onChangeDate","pageField","DriverMaster","props","dispatch","history","editDataGetingFromList","state","pageModeProps","pageMode","formRef","setPageMode","userPageAccessState","setUserPageAccessState","EditData","setEditData","DOB_Date_Select","setDOB_Date_Select","setState","values","Name","Address","UID","DOB","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","PostAPIResponse","RoleAccessModifiedinSingleArray","DriverReducer","PostDataMessage","Login","RoleAccessUpdateData","CommonPageFieldReducer","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","length","formSubmitHandler","event","preventDefault","jsonBody","id","options","value","label","IsEditMode_Css","marginTop","backgroundColor","PageDescription","PageDescriptionDetails","target","altInput","altFormat","dateFormat","y","v","e","control","base","border","RoleAccess_IsEdit","RoleAccess_IsSave","Email","RegExp","Mobile","NotNull"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/DriverMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\n\r\nimport {\r\n    PostMethodForDriverMaster,\r\n    getMethodForDriverList,\r\n    PostMethod_ForDriverMasterSuccess,\r\n    getMethod_ForDriverListSuccess,\r\n    editDriverTypeSuccess,\r\n    updateDriverTypeID\r\n} from \"../../../store/Administrator/DriverRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    formValChange,\r\n    onChangeSelect,\r\n    onChangeText,\r\n    onChangeDate\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\n\r\nimport { pageField } from './validfiles'\r\n\r\n\r\nconst DriverMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    let editDataGetingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    const formRef = useRef(null);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(\"\");\r\n    const [EditData, setEditData] = useState([]);\r\n    const [DOB_Date_Select, setDOB_Date_Select] = useState(\"\");\r\n\r\n    // ////////////////////////////////////\r\n    const [state, setState] = useState({\r\n        values: {\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n        fieldLabel: {\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n\r\n        isError: {\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n\r\n        hasValid: {\r\n            Name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            Address: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            UID: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            DOB: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            }\r\n        },\r\n        required: {\r\n\r\n        }\r\n    }\r\n    )\r\n    //////////////////////////\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        PostAPIResponse,\r\n        \r\n        RoleAccessModifiedinSingleArray\r\n    } = useSelector((state) => ({\r\n        PostAPIResponse: state.DriverReducer.PostDataMessage,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n\r\n    useEffect(() => {\r\n        // dispatch(commonPageFieldSuccess([]));\r\n        dispatch(commonPageField(90))\r\n    }, []);\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = undefined\r\n        if ((editDataGetingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGetingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGetingFromList === undefined)) {\r\n\r\n            setEditData(editDataGetingFromList);\r\n            setPageMode(pageModeProps);\r\n            setDOB_Date_Select(editDataGetingFromList.DOB)\r\n\r\n            dispatch(editDriverTypeSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGetingFromList.DriverMaster))\r\n            return\r\n        }\r\n    }, [editDataGetingFromList])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/DriverList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForDriverListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n\r\n    // ////////////////////////////////////////////////////////////\r\n    useEffect(() => {\r\n        if (pageField.length > 0) {\r\n            comAddPageFieldFunc({ state, setState, pageField })\r\n        }\r\n    }, [pageField])\r\n\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n\r\n    const formSubmitHandler = (event) => {\r\n        debugger\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                Address: values.Address,\r\n                DOB: values.DOB,\r\n                UID: values.UID\r\n            });\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateDriverTypeID(jsonBody, EditData.id));\r\n            }\r\n\r\n            else {\r\n                dispatch(PostMethodForDriverMaster(jsonBody));\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const options = [\r\n        { value: 'active', label: 'Active' },\r\n        { value: 'inactive', label: 'In Active' },\r\n        { value: 'deleted', label: 'Delete' },\r\n    ];\r\n\r\n\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>DriverMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        {/* <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} /> */}\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n                                                            <Input\r\n                                                                type=\"text\"\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                name=\"Name\"\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label>Date of Birth</Label>\r\n                                                                    <Flatpickr\r\n                                                                        id=\"FSSAIExipry\"\r\n                                                                        name=\"DOB\"\r\n                                                                        value={DOB_Date_Select}\r\n                                                                        className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                                        placeholder=\"YYYY-MM-DD\"\r\n                                                                        autoComplete='off'\r\n                                                                        options={{\r\n                                                                            altInput: true,\r\n                                                                            altFormat: \"F j, Y\",\r\n                                                                            dateFormat: \"Y-m-d\"\r\n                                                                        }}\r\n                                                                        onChange={(y,v,e)=>{onChangeDate({e,v,state,setState})}}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label htmlFor=\"validationCustom01\">{fieldLabel.Address} </Label>\r\n                                                                    <Select\r\n                                                                        defaultValue={options[0]}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        onChange={(v, e) => onChangeSelect({ e, v, state, setState })}\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                        options={options}\r\n                                                                        name=\"Address\"\r\n                                                                        styles={{\r\n                                                                            control: base => ({\r\n                                                                                ...base,\r\n                                                                                border: isError.Address.length > 0 ? '1px solid red' : '',\r\n\r\n                                                                            })\r\n                                                                        }}\r\n                                                                    />\r\n                                                                     {isError.Name.length > 0 && (\r\n                                                                <span className=\"tex\">{isError.Name}</span>\r\n                                                            )}\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n\r\n\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.Address} </Label>\r\n                                                                <Input\r\n                                                                    type=\"text\"\r\n                                                                    value={EditData.Address}\r\n                                                                    className={isError.Address.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    name=\"Address\"\r\n                                                                    placeholder=\"Please Enter Address\"\r\n                                                                    autoComplete='off'\r\n                                                                    onChange={( event) => onChangeText({ event, state, setState })}\r\n                                                                />\r\n                                                                {isError.Address.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.Address}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.UID}</Label>\r\n                                                                <Input\r\n                                                                    name=\"UID\"\r\n                                                                    value={EditData.UID}\r\n                                                                    type=\"text\"\r\n                                                                    placeholder=\"Please Enter UID\"\r\n                                                                    autoComplete='off'\r\n                                                                    className={isError.UID.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    onChange={(event)=>onChangeText({ event, state, setState })}\r\n                                                                />\r\n                                                                {isError.UID.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.UID}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n\r\n                                                        </Row>\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DriverMaster\r\n\r\n\r\n\r\n\r\nconst Email = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\n\r\nconst Mobile = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\nconst NotNull = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAoD,OAApD;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,GAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,KARJ,EASIC,GATJ,QAUO,YAVP;AAWA,SAASC,OAAT,EAAkBC,MAAlB,QAAiC,gCAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,cAAT,EAAyBC,sBAAzB,QAAuD,wBAAvD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AAEA,SACIC,yBADJ,EAEIC,sBAFJ,EAGIC,iCAHJ,EAIIC,8BAJJ,EAKIC,qBALJ,EAMIC,kBANJ,QAOO,iDAPP;AAQA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SACIC,mBADJ,EAEIC,SAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,YALJ,EAMIC,YANJ,QAOO,yEAPP;AASA,SAASC,SAAT,QAA0B,cAA1B;;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAE5B,MAAMC,QAAQ,GAAGrB,WAAW,EAA5B;EACA,MAAMsB,OAAO,GAAGZ,UAAU,EAA1B;EAEA,IAAIa,sBAAsB,GAAGH,KAAK,CAACI,KAAnC;EACA,IAAIC,aAAa,GAAGL,KAAK,CAACM,QAA1B;EAEA,MAAMC,OAAO,GAAG7C,MAAM,CAAC,IAAD,CAAtB;EACA,MAAM,CAAC4C,QAAD,EAAWE,WAAX,IAA0B7C,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAC8C,mBAAD,EAAsBC,sBAAtB,IAAgD/C,QAAQ,CAAC,EAAD,CAA9D;EACA,MAAM,CAACgD,QAAD,EAAWC,WAAX,IAA0BjD,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACkD,eAAD,EAAkBC,kBAAlB,IAAwCnD,QAAQ,CAAC,EAAD,CAAtD,CAZ4B,CAc5B;;EACA,MAAM,CAACyC,KAAD,EAAQW,QAAR,IAAoBpD,QAAQ,CAAC;IAC/BqD,MAAM,EAAE;MACJC,IAAI,EAAE,EADF;MAEJC,OAAO,EAAE,EAFL;MAGJC,GAAG,EAAE,EAHD;MAIJC,GAAG,EAAE;IAJD,CADuB;IAO/BC,UAAU,EAAE;MACRJ,IAAI,EAAE,EADE;MAERC,OAAO,EAAE,EAFD;MAGRC,GAAG,EAAE,EAHG;MAIRC,GAAG,EAAE;IAJG,CAPmB;IAc/BE,OAAO,EAAE;MACLL,IAAI,EAAE,EADD;MAELC,OAAO,EAAE,EAFJ;MAGLC,GAAG,EAAE,EAHA;MAILC,GAAG,EAAE;IAJA,CAdsB;IAqB/BG,QAAQ,EAAE;MACNN,IAAI,EAAE;QACFO,MAAM,EAAE,EADN;QAEFC,UAAU,EAAE,EAFV;QAGFC,KAAK,EAAE;MAHL,CADA;MAMNR,OAAO,EAAE;QACLM,MAAM,EAAE,EADH;QAELC,UAAU,EAAE,EAFP;QAGLC,KAAK,EAAE;MAHF,CANH;MAYNP,GAAG,EAAE;QACDK,MAAM,EAAE,EADP;QAEDC,UAAU,EAAE,EAFX;QAGDC,KAAK,EAAE;MAHN,CAZC;MAiBNN,GAAG,EAAE;QACDI,MAAM,EAAE,EADP;QAEDC,UAAU,EAAE,EAFX;QAGDC,KAAK,EAAE;MAHN;IAjBC,CArBqB;IA4C/BC,QAAQ,EAAE;EA5CqB,CAAD,CAAlC,CAf4B,CAgE5B;EAGA;;EACA,MAAM;IACFC,eADE;IAGFC;EAHE,IAIFhD,WAAW,CAAEuB,KAAD,KAAY;IACxBwB,eAAe,EAAExB,KAAK,CAAC0B,aAAN,CAAoBC,eADb;IAExBF,+BAA+B,EAAEzB,KAAK,CAAC4B,KAAN,CAAYC,oBAFrB;IAGxBnC,SAAS,EAAEM,KAAK,CAAC8B,sBAAN,CAA6BpC;EAHhB,CAAZ,CAAD,CAJf;EAWArC,SAAS,CAAC,MAAM;IACZ;IACAwC,QAAQ,CAAClB,eAAe,CAAC,EAAD,CAAhB,CAAR;EACH,CAHQ,EAGN,EAHM,CAAT,CA/E4B,CAoF5B;;EACAtB,SAAS,CAAC,MAAM;IACZ,IAAI0E,OAAO,GAAGC,SAAd;;IACA,IAAKjC,sBAAsB,KAAKiC,SAAhC,EAA4C;MAExC,IAAIC,YAAY,GAAGnC,OAAO,CAACoC,QAAR,CAAiBC,QAApC;MACAJ,OAAO,GAAGN,+BAA+B,CAACW,IAAhC,CAAsCC,GAAD,IAAS;QACpD,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BL,YAArC;MACH,CAFS,CAAV;IAGH,CAND,MAOK,IAAI,EAAElC,sBAAsB,KAAKiC,SAA7B,CAAJ,EAA6C;MAC9C,IAAIO,aAAa,GAAG3C,KAAK,CAAC2C,aAA1B;MACAR,OAAO,GAAGN,+BAA+B,CAACW,IAAhC,CAAsCC,GAAD,IAAS;QACpD,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BC,aAArC;MACH,CAFS,CAAV;IAIH;;IACD,IAAI,EAAER,OAAO,KAAKC,SAAd,CAAJ,EAA8B;MAC1B1B,sBAAsB,CAACyB,OAAD,CAAtB;IACH;EAEJ,CApBQ,EAoBN,CAACN,+BAAD,CApBM,CAAT,CArF4B,CA2G5B;;EACApE,SAAS,CAAC,MAAM;IAEZ;IACA,IAAI,EAAE0C,sBAAsB,KAAKiC,SAA7B,CAAJ,EAA6C;MAEzCxB,WAAW,CAACT,sBAAD,CAAX;MACAK,WAAW,CAACH,aAAD,CAAX;MACAS,kBAAkB,CAACX,sBAAsB,CAACiB,GAAxB,CAAlB;MAEAnB,QAAQ,CAACb,qBAAqB,CAAC;QAAEwD,MAAM,EAAE;MAAV,CAAD,CAAtB,CAAR;MACA3C,QAAQ,CAACvB,cAAc,CAACyB,sBAAsB,CAACJ,YAAxB,CAAf,CAAR;MACA;IACH;EACJ,CAbQ,EAaN,CAACI,sBAAD,CAbM,CAAT;EAiBA1C,SAAS,CAAC,MAAM;IACZ,IAAKmE,eAAe,CAACgB,MAAhB,KAA2B,IAA5B,IAAsChB,eAAe,CAACiB,UAAhB,KAA+B,GAAzE,EAA+E;MAC3E5C,QAAQ,CAACf,iCAAiC,CAAC;QAAE0D,MAAM,EAAE;MAAV,CAAD,CAAlC,CAAR;MACArC,OAAO,CAACuC,OAAR,CAAgBC,KAAhB;;MACA,IAAIzC,QAAQ,KAAK,aAAjB,EAAgC;QAC5BL,QAAQ,CAACnB,UAAU,CAAC;UAChBkE,IAAI,EAAE,CADU;UAEhBJ,MAAM,EAAE,IAFQ;UAGhBK,OAAO,EAAErB,eAAe,CAACqB;QAHT,CAAD,CAAX,CAAR;MAKH,CAND,MAOK;QACDhD,QAAQ,CAACnB,UAAU,CAAC;UAChBkE,IAAI,EAAE,CADU;UAEhBJ,MAAM,EAAE,IAFQ;UAGhBK,OAAO,EAAErB,eAAe,CAACqB,OAHT;UAIhBC,YAAY,EAAE;QAJE,CAAD,CAAX,CAAR;MAMH;IACJ,CAlBD,MAmBK,IAAItB,eAAe,CAACgB,MAAhB,KAA2B,IAA/B,EAAqC;MACtC3C,QAAQ,CAACd,8BAA8B,CAAC;QAAEyD,MAAM,EAAE;MAAV,CAAD,CAA/B,CAAR;MACA3C,QAAQ,CAACnB,UAAU,CAAC;QAChBkE,IAAI,EAAE,CADU;QAEhBJ,MAAM,EAAE,IAFQ;QAGhBK,OAAO,EAAEE,IAAI,CAACC,SAAL,CAAeC,WAAW,CAACJ,OAA3B,CAHO;QAIhBC,YAAY,EAAE,KAJE;QAKhBI,mBAAmB,EAAE;MALL,CAAD,CAAX,CAAR;IAOH;EACJ,CA9BQ,EA8BN,CAAC1B,eAAD,CA9BM,CAAT,CA7H4B,CA+J5B;;EACAnE,SAAS,CAAC,MAAM;IACZ,IAAIqC,SAAS,CAACyD,MAAV,GAAmB,CAAvB,EAA0B;MACtB/D,mBAAmB,CAAC;QAAEY,KAAF;QAASW,QAAT;QAAmBjB;MAAnB,CAAD,CAAnB;IACH;EACJ,CAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;EAOA,MAAMkB,MAAM,GAAG,EAAE,GAAGZ,KAAK,CAACY;EAAX,CAAf;EACA,MAAM;IAAEM;EAAF,IAAclB,KAApB;EACA,MAAM;IAAEiB;EAAF,IAAiBjB,KAAvB;;EAIA,MAAMoD,iBAAiB,GAAIC,KAAD,IAAW;IACjC;IACAA,KAAK,CAACC,cAAN;;IACA,IAAIjE,SAAS,CAACW,KAAD,EAAQW,QAAR,CAAb,EAAgC;MAE5B,MAAM4C,QAAQ,GAAGR,IAAI,CAACC,SAAL,CAAe;QAC5BnC,IAAI,EAAED,MAAM,CAACC,IADe;QAE5BC,OAAO,EAAEF,MAAM,CAACE,OAFY;QAG5BE,GAAG,EAAEJ,MAAM,CAACI,GAHgB;QAI5BD,GAAG,EAAEH,MAAM,CAACG;MAJgB,CAAf,CAAjB;;MAOA,IAAIb,QAAQ,KAAK,MAAjB,EAAyB;QACrBL,QAAQ,CAACZ,kBAAkB,CAACsE,QAAD,EAAWhD,QAAQ,CAACiD,EAApB,CAAnB,CAAR;MACH,CAFD,MAIK;QACD3D,QAAQ,CAACjB,yBAAyB,CAAC2E,QAAD,CAA1B,CAAR;MACH;IACJ;EAGJ,CAtBD;;EAyBA,MAAME,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE,QAAT;IAAmBC,KAAK,EAAE;EAA1B,CADY,EAEZ;IAAED,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CAFY,EAGZ;IAAED,KAAK,EAAE,SAAT;IAAoBC,KAAK,EAAE;EAA3B,CAHY,CAAhB,CAtM4B,CA+M5B;;EACA,IAAIC,cAAc,GAAG,EAArB;;EACA,IAAK1D,QAAQ,KAAK,MAAd,IAA0BA,QAAQ,KAAK,MAAvC,IAAmDA,QAAQ,KAAK,aAApE,EAAoF;IAAE0D,cAAc,GAAG,OAAjB;EAA0B;;EAAA;;EAEhH,IAAI,EAAEvD,mBAAmB,KAAK,EAA1B,CAAJ,EAAmC;IAC/B,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,uBACI;QAAK,SAAS,EAAC,cAAf;QAA8B,KAAK,EAAE;UAAEwD,SAAS,EAAED;QAAb,CAArC;QAAA,uBACI,QAAC,SAAD;UAAW,KAAK,MAAhB;UAAA,wBACI,QAAC,QAAD;YAAA,uBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAMI,QAAC,IAAD;YAAM,SAAS,EAAC,YAAhB;YAAA,wBACI,QAAC,UAAD;cAAY,SAAS,EAAC,0BAAtB;cAAiD,KAAK,EAAE;gBAAEE,eAAe,EAAE;cAAnB,CAAxD;cAAA,wBACI;gBAAI,SAAS,EAAC,uBAAd;gBAAA,UAAuCzD,mBAAmB,CAAC0D;cAA3D;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAG,SAAS,EAAC,4BAAb;gBAAA,UAA2C1D,mBAAmB,CAAC2D;cAA/D;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAMI,QAAC,QAAD;cAAU,SAAS,EAAC,qBAApB;cAA0C,KAAK,EAAE;gBAAEF,eAAe,EAAE;cAAnB,CAAjD;cAAA,uBAEI;gBAAM,QAAQ,EAAEV,iBAAhB;gBAAmC,GAAG,EAAEjD,OAAxC;gBAAiD,UAAU,MAA3D;gBAAA,uBAEI,QAAC,GAAD;kBAAK,SAAS,EAAC,EAAf;kBAAA,uBACI,QAAC,GAAD;oBAAK,EAAE,EAAE,EAAT;oBAAA,uBACI,QAAC,IAAD;sBAAA,uBACI,QAAC,QAAD;wBAAU,KAAK,EAAE;0BAAE2D,eAAe,EAAE;wBAAnB,CAAjB;wBAAA,uBACI,QAAC,GAAD;0BAAA,wBACI,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACI,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA,WAAqC7C,UAAU,CAACJ,IAAhD;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADJ,eAEI,QAAC,KAAD;8BACI,IAAI,EAAC,MADT;8BAEI,SAAS,EAAEK,OAAO,CAACL,IAAR,CAAasC,MAAb,GAAsB,CAAtB,GAA0B,yBAA1B,GAAsD,cAFrE;8BAGI,IAAI,EAAC,MAHT;8BAII,WAAW,EAAC,mBAJhB;8BAKI,QAAQ,EAAGE,KAAD,IAAW;gCACjB7D,YAAY,CAAC;kCAAE6D,KAAF;kCAASrD,KAAT;kCAAgBW;gCAAhB,CAAD,CAAZ;gCACAd,QAAQ,CAACvB,cAAc,CAAC+E,KAAK,CAACY,MAAN,CAAaP,KAAd,CAAf,CAAR;8BACH;4BARL;8BAAA;8BAAA;8BAAA;4BAAA,QAFJ,EAaKxC,OAAO,CAACL,IAAR,CAAasC,MAAb,GAAsB,CAAtB,iBACG;8BAAM,SAAS,EAAC,kBAAhB;8BAAA,UAAoCjC,OAAO,CAACL;4BAA5C;8BAAA;8BAAA;8BAAA;4BAAA,QAdR;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QADJ,eAkBI,QAAC,GAAD;4BAAA,uBACI,QAAC,GAAD;8BAAK,EAAE,EAAC,GAAR;8BAAA,uBACI,QAAC,SAAD;gCAAW,SAAS,EAAC,MAArB;gCAAA,wBACI,QAAC,KAAD;kCAAA;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QADJ,eAEI,QAAC,SAAD;kCACI,EAAE,EAAC,aADP;kCAEI,IAAI,EAAC,KAFT;kCAGI,KAAK,EAAEJ,eAHX;kCAII,SAAS,EAAC,6CAJd;kCAKI,WAAW,EAAC,YALhB;kCAMI,YAAY,EAAC,KANjB;kCAOI,OAAO,EAAE;oCACLyD,QAAQ,EAAE,IADL;oCAELC,SAAS,EAAE,QAFN;oCAGLC,UAAU,EAAE;kCAHP,CAPb;kCAYI,QAAQ,EAAE,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAS;oCAAC9E,YAAY,CAAC;sCAAC8E,CAAD;sCAAGD,CAAH;sCAAKtE,KAAL;sCAAWW;oCAAX,CAAD,CAAZ;kCAAmC;gCAZ3D;kCAAA;kCAAA;kCAAA;gCAAA,QAFJ;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAlBJ,eAuCI,QAAC,GAAD;4BAAA,uBACI,QAAC,GAAD;8BAAK,EAAE,EAAC,GAAR;8BAAA,uBACI,QAAC,SAAD;gCAAW,SAAS,EAAC,MAArB;gCAAA,wBACI,QAAC,KAAD;kCAAO,OAAO,EAAC,oBAAf;kCAAA,WAAqCM,UAAU,CAACH,OAAhD;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QADJ,eAEI,QAAC,MAAD;kCACI,YAAY,EAAE2C,OAAO,CAAC,CAAD,CADzB;kCAEI,YAAY,EAAE,KAFlB;kCAGI,SAAS,EAAC,gBAHd;kCAII,QAAQ,EAAE,CAACa,CAAD,EAAIC,CAAJ,KAAUhF,cAAc,CAAC;oCAAEgF,CAAF;oCAAKD,CAAL;oCAAQtE,KAAR;oCAAeW;kCAAf,CAAD,CAJtC;kCAKI,eAAe,EAAC,UALpB;kCAMI,OAAO,EAAE8C,OANb;kCAOI,IAAI,EAAC,SAPT;kCAQI,MAAM,EAAE;oCACJe,OAAO,EAAEC,IAAI,KAAK,EACd,GAAGA,IADW;sCAEdC,MAAM,EAAExD,OAAO,CAACJ,OAAR,CAAgBqC,MAAhB,GAAyB,CAAzB,GAA6B,eAA7B,GAA+C;oCAFzC,CAAL;kCADT;gCARZ;kCAAA;kCAAA;kCAAA;gCAAA,QAFJ,EAkBMjC,OAAO,CAACL,IAAR,CAAasC,MAAb,GAAsB,CAAtB,iBACN;kCAAM,SAAS,EAAC,KAAhB;kCAAA,UAAuBjC,OAAO,CAACL;gCAA/B;kCAAA;kCAAA;kCAAA;gCAAA,QAnBA;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAvCJ,eAqEI,QAAC,GAAD;4BAAA,uBACI,QAAC,SAAD;8BAAW,SAAS,EAAC,oBAArB;8BAAA,wBACI,QAAC,KAAD;gCAAO,OAAO,EAAC,oBAAf;gCAAA,WAAqCI,UAAU,CAACH,OAAhD;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA,QADJ,eAEI,QAAC,KAAD;gCACI,IAAI,EAAC,MADT;gCAEI,KAAK,EAAEP,QAAQ,CAACO,OAFpB;gCAGI,SAAS,EAAEI,OAAO,CAACJ,OAAR,CAAgBqC,MAAhB,GAAyB,CAAzB,GAA6B,yBAA7B,GAAyD,cAHxE;gCAII,IAAI,EAAC,SAJT;gCAKI,WAAW,EAAC,sBALhB;gCAMI,YAAY,EAAC,KANjB;gCAOI,QAAQ,EAAIE,KAAF,IAAY7D,YAAY,CAAC;kCAAE6D,KAAF;kCAASrD,KAAT;kCAAgBW;gCAAhB,CAAD;8BAPtC;gCAAA;gCAAA;gCAAA;8BAAA,QAFJ,EAWKO,OAAO,CAACJ,OAAR,CAAgBqC,MAAhB,GAAyB,CAAzB,iBACG;gCAAM,SAAS,EAAC,kBAAhB;gCAAA,UAAoCjC,OAAO,CAACJ;8BAA5C;gCAAA;gCAAA;gCAAA;8BAAA,QAZR;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QArEJ,eAuFI,QAAC,GAAD;4BAAA,uBACI,QAAC,SAAD;8BAAW,SAAS,EAAC,oBAArB;8BAAA,wBACI,QAAC,KAAD;gCAAO,OAAO,EAAC,oBAAf;gCAAA,UAAqCG,UAAU,CAACF;8BAAhD;gCAAA;gCAAA;gCAAA;8BAAA,QADJ,eAEI,QAAC,KAAD;gCACI,IAAI,EAAC,KADT;gCAEI,KAAK,EAAER,QAAQ,CAACQ,GAFpB;gCAGI,IAAI,EAAC,MAHT;gCAII,WAAW,EAAC,kBAJhB;gCAKI,YAAY,EAAC,KALjB;gCAMI,SAAS,EAAEG,OAAO,CAACH,GAAR,CAAYoC,MAAZ,GAAqB,CAArB,GAAyB,yBAAzB,GAAqD,cANpE;gCAOI,QAAQ,EAAGE,KAAD,IAAS7D,YAAY,CAAC;kCAAE6D,KAAF;kCAASrD,KAAT;kCAAgBW;gCAAhB,CAAD;8BAPnC;gCAAA;gCAAA;gCAAA;8BAAA,QAFJ,EAWKO,OAAO,CAACH,GAAR,CAAYoC,MAAZ,GAAqB,CAArB,iBACG;gCAAM,SAAS,EAAC,kBAAhB;gCAAA,UAAoCjC,OAAO,CAACH;8BAA5C;gCAAA;gCAAA;gCAAA;8BAAA,QAZR;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAvFJ,eAyGI,QAAC,SAAD;4BAAA,uBACI,QAAC,GAAD;8BAAA,uBACI,QAAC,GAAD;gCAAK,EAAE,EAAE,CAAT;gCAAA,uBACI;kCAAA,UAEQb,QAAQ,KAAK,MAAb,GACIG,mBAAmB,CAACsE,iBAApB,gBACI;oCACI,IAAI,EAAC,QADT;oCAEI,mBAAgB,SAFpB;oCAE8B,sBAAmB,KAFjD;oCAEuD,KAAK,EAAC,mBAF7D;oCAGI,SAAS,EAAC,2BAHd;oCAAA,wBAKI;sCAAG,KAAK,EAAC;oCAAT;sCAAA;sCAAA;sCAAA;oCAAA,QALJ;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,gBASI,qCAVR,GAaQtE,mBAAmB,CAACuE,iBAApB,gBACI;oCACI,IAAI,EAAC,QADT;oCAEI,mBAAgB,SAFpB;oCAE8B,sBAAmB,KAFjD;oCAEuD,KAAK,EAAC,iBAF7D;oCAGI,SAAS,EAAC,4BAHd;oCAAA,6BAIE;sCAAG,SAAS,EAAC;oCAAb;sCAAA;sCAAA;sCAAA;oCAAA,QAJF;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,gBAQI;gCAvBpB;kCAAA;kCAAA;kCAAA;gCAAA;8BADJ;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAzGJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA;oBADJ;sBAAA;sBAAA;sBAAA;oBAAA;kBADJ;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA;cAFJ;gBAAA;gBAAA;gBAAA;cAAA;YAFJ;cAAA;cAAA;cAAA;YAAA,QANJ;UAAA;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EA+KH,CAhLD,MAiLK;IACD,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;AACJ,CAzYD;;GAAMjF,Y;UAEenB,W,EACDU,U,EAqEZT,W;;;KAxEFkB,Y;AA2YN,eAAeA,YAAf;AAKA,MAAMkF,KAAK,GAAGC,MAAM,CAChB,wCADgB,CAApB;AAIA,MAAMC,MAAM,GAAGD,MAAM,CACjB,wCADiB,CAArB;AAGA,MAAME,OAAO,GAAGF,MAAM,CAClB,wCADkB,CAAtB"},"metadata":{},"sourceType":"module"}