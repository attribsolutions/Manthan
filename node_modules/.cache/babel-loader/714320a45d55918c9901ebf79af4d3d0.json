{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\ItemPages\\\\ItemMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { Button, Card, CardBody, CardHeader, CardSubtitle, CardText, CardTitle, Col, Container, Form, FormGroup, Label, Nav, NavItem, NavLink, Row, TabContent, Table, TabPane } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classnames from \"classnames\";\nimport BreadcrumbDemo from \"../../../components/Common/CmponentRelatedCommonFile/BreadcrumbDemo\";\nimport { AvField, AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { fetchCompanyList } from \"../../../store/Administrator/CompanyRedux/actions\";\nimport { getBaseUnit_ForDropDown, get_CategoryTypes_ForDropDown, get_Category_ForDropDown, get_SubCategory_ForDropDown } from \"../../../store/Administrator/ItemsRedux/action\";\nimport { getDivisionTypelist } from \"../../../store/Administrator/DivisionTypeRedux/action\";\nimport Dropzone from \"react-dropzone\";\nimport { AlertState } from \"../../../store/actions\";\nimport { Tbody, Thead } from \"react-super-responsive-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemsMaster = () => {\n  _s();\n\n  const [selectedFiles, setselectedFiles] = useState([]);\n  const dispatch = useDispatch();\n  const [activeTab1, setactiveTab1] = useState(\"1\");\n  const [companyList_dropdown_Select, setCompanyList_dropdown_Select] = useState(\"\");\n  const [BaseUnit_dropdown_Select, setBaseUnit_dropdown_Select] = useState(\"\");\n  const [BaseUnit_dropdown_Select2, setBaseUnit_dropdown_Select2] = useState(\"\");\n  const [categoryType_dropdown_Select, setCategoryType_dropdown_Select] = useState(\"\");\n  const [category_dropdown_Select, setCategory_dropdown_Select] = useState(\"\");\n  const [subCategory_dropdown_Select, setsubCategory_dropdown_Select] = useState(\"\");\n  const [divisionType_dropdown_Select, setDivisionType_dropdown_Select] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [DefaultBaseUnit, setDefaultBaseUnit] = useState(\"\");\n  const [multiCat, setMultiCat] = useState([{\n    CategoryType: '',\n    Category: '',\n    SubCategory: ''\n  }]);\n  const [divisionTypeData, setDivisionTypeData] = useState([]);\n  const [priceList_Dropdown_Select, setPriceList_Dropdown_Selecte] = useState([]);\n  const [baseUnitTableData, setBaseUnitTableData] = useState([{\n    conversionRatio: '',\n    toBaseUnit: ''\n  }]);\n  const {\n    companyList,\n    BaseUnit,\n    CategoryType,\n    Category,\n    SubCategory,\n    DivisionType\n  } = useSelector(state => ({\n    companyList: state.Company.companyList,\n    BaseUnit: state.ItemMastersReducer.BaseUnit,\n    CategoryType: state.ItemMastersReducer.CategoryType,\n    Category: state.ItemMastersReducer.Category,\n    SubCategory: state.ItemMastersReducer.SubCategory,\n    DivisionType: state.DivisionTypeReducer.ListData\n  }));\n  useEffect(() => {\n    dispatch(fetchCompanyList());\n    dispatch(getBaseUnit_ForDropDown());\n    dispatch(get_CategoryTypes_ForDropDown());\n    dispatch(get_Category_ForDropDown());\n    dispatch(get_SubCategory_ForDropDown());\n    dispatch(getDivisionTypelist());\n  }, [dispatch]);\n\n  const toggle1 = tab => {\n    if (activeTab1 !== tab) {\n      setactiveTab1(tab);\n    }\n  };\n\n  const Company_DropdownOptions = companyList.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function CompanyList_DropDown_handller(e) {\n    setCompanyList_dropdown_Select(e);\n  }\n\n  const BaseUnit_DropdownOptions = BaseUnit.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const PriceList_DropdownOptions = BaseUnit.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const BaseUnit_DropdownOptions2 = BaseUnit.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const CategoryType_DropdownOptions = CategoryType.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function CategoryType_DropDown_handller(e) {\n    setCategoryType_dropdown_Select(e);\n  }\n\n  const Category_DropdownOptions = Category.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const SubCategory_DropdownOptions = SubCategory.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const DivisionType_DropdownOptions = DivisionType.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function MultipleAddRow_Button_Handler_tab3() {\n    var newarr = [...baseUnitTableData, {\n      conversionRatio: '',\n      toBaseUnit: ''\n    }];\n    setBaseUnitTableData(newarr);\n  }\n\n  function BaseUnit_DropDown_handller(e) {\n    setBaseUnit_dropdown_Select(e);\n  }\n\n  function PriceList_DropDown_handller(e) {\n    setPriceList_Dropdown_Selecte(e);\n  }\n\n  function DivisionType_DropDown_handller(e) {\n    setDivisionType_dropdown_Select(e);\n  } // for image upload\n\n\n  function handleAcceptedFiles(files) {\n    files.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file),\n      formattedSize: formatBytes(file.size)\n    }));\n    setselectedFiles(files);\n    console.log(\"f\", files);\n  }\n\n  function formatBytes(bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  }\n\n  function Common_DropDown_handller_tabe_2(event, key, type) {\n    debugger;\n    var found = multiCat.find((i, k) => {\n      return k === key;\n    });\n    let newSelectValue = '';\n\n    if (type === \"CategoryType\") {\n      newSelectValue = {\n        CategoryType: event,\n        Category: found.Category,\n        SubCategory: found.SubCategory\n      };\n    } else if (type === 'Category') {\n      newSelectValue = {\n        CategoryType: found.CategoryType,\n        Category: event,\n        SubCategory: found.SubCategory\n      };\n    } else {\n      newSelectValue = {\n        CategoryType: found.CategoryType,\n        Category: found.Category,\n        SubCategory: event\n      };\n    }\n\n    let newTabArr = multiCat.map((index, k) => {\n      return k === key ? newSelectValue : index;\n    });\n    setMultiCat(newTabArr);\n  }\n\n  function MuliSelectTab2Handler(key) {\n    var newarr = [...multiCat, {\n      CategoryType: {\n        value: 0,\n        label: \"select\"\n      },\n      Category: {\n        value: 0,\n        label: \"select\"\n      },\n      SubCategory: {\n        value: 0,\n        label: \"select\"\n      }\n    }];\n    setMultiCat(newarr);\n  }\n\n  function MulitDeletrTab_2Handler(key) {\n    var removeElseArrray = multiCat.filter((i, k) => {\n      return !(k === key);\n    });\n    setMultiCat(removeElseArrray);\n  } /// Role Table Validation\n\n\n  function AddDivisionHandler() {\n    const find = divisionTypeData.find(element => {\n      return element.value === divisionType_dropdown_Select.value;\n    });\n\n    if (divisionType_dropdown_Select.length <= 0) {\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: \"Select One Role\"\n      }));\n    } else if (find === undefined) {\n      setDivisionTypeData([...divisionTypeData, divisionType_dropdown_Select]);\n    } else {\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: \"DivisionType already Exists \"\n      }));\n    }\n  } // For Delete Button in table\n\n\n  function UserRoles_DeleteButton_Handller(tableValue) {\n    setDivisionTypeData(divisionTypeData.filter(item => !(item.value === tableValue)));\n  }\n\n  function BaseUnitTable_Delete_Row_Handller_tab_3(key) {\n    var removeElseArrray = baseUnitTableData.filter((i, k) => {\n      return !(k === key);\n    });\n    setBaseUnitTableData(removeElseArrray);\n  }\n\n  function BaseUnit2_DropDown_handller(event, key, type) {\n    let newSelectValue = '';\n    var found = baseUnitTableData.find((i, k) => {\n      return k === key;\n    });\n\n    if (type === \"Conversion\") {\n      newSelectValue = {\n        conversionRatio: event.target.value,\n        toBaseUnit: found.toBaseUnit\n      };\n    } else if (type === 'BaseUnit') {\n      newSelectValue = {\n        conversionRatio: found.conversionRatio,\n        toBaseUnit: event\n      };\n    }\n\n    let newTabArr = baseUnitTableData.map((index, k) => {\n      return k === key ? newSelectValue : index;\n    });\n    setBaseUnitTableData(newTabArr); // setBaseUnit_dropdown_Select2(e)\n  }\n\n  let base64String = \"\";\n  let imageBase64Stringsep = '';\n\n  function imageUploaded() {\n    debugger;\n    var file = document.querySelector('input[type=file]')['files'][0];\n    var reader = new FileReader();\n    console.log(\"next\");\n\n    reader.onload = function () {\n      base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n      imageBase64Stringsep = base64String;\n      alert(imageBase64Stringsep);\n      console.log(base64String);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  console.log(\"base64String\", base64String); // function displayString() {\n  //     console.log(\"Base64String about to be printed\");\n  //     alert(base64String);\n  // }\n\n  var image = \"iVBORw0KGgoAAAANSUhEUgAABkAAAAOECAYAAAD5Tf2iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAP + lSURBVHhe7N0JYBTl / T7wZ++chAQSAuE+RU5FAQUFD1DxtrXWaj1rtZ7VerS1h / 9ftdbaWo9qa6231ra2XqgoWAQFOZX7vkOAkIQQcm42uzv / 9 / vOTLK5rw05eD7wZmfeOXZ2993Z3fc77 / s6Hv5vjoFm6B7nQkaKG3E + FxJiHPC6ndYSIiAQDKPYb6CkPIT9h0MoKAlaS + riUCkMw3DA4ZBiKPNENkOXDaiy4YCcZxo6VbEsUUNYlihaWJYoWliWKFpYlihaWJYoWliWKBqaU46IiBrWrADI8N4 + DErzWnNEjduZE8C2A + XWXBVDlToHv9tQM9T3dZhliZqLZYmihWWJooVliaKFZYmihWWJooVliaKhvnJERNQUEkZtkknDYhn8oGYbrMrM5KGx1pzJUP / 4RYeaSxcZ + ZYcgWWJWoJliaKFZYmihWWJooVliaKFZYmihWWJoqGuckRE1FRNCoAMTfeie5zbmiNqnqR4N4b0soNn6ouO + dFF1HzqW7J8WTaxLFErsCxRtLAsUbSwLFG0sCxRtLAsUbSwLFE0VCtHUVBVJGuL4t0QUftrNACSFOfCkF4 + a46oZYam + 9BNlSX1iWVmELWQ / rKsixHLErUOyxJFC8sSRQvLEkULyxJFC8sSRQvLEkWDLkfRYu + qrl3WzGNAhKhTazQA0q + Hx5oiap2 + KWxFRNFhsOkrRQnLEkULyxJFC8sSRQvLEkULyxJFC8sSRUNUW4E0FeN2RJ1aowGQuJgmDxNC1KB4H8sSERERERERERG1VAuiEYb + \"; // '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.2\" baseProfile=\"tiny\" width=\"47.4\" height=\"40.65\" viewBox=\"21 18.5 158 135.5\"><path d=\"M25,50 l150,0 0,100 -150,0 z\" stroke-width=\"4\" stroke=\"black\" fill=\"rgb(128,224,255)\" fill-opacity=\"1\" ></path><path d=\"M25,50 L175,150 M25,150 L175,50\" stroke-width=\"4\" stroke=\"black\" fill=\"black\" ></path><g transform=\"translate(0,0)\" stroke-width=\"4\" stroke=\"black\" fill=\"none\" ><circle cx=\"100\" cy=\"30\" r=\"7.5\" fill=\"black\" ></circle><circle cx=\"70\" cy=\"30\" r=\"7.5\" fill=\"black\" ></circle><circle cx=\"130\" cy=\"30\" r=\"7.5\" fill=\"black\" ></circle></g></svg>';\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Tabs & Accordions | Minia - React Admin & Dashboard Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          children: [/*#__PURE__*/_jsxDEV(BreadcrumbDemo, {\n            title: \"Components\",\n            breadcrumbItem: \"Tabs & Accordions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                    className: \"h4\",\n                    children: \"Justify Tabs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(Nav, {\n                    tabs: true,\n                    className: \"nav-tabs-custom nav-justified\",\n                    children: [/*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"1\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"1\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 367,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Basic Info\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 369,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 357,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"2\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"2\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 383,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 382,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Category\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"3\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"3\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 400,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 399,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Unit Conversions\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 402,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"4\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"4\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 416,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 415,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Image\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 418,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"5\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"5\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 432,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 431,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Division\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 434,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"6\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"6\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 448,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 447,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Rate Details\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 450,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"7\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"7\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 466,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 465,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Margin\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 468,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        } // className={classnames({\n                        //     active: activeTab1 === \"7\",\n                        // })}\n                        // onClick={() => {\n                        //     toggle1(\"7\")\n                        // }}\n                        ,\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 483,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 482,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          children: \" save\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 486,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 473,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n                    activeTab: activeTab1,\n                    className: \"p-3 text-muted\",\n                    children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"1\",\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: 12,\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          className: \"text-black\",\n                          children: /*#__PURE__*/_jsxDEV(CardBody, {\n                            style: {\n                              backgroundColor: \"whitesmoke\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3 col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \"Name\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 498,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                  name: \"Name\",\n                                  value: \"\",\n                                  type: \"text\",\n                                  id: \"txtName\",\n                                  placeholder: \" Please Enter Name \",\n                                  autoComplete: \"off\",\n                                  validate: {\n                                    required: {\n                                      value: true,\n                                      errorMessage: 'Please Enter Name'\n                                    }\n                                  },\n                                  onChange: e => {\n                                    setName(e.target.value);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 499,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 497,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3 col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \"ShortName\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 510,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                  name: \"Name\",\n                                  value: \"\",\n                                  type: \"text\",\n                                  id: \"txtName\",\n                                  placeholder: \" Please Enter ShortName \",\n                                  autoComplete: \"off\",\n                                  validate: {\n                                    required: {\n                                      value: true,\n                                      errorMessage: 'Please Enter Name'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 511,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 509,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \" col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom21\",\n                                  children: \"Company\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 521,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                  value: companyList_dropdown_Select,\n                                  options: Company_DropdownOptions,\n                                  onChange: e => {\n                                    CompanyList_DropDown_handller(e);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 522,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 520,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \" col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom21\",\n                                  children: \"Base Unit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 530,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                  value: BaseUnit_dropdown_Select,\n                                  options: BaseUnit_DropdownOptions,\n                                  onChange: e => {\n                                    BaseUnit_DropDown_handller(e);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 531,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 529,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3 col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \"BarCode\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 539,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                  name: \"Name\",\n                                  value: \"\",\n                                  type: \"text\",\n                                  id: \"txtName\",\n                                  placeholder: \" Please Enter BarCode \",\n                                  autoComplete: \"off\",\n                                  validate: {\n                                    required: {\n                                      value: true,\n                                      errorMessage: 'Please Enter BarCode'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 540,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 538,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3 col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \"Sequence\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 550,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                  name: \"Name\",\n                                  value: \"\",\n                                  type: \"text\",\n                                  id: \"txtName\",\n                                  placeholder: \" Please Enter Sequence \",\n                                  autoComplete: \"off\",\n                                  validate: {\n                                    required: {\n                                      value: true,\n                                      errorMessage: 'Please Enter Sequence'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 551,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 549,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-2 col col-sm-5\",\n                                children: /*#__PURE__*/_jsxDEV(Row, {\n                                  className: \"justify-content-md-left\",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"horizontal-firstname-input\",\n                                    className: \"col-sm-2 col-form-label\",\n                                    children: \"Active \"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 561,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                    md: 2,\n                                    style: {\n                                      marginTop: '9px'\n                                    },\n                                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"form-check form-switch form-switch-md mb-3\",\n                                      dir: \"ltr\",\n                                      children: /*#__PURE__*/_jsxDEV(AvInput, {\n                                        type: \"checkbox\",\n                                        className: \"form-check-input\",\n                                        id: \"customSwitchsizemd\",\n                                        checked: \"\",\n                                        defaultChecked: true,\n                                        name: \"isActive\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 565,\n                                        columnNumber: 81\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 564,\n                                      columnNumber: 77\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 562,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 560,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 559,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 495,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 494,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 493,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"2\",\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: 12,\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          className: \"text-black\",\n                          children: /*#__PURE__*/_jsxDEV(CardBody, {\n                            style: {\n                              backgroundColor: \"whitesmoke\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                children: [\"Item Name :\", /*#__PURE__*/_jsxDEV(Label, {\n                                  className: \"text-primary\",\n                                  children: name\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 587,\n                                  columnNumber: 80\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 587,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 586,\n                              columnNumber: 61\n                            }, this), multiCat.map((index, key) => {\n                              return /*#__PURE__*/_jsxDEV(Row, {\n                                className: \"mt-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Col, {\n                                  className: \" col col-11 \",\n                                  children: /*#__PURE__*/_jsxDEV(Row, {\n                                    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                      className: \" col col-sm-4 \",\n                                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                                        htmlFor: \"validationCustom21\",\n                                        children: \"Category Type\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 595,\n                                        columnNumber: 81\n                                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                        value: multiCat[key].CategoryType,\n                                        options: CategoryType_DropdownOptions,\n                                        onChange: e => {\n                                          Common_DropDown_handller_tabe_2(e, key, \"CategoryType\");\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 596,\n                                        columnNumber: 81\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 594,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                      className: \" col col-sm-4 \",\n                                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                                        htmlFor: \"validationCustom21\",\n                                        children: \"Category\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 604,\n                                        columnNumber: 81\n                                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                        value: multiCat[key].Category,\n                                        options: Category_DropdownOptions,\n                                        onChange: e => {\n                                          Common_DropDown_handller_tabe_2(e, key, \"Category\");\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 605,\n                                        columnNumber: 81\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 603,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                      className: \" col col-sm-4 \",\n                                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                                        htmlFor: \"validationCustom21\",\n                                        children: \"Sub Category\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 613,\n                                        columnNumber: 81\n                                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                        value: multiCat[key].SubCategory,\n                                        options: SubCategory_DropdownOptions,\n                                        onChange: e => {\n                                          Common_DropDown_handller_tabe_2(e, key, \"SubCategory\");\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 614,\n                                        columnNumber: 81\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 612,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 593,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 592,\n                                  columnNumber: 69\n                                }, this), multiCat.length === key + 1 ? /*#__PURE__*/_jsxDEV(Col, {\n                                  className: \"col col-1 mt-3\",\n                                  children: /*#__PURE__*/_jsxDEV(Button, {\n                                    className: \"btn btn-sm btn-light mt-3 \",\n                                    type: \"button\",\n                                    onClick: () => {\n                                      MuliSelectTab2Handler(key);\n                                    },\n                                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"dripicons-plus\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 627,\n                                      columnNumber: 81\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 624,\n                                    columnNumber: 77\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 623,\n                                  columnNumber: 73\n                                }, this) : /*#__PURE__*/_jsxDEV(Col, {\n                                  className: \"col col-1 mt-3\",\n                                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                    className: \"mdi mdi-trash-can d-block text-danger font-size-20 mt-3\",\n                                    onClick: () => {\n                                      MulitDeletrTab_2Handler(key);\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 639,\n                                    columnNumber: 77\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 637,\n                                  columnNumber: 75\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 591,\n                                columnNumber: 72\n                              }, this);\n                            })]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 584,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 583,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 582,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 581,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"3\",\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: 12,\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 12,\n                            children: /*#__PURE__*/_jsxDEV(Card, {\n                              className: \"text-black\",\n                              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                                style: {\n                                  backgroundColor: \"whitesmoke\"\n                                },\n                                children: [/*#__PURE__*/_jsxDEV(Row, {\n                                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                    children: [\"Item Name :\", /*#__PURE__*/_jsxDEV(Label, {\n                                      className: \"text-primary\",\n                                      children: name\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 667,\n                                      columnNumber: 88\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 667,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 666,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                    className: \" col col-sm-4 \",\n                                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                                      children: \"Base Unit\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 672,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                      value: BaseUnit_dropdown_Select,\n                                      options: BaseUnit_DropdownOptions,\n                                      onChange: BaseUnit_DropDown_handller\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 673,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 671,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 670,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                  className: \"mt-3\",\n                                  children: /*#__PURE__*/_jsxDEV(Col, {\n                                    md: 8,\n                                    children: /*#__PURE__*/_jsxDEV(Table, {\n                                      className: \"table table-bordered  text-center \",\n                                      children: [/*#__PURE__*/_jsxDEV(Thead, {\n                                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                            children: \"Unit Name\"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 688,\n                                            columnNumber: 85\n                                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                            className: \"col-sm-3 text-center\",\n                                            children: \"Conversion Ratio \"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 690,\n                                            columnNumber: 85\n                                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                            children: \" To Base Unit\"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 691,\n                                            columnNumber: 85\n                                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                            children: \"Action\"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 692,\n                                            columnNumber: 85\n                                          }, this)]\n                                        }, void 0, true, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 687,\n                                          columnNumber: 81\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 686,\n                                        columnNumber: 77\n                                      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                                        children: baseUnitTableData.map((TableValue, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                                              children: \"1\"\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 699,\n                                              columnNumber: 93\n                                            }, this), \"    \", BaseUnit_dropdown_Select.label]\n                                          }, void 0, true, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 698,\n                                            columnNumber: 89\n                                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                            children: /*#__PURE__*/_jsxDEV(AvInput, {\n                                              name: \"value\",\n                                              type: \"text\",\n                                              defaultValue: TableValue.conversionRatio,\n                                              onChange: e => BaseUnit2_DropDown_handller(e, key, \"Conversion\")\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 702,\n                                              columnNumber: 93\n                                            }, this)\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 701,\n                                            columnNumber: 89\n                                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                            children: /*#__PURE__*/_jsxDEV(Select // placeholder=\"select unit\"\n                                            , {\n                                              value: TableValue.toBaseUnit,\n                                              options: BaseUnit_DropdownOptions2,\n                                              onChange: e => BaseUnit2_DropDown_handller(e, key, \"BaseUnit\")\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 707,\n                                              columnNumber: 93\n                                            }, this)\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 706,\n                                            columnNumber: 89\n                                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                            children: baseUnitTableData.length === key + 1 ? /*#__PURE__*/_jsxDEV(Row, {\n                                              className: \"\",\n                                              children: [/*#__PURE__*/_jsxDEV(Col, {\n                                                children: /*#__PURE__*/_jsxDEV(Button, {\n                                                  className: \"btn btn-sm btn-light mt-3 col col-6  align-items-sm-end\",\n                                                  type: \"button\",\n                                                  onClick: () => {\n                                                    MultipleAddRow_Button_Handler_tab3(key);\n                                                  },\n                                                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                                    className: \"dripicons-plus\"\n                                                  }, void 0, false, {\n                                                    fileName: _jsxFileName,\n                                                    lineNumber: 721,\n                                                    columnNumber: 109\n                                                  }, this)\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 718,\n                                                  columnNumber: 105\n                                                }, this)\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 717,\n                                                columnNumber: 101\n                                              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                                className: \"mt-3\",\n                                                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                                  className: \"mdi mdi-trash-can d-block text-danger font-size-20\",\n                                                  onClick: () => {\n                                                    BaseUnitTable_Delete_Row_Handller_tab_3(key);\n                                                  }\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 725,\n                                                  columnNumber: 105\n                                                }, this)\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 724,\n                                                columnNumber: 101\n                                              }, this)]\n                                            }, void 0, true, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 716,\n                                              columnNumber: 97\n                                            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                                              className: \"mdi mdi-trash-can d-block text-danger font-size-20\",\n                                              onClick: () => {\n                                                BaseUnitTable_Delete_Row_Handller_tab_3(key);\n                                              }\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 733,\n                                              columnNumber: 97\n                                            }, this)\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 714,\n                                            columnNumber: 89\n                                          }, this)]\n                                        }, void 0, true, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 697,\n                                          columnNumber: 85\n                                        }, this))\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 695,\n                                        columnNumber: 77\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 685,\n                                      columnNumber: 85\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 685,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 684,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 664,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 663,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 662,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 661,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 660,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 659,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          className: \"col-12\",\n                          children: /*#__PURE__*/_jsxDEV(Card, {\n                            children: /*#__PURE__*/_jsxDEV(CardBody, {\n                              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"file\",\n                                name: \"\",\n                                id: \"fileId\",\n                                onChange: () => imageUploaded()\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 771,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 773,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                                src: `data:image/png;base64,${base64String}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 774,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 775,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 776,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 777,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 778,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n                                onDrop: acceptedFiles => {\n                                  handleAcceptedFiles(acceptedFiles);\n                                },\n                                children: _ref => {\n                                  let {\n                                    getRootProps,\n                                    getInputProps\n                                  } = _ref;\n                                  return (\n                                    /*#__PURE__*/\n                                    // <div className=\"dropzone\">\n                                    _jsxDEV(\"div\", {\n                                      className: \"dz-message needsclick mt-2\",\n                                      ...getRootProps(),\n                                      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 791,\n                                        columnNumber: 77\n                                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                        className: \"mb-3\",\n                                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                          className: \"display-6 text-muted bx  bx bx-cloud-upload\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 795,\n                                          columnNumber: 81\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 793,\n                                        columnNumber: 77\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 787,\n                                      columnNumber: 73\n                                    }, this) // </div>\n\n                                  );\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 780,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"dropzone-previews mt-3\",\n                                id: \"file-previews\",\n                                children: selectedFiles.map((index, i) => {\n                                  return /*#__PURE__*/_jsxDEV(Card, {\n                                    className: \"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\",\n                                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"p-2\",\n                                      children: /*#__PURE__*/_jsxDEV(Row, {\n                                        className: \"align-items-center\",\n                                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                                          className: \"col-auto\",\n                                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                            \"data-dz-thumbnail\": \"\",\n                                            height: \"80\",\n                                            className: \"avatar-sm rounded bg-light\",\n                                            alt: index.name,\n                                            src: index.preview\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 812,\n                                            columnNumber: 93\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 811,\n                                          columnNumber: 89\n                                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                          children: [/*#__PURE__*/_jsxDEV(Link, {\n                                            to: \"#\",\n                                            className: \"text-muted font-weight-bold\",\n                                            children: index.name\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 822,\n                                            columnNumber: 93\n                                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                            className: \"mb-0\",\n                                            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                                              children: index.formattedSize\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 829,\n                                              columnNumber: 97\n                                            }, this)\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 828,\n                                            columnNumber: 93\n                                          }, this)]\n                                        }, void 0, true, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 821,\n                                          columnNumber: 89\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 810,\n                                        columnNumber: 85\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 809,\n                                      columnNumber: 81\n                                    }, this)\n                                  }, i + \"-file\", false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 805,\n                                    columnNumber: 77\n                                  }, this);\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 802,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"text-center mt-4\",\n                                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                                  type: \"button\",\n                                  className: \"btn btn-primary \",\n                                  children: \"Upload\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 841,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 840,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                                action: \"/action_page.php\",\n                                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"file\",\n                                  id: \"myFile\",\n                                  name: \"filename\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 849,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"submit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 850,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 848,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 761,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 760,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 759,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 758,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 757,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"5\",\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          md: 12,\n                          children: /*#__PURE__*/_jsxDEV(Card, {\n                            className: \"text-black\",\n                            children: /*#__PURE__*/_jsxDEV(CardBody, {\n                              style: {\n                                backgroundColor: \"whitesmoke\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Row, {\n                                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                  children: [\"Item Name :\", /*#__PURE__*/_jsxDEV(Label, {\n                                    className: \"text-primary\",\n                                    children: name\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 865,\n                                    columnNumber: 84\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 865,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 864,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \" col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom21\",\n                                    children: \"Division Type\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 871,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    value: divisionType_dropdown_Select,\n                                    options: DivisionType_DropdownOptions,\n                                    onChange: e => {\n                                      DivisionType_DropDown_handller(e);\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 872,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 870,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                  sm: 1,\n                                  style: {\n                                    marginTop: '28px'\n                                  },\n                                  children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                                    type: \"button\",\n                                    className: \"btn btn-sm mt-1 mb-0 btn-light  btn-outline-primary  \",\n                                    onClick: () => AddDivisionHandler(),\n                                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"dripicons-plus \"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 887,\n                                      columnNumber: 77\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 880,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 878,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                  sm: 3,\n                                  style: {\n                                    marginTop: '28px'\n                                  },\n                                  children: divisionTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"table-responsive\",\n                                    children: /*#__PURE__*/_jsxDEV(Table, {\n                                      className: \"table table-bordered  text-center\",\n                                      children: [/*#__PURE__*/_jsxDEV(Thead, {\n                                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                            children: \"Division Type\"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 897,\n                                            columnNumber: 93\n                                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                            children: \"Action\"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 899,\n                                            columnNumber: 93\n                                          }, this)]\n                                        }, void 0, true, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 896,\n                                          columnNumber: 89\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 895,\n                                        columnNumber: 85\n                                      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                                        children: divisionTypeData.map(TableValue => /*#__PURE__*/_jsxDEV(\"tr\", {\n                                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                            children: TableValue.label\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 905,\n                                            columnNumber: 97\n                                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                              className: \"mdi mdi-trash-can d-block text-danger font-size-20\",\n                                              onClick: () => {\n                                                UserRoles_DeleteButton_Handller(TableValue.value);\n                                              }\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 909,\n                                              columnNumber: 101\n                                            }, this)\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 908,\n                                            columnNumber: 97\n                                          }, this)]\n                                        }, void 0, true, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 904,\n                                          columnNumber: 93\n                                        }, this))\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 902,\n                                        columnNumber: 85\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 894,\n                                      columnNumber: 81\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 893,\n                                    columnNumber: 77\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 890,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 869,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 862,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 861,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 860,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 859,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 858,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          md: 12,\n                          children: /*#__PURE__*/_jsxDEV(Card, {\n                            className: \"text-black\",\n                            children: /*#__PURE__*/_jsxDEV(CardBody, {\n                              style: {\n                                backgroundColor: \"whitesmoke\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Row, {\n                                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                  children: [\"Item Name :\", /*#__PURE__*/_jsxDEV(Label, {\n                                    className: \"text-primary\",\n                                    children: name\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 938,\n                                    columnNumber: 84\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 938,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 937,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"MRP\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 942,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                    name: \"MRP\",\n                                    value: \"\",\n                                    type: \"text\",\n                                    id: \"txtName\",\n                                    placeholder: \" Please Enter MRP \",\n                                    autoComplete: \"off\",\n                                    validate: {\n                                      required: {\n                                        value: true,\n                                        errorMessage: 'Please Enter MRP '\n                                      }\n                                    },\n                                    onChange: e => {\n                                      setName(e.target.value);\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 943,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 941,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"GST\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 954,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                    name: \"GST\",\n                                    value: \"\",\n                                    type: \"text\",\n                                    id: \"txtName\",\n                                    placeholder: \" Please Enter GST \",\n                                    autoComplete: \"off\",\n                                    validate: {\n                                      required: {\n                                        value: true,\n                                        errorMessage: 'Please Enter GST'\n                                      }\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 955,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 953,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 940,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"HSN\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 967,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                    name: \"HSN\",\n                                    value: \"\",\n                                    type: \"text\",\n                                    id: \"txtName\",\n                                    placeholder: \" Please Enter HSN \",\n                                    autoComplete: \"off\",\n                                    validate: {\n                                      required: {\n                                        value: true,\n                                        errorMessage: 'Please Enter HSN'\n                                      }\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 968,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 966,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 965,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 936,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 935,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 934,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 933,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 932,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"7\",\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          md: 12,\n                          children: /*#__PURE__*/_jsxDEV(Card, {\n                            className: \"text-black\",\n                            children: /*#__PURE__*/_jsxDEV(CardBody, {\n                              style: {\n                                backgroundColor: \"whitesmoke\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Row, {\n                                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                  children: [\"Item Name :\", /*#__PURE__*/_jsxDEV(Label, {\n                                    className: \"text-primary\",\n                                    children: name\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 991,\n                                    columnNumber: 84\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 991,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 990,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \" col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    children: \"Price List\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 996,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                    value: priceList_Dropdown_Select,\n                                    options: PriceList_DropdownOptions,\n                                    onChange: () => {\n                                      PriceList_DropDown_handller();\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 997,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 995,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"Margin\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1005,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                    name: \"GST\",\n                                    value: \"\",\n                                    type: \"text\",\n                                    id: \"txtName\",\n                                    placeholder: \" Please Enter GST \",\n                                    autoComplete: \"off\",\n                                    validate: {\n                                      required: {\n                                        value: true,\n                                        errorMessage: 'Please Enter GST'\n                                      }\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1006,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1004,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 993,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1017,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 989,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 988,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 987,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 986,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 985,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemsMaster, \"+S4sb9Ss/DVuoG+2hRU3hDflfPg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ItemsMaster;\nexport default ItemsMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsMaster\");","map":{"version":3,"names":["React","useEffect","useState","MetaTags","Button","Card","CardBody","CardHeader","CardSubtitle","CardText","CardTitle","Col","Container","Form","FormGroup","Label","Nav","NavItem","NavLink","Row","TabContent","Table","TabPane","Link","useDispatch","useSelector","classnames","BreadcrumbDemo","AvField","AvForm","AvInput","Select","fetchCompanyList","getBaseUnit_ForDropDown","get_CategoryTypes_ForDropDown","get_Category_ForDropDown","get_SubCategory_ForDropDown","getDivisionTypelist","Dropzone","AlertState","Tbody","Thead","ItemsMaster","selectedFiles","setselectedFiles","dispatch","activeTab1","setactiveTab1","companyList_dropdown_Select","setCompanyList_dropdown_Select","BaseUnit_dropdown_Select","setBaseUnit_dropdown_Select","BaseUnit_dropdown_Select2","setBaseUnit_dropdown_Select2","categoryType_dropdown_Select","setCategoryType_dropdown_Select","category_dropdown_Select","setCategory_dropdown_Select","subCategory_dropdown_Select","setsubCategory_dropdown_Select","divisionType_dropdown_Select","setDivisionType_dropdown_Select","name","setName","DefaultBaseUnit","setDefaultBaseUnit","multiCat","setMultiCat","CategoryType","Category","SubCategory","divisionTypeData","setDivisionTypeData","priceList_Dropdown_Select","setPriceList_Dropdown_Selecte","baseUnitTableData","setBaseUnitTableData","conversionRatio","toBaseUnit","companyList","BaseUnit","DivisionType","state","Company","ItemMastersReducer","DivisionTypeReducer","ListData","toggle1","tab","Company_DropdownOptions","map","data","value","id","label","Name","CompanyList_DropDown_handller","e","BaseUnit_DropdownOptions","PriceList_DropdownOptions","BaseUnit_DropdownOptions2","CategoryType_DropdownOptions","CategoryType_DropDown_handller","Category_DropdownOptions","SubCategory_DropdownOptions","DivisionType_DropdownOptions","MultipleAddRow_Button_Handler_tab3","newarr","BaseUnit_DropDown_handller","PriceList_DropDown_handller","DivisionType_DropDown_handller","handleAcceptedFiles","files","file","Object","assign","preview","URL","createObjectURL","formattedSize","formatBytes","size","console","log","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","Common_DropDown_handller_tabe_2","event","key","type","found","find","newSelectValue","newTabArr","index","MuliSelectTab2Handler","MulitDeletrTab_2Handler","removeElseArrray","filter","AddDivisionHandler","element","length","Type","Status","Message","undefined","UserRoles_DeleteButton_Handller","tableValue","item","BaseUnitTable_Delete_Row_Handller_tab_3","BaseUnit2_DropDown_handller","target","base64String","imageBase64Stringsep","imageUploaded","document","querySelector","reader","FileReader","onload","result","replace","alert","readAsDataURL","image","cursor","active","backgroundColor","required","errorMessage","marginTop","TableValue","acceptedFiles","getRootProps","getInputProps"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/ItemPages/ItemMaster.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport MetaTags from \"react-meta-tags\"\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardSubtitle,\r\n    CardText,\r\n    CardTitle,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    TabContent,\r\n    Table,\r\n    TabPane,\r\n} from \"reactstrap\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classnames from \"classnames\"\r\nimport BreadcrumbDemo from \"../../../components/Common/CmponentRelatedCommonFile/BreadcrumbDemo\"\r\nimport { AvField, AvForm, AvInput } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\nimport { fetchCompanyList } from \"../../../store/Administrator/CompanyRedux/actions\"\r\nimport { getBaseUnit_ForDropDown, get_CategoryTypes_ForDropDown, get_Category_ForDropDown, get_SubCategory_ForDropDown } from \"../../../store/Administrator/ItemsRedux/action\";\r\nimport { getDivisionTypelist } from \"../../../store/Administrator/DivisionTypeRedux/action\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { Tbody, Thead } from \"react-super-responsive-table\";\r\n\r\nconst ItemsMaster = () => {\r\n    const [selectedFiles, setselectedFiles] = useState([])\r\n    const dispatch = useDispatch();\r\n    const [activeTab1, setactiveTab1] = useState(\"1\")\r\n    const [companyList_dropdown_Select, setCompanyList_dropdown_Select] = useState(\"\");\r\n    const [BaseUnit_dropdown_Select, setBaseUnit_dropdown_Select] = useState(\"\");\r\n    const [BaseUnit_dropdown_Select2, setBaseUnit_dropdown_Select2] = useState(\"\");\r\n    const [categoryType_dropdown_Select, setCategoryType_dropdown_Select] = useState(\"\");\r\n    const [category_dropdown_Select, setCategory_dropdown_Select] = useState(\"\");\r\n    const [subCategory_dropdown_Select, setsubCategory_dropdown_Select] = useState(\"\");\r\n    const [divisionType_dropdown_Select, setDivisionType_dropdown_Select] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [DefaultBaseUnit, setDefaultBaseUnit] = useState(\"\");\r\n    const [multiCat, setMultiCat] = useState([{\r\n        CategoryType: '',\r\n        Category: '',\r\n        SubCategory: ''\r\n    },\r\n    ]);\r\n    const [divisionTypeData, setDivisionTypeData] = useState([]);\r\n    const [priceList_Dropdown_Select, setPriceList_Dropdown_Selecte] = useState([]);\r\n    const [baseUnitTableData, setBaseUnitTableData] = useState([{\r\n        conversionRatio: '',\r\n        toBaseUnit: '',\r\n    }]);\r\n\r\n\r\n    const { companyList, BaseUnit, CategoryType, Category, SubCategory, DivisionType } = useSelector((state) => ({\r\n        companyList: state.Company.companyList,\r\n        BaseUnit: state.ItemMastersReducer.BaseUnit,\r\n        CategoryType: state.ItemMastersReducer.CategoryType,\r\n        Category: state.ItemMastersReducer.Category,\r\n        SubCategory: state.ItemMastersReducer.SubCategory,\r\n        DivisionType: state.DivisionTypeReducer.ListData,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCompanyList());\r\n        dispatch(getBaseUnit_ForDropDown());\r\n        dispatch(get_CategoryTypes_ForDropDown());\r\n        dispatch(get_Category_ForDropDown());\r\n        dispatch(get_SubCategory_ForDropDown());\r\n        dispatch(getDivisionTypelist());\r\n    }, [dispatch]);\r\n\r\n    const toggle1 = tab => {\r\n        if (activeTab1 !== tab) {\r\n            setactiveTab1(tab)\r\n        }\r\n    }\r\n\r\n    const Company_DropdownOptions = companyList.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function CompanyList_DropDown_handller(e) {\r\n        setCompanyList_dropdown_Select(e)\r\n    }\r\n\r\n    const BaseUnit_DropdownOptions = BaseUnit.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    const PriceList_DropdownOptions = BaseUnit.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n    const BaseUnit_DropdownOptions2 = BaseUnit.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n    const CategoryType_DropdownOptions = CategoryType.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function CategoryType_DropDown_handller(e) {\r\n        setCategoryType_dropdown_Select(e)\r\n    }\r\n    const Category_DropdownOptions = Category.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n    const SubCategory_DropdownOptions = SubCategory.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    const DivisionType_DropdownOptions = DivisionType.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function MultipleAddRow_Button_Handler_tab3() {\r\n        var newarr = [...baseUnitTableData, {\r\n            conversionRatio: '',\r\n            toBaseUnit: '',\r\n        }]\r\n        setBaseUnitTableData(newarr)\r\n    }\r\n    function BaseUnit_DropDown_handller(e) {\r\n        setBaseUnit_dropdown_Select(e)\r\n    }\r\n    function PriceList_DropDown_handller(e) {\r\n        setPriceList_Dropdown_Selecte(e)\r\n    }\r\n\r\n\r\n    function DivisionType_DropDown_handller(e) {\r\n        setDivisionType_dropdown_Select(e)\r\n    }\r\n\r\n    // for image upload\r\n    function handleAcceptedFiles(files) {\r\n        files.map(file =>\r\n            Object.assign(file, {\r\n                preview: URL.createObjectURL(file),\r\n                formattedSize: formatBytes(file.size),\r\n            })\r\n        )\r\n        setselectedFiles(files)\r\n        console.log(\"f\", files)\r\n    }\r\n\r\n\r\n    function formatBytes(bytes, decimals = 2) {\r\n        if (bytes === 0) return \"0 Bytes\"\r\n        const k = 1024\r\n        const dm = decimals < 0 ? 0 : decimals\r\n        const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\r\n    }\r\n\r\n    function Common_DropDown_handller_tabe_2(event, key, type) {\r\n        debugger\r\n\r\n        var found = multiCat.find((i, k) => {\r\n            return (k === key)\r\n        })\r\n        let newSelectValue = ''\r\n\r\n\r\n        if (type === \"CategoryType\") {\r\n            newSelectValue = {\r\n                CategoryType: event,\r\n                Category: found.Category,\r\n                SubCategory: found.SubCategory\r\n            }\r\n        }\r\n        else if (type === 'Category') {\r\n            newSelectValue = {\r\n                CategoryType: found.CategoryType,\r\n                Category: event,\r\n                SubCategory: found.SubCategory\r\n            }\r\n        } else {\r\n            newSelectValue = {\r\n                CategoryType: found.CategoryType,\r\n                Category: found.Category,\r\n                SubCategory: event\r\n            }\r\n        }\r\n\r\n        let newTabArr = multiCat.map((index, k) => {\r\n            return (k === key) ? newSelectValue : index\r\n        })\r\n        setMultiCat(newTabArr)\r\n    }\r\n    function MuliSelectTab2Handler(key) {\r\n\r\n\r\n        var newarr = [...multiCat, {\r\n            CategoryType: { value: 0, label: \"select\" },\r\n            Category: { value: 0, label: \"select\" },\r\n            SubCategory: { value: 0, label: \"select\" }\r\n        }]\r\n\r\n        setMultiCat(newarr)\r\n    }\r\n    function MulitDeletrTab_2Handler(key) {\r\n\r\n        var removeElseArrray = multiCat.filter((i, k) => {\r\n            return !(k === key)\r\n        })\r\n\r\n        setMultiCat(removeElseArrray)\r\n\r\n    }\r\n\r\n\r\n    /// Role Table Validation\r\n    function AddDivisionHandler() {\r\n        const find = divisionTypeData.find((element) => {\r\n            return element.value === divisionType_dropdown_Select.value\r\n        });\r\n\r\n        if (divisionType_dropdown_Select.length <= 0) {\r\n            dispatch(AlertState({\r\n                Type: 3, Status: true,\r\n                Message: \"Select One Role\",\r\n            }));\r\n        }\r\n        else if (find === undefined) {\r\n            setDivisionTypeData([...divisionTypeData, divisionType_dropdown_Select]);\r\n        }\r\n        else {\r\n            dispatch(AlertState({\r\n                Type: 4, Status: true,\r\n                Message: \"DivisionType already Exists \",\r\n            }));\r\n        }\r\n    }\r\n    // For Delete Button in table\r\n    function UserRoles_DeleteButton_Handller(tableValue) {\r\n        setDivisionTypeData(divisionTypeData.filter(\r\n            (item) => !(item.value === tableValue)\r\n        )\r\n        )\r\n    }\r\n\r\n    function BaseUnitTable_Delete_Row_Handller_tab_3(key) {\r\n\r\n        var removeElseArrray = baseUnitTableData.filter((i, k) => {\r\n            return !(k === key)\r\n        })\r\n\r\n        setBaseUnitTableData(removeElseArrray)\r\n\r\n    }\r\n    function BaseUnit2_DropDown_handller(event, key, type) {\r\n\r\n        let newSelectValue = ''\r\n\r\n        var found = baseUnitTableData.find((i, k) => {\r\n            return (k === key)\r\n        })\r\n\r\n        if (type === \"Conversion\") {\r\n            newSelectValue = {\r\n                conversionRatio: event.target.value,\r\n                toBaseUnit: found.toBaseUnit,\r\n            }\r\n        }\r\n        else if (type === 'BaseUnit') {\r\n            newSelectValue = {\r\n                conversionRatio: found.conversionRatio,\r\n                toBaseUnit: event,\r\n            }\r\n\r\n        }\r\n\r\n        let newTabArr = baseUnitTableData.map((index, k) => {\r\n            return (k === key) ? newSelectValue : index\r\n        })\r\n        setBaseUnitTableData(newTabArr)\r\n        // setBaseUnit_dropdown_Select2(e)\r\n    }\r\n    let base64String = \"\";\r\n    let imageBase64Stringsep = ''\r\n\r\n    function imageUploaded() {\r\n        debugger\r\n        var file = document.querySelector(\r\n            'input[type=file]')['files'][0];\r\n\r\n        var reader = new FileReader();\r\n        console.log(\"next\");\r\n\r\n        reader.onload = function () {\r\n            base64String = reader.result.replace(\"data:\", \"\")\r\n                .replace(/^.+,/, \"\");\r\n\r\n            imageBase64Stringsep = base64String;\r\n\r\n            alert(imageBase64Stringsep);\r\n            console.log(base64String);\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n    console.log(\"base64String\", base64String)\r\n    // function displayString() {\r\n    //     console.log(\"Base64String about to be printed\");\r\n    //     alert(base64String);\r\n    // }\r\n   var  image=\"iVBORw0KGgoAAAANSUhEUgAABkAAAAOECAYAAAD5Tf2iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAP + lSURBVHhe7N0JYBTl / T7wZ++chAQSAuE+RU5FAQUFD1DxtrXWaj1rtZ7VerS1h / 9ftdbaWo9qa6231ra2XqgoWAQFOZX7vkOAkIQQcm42uzv / 9 / vOTLK5rw05eD7wZmfeOXZ2993Z3fc77 / s6Hv5vjoFm6B7nQkaKG3E + FxJiHPC6ndYSIiAQDKPYb6CkPIT9h0MoKAlaS + riUCkMw3DA4ZBiKPNENkOXDaiy4YCcZxo6VbEsUUNYlihaWJYoWliWKFpYlihaWJYoWliWKBqaU46IiBrWrADI8N4 + DErzWnNEjduZE8C2A + XWXBVDlToHv9tQM9T3dZhliZqLZYmihWWJooVliaKFZYmihWWJooVliaKhvnJERNQUEkZtkknDYhn8oGYbrMrM5KGx1pzJUP / 4RYeaSxcZ + ZYcgWWJWoJliaKFZYmihWWJooVliaKFZYmihWWJoqGuckRE1FRNCoAMTfeie5zbmiNqnqR4N4b0soNn6ouO + dFF1HzqW7J8WTaxLFErsCxRtLAsUbSwLFG0sCxRtLAsUbSwLFE0VCtHUVBVJGuL4t0QUftrNACSFOfCkF4 + a46oZYam + 9BNlSX1iWVmELWQ / rKsixHLErUOyxJFC8sSRQvLEkULyxJFC8sSRQvLEkWDLkfRYu + qrl3WzGNAhKhTazQA0q + Hx5oiap2 + KWxFRNFhsOkrRQnLEkULyxJFC8sSRQvLEkULyxJFC8sSRUNUW4E0FeN2RJ1aowGQuJgmDxNC1KB4H8sSERERERERERG1VAuiEYb + \"\r\n    // '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.2\" baseProfile=\"tiny\" width=\"47.4\" height=\"40.65\" viewBox=\"21 18.5 158 135.5\"><path d=\"M25,50 l150,0 0,100 -150,0 z\" stroke-width=\"4\" stroke=\"black\" fill=\"rgb(128,224,255)\" fill-opacity=\"1\" ></path><path d=\"M25,50 L175,150 M25,150 L175,50\" stroke-width=\"4\" stroke=\"black\" fill=\"black\" ></path><g transform=\"translate(0,0)\" stroke-width=\"4\" stroke=\"black\" fill=\"none\" ><circle cx=\"100\" cy=\"30\" r=\"7.5\" fill=\"black\" ></circle><circle cx=\"70\" cy=\"30\" r=\"7.5\" fill=\"black\" ></circle><circle cx=\"130\" cy=\"30\" r=\"7.5\" fill=\"black\" ></circle></g></svg>';\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"page-content\">\r\n                <MetaTags>\r\n                    <title>Tabs & Accordions | Minia - React Admin & Dashboard Template</title>\r\n                </MetaTags>\r\n                <Container fluid>\r\n                    <AvForm >\r\n                        {/* Render Breadcrumbs */}\r\n                        <BreadcrumbDemo title=\"Components\" breadcrumbItem=\"Tabs & Accordions\" />\r\n                        <Row>\r\n\r\n\r\n                            <Col lg={12}>\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <CardTitle className=\"h4\">Justify Tabs</CardTitle>\r\n\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <Nav tabs className=\"nav-tabs-custom nav-justified\">\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"1\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"1\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Basic Info</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"2\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"2\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Category</span>\r\n\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"3\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"3\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Unit Conversions</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"4\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"4\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Image</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"5\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"5\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Division</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"6\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"6\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Rate Details</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n\r\n\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"7\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"7\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Margin</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                // className={classnames({\r\n                                                //     active: activeTab1 === \"7\",\r\n                                                // })}\r\n                                                // onClick={() => {\r\n                                                //     toggle1(\"7\")\r\n                                                // }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    {/* <span className=\"d-none d-sm-block\">Tab7</span> */}\r\n                                                    <Button> save</Button>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                        </Nav>\r\n                                        <TabContent activeTab={activeTab1} className=\"p-3 text-muted\">\r\n                                            <TabPane tabId=\"1\">\r\n                                                <Col md={12}  >\r\n                                                    <Card className=\"text-black\">\r\n                                                        <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                            <Row>\r\n\r\n                                                                <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom01\">Name</Label>\r\n                                                                    <AvField name=\"Name\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                        placeholder=\" Please Enter Name \"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        validate={{\r\n                                                                            required: { value: true, errorMessage: 'Please Enter Name' },\r\n                                                                        }}\r\n                                                                        onChange={(e) => { (setName(e.target.value)) }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom01\">ShortName</Label>\r\n                                                                    <AvField name=\"Name\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                        placeholder=\" Please Enter ShortName \"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        validate={{\r\n                                                                            required: { value: true, errorMessage: 'Please Enter Name' },\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\" col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom21\">Company</Label>\r\n                                                                    <Select\r\n                                                                        value={companyList_dropdown_Select}\r\n                                                                        options={Company_DropdownOptions}\r\n                                                                        onChange={(e) => { CompanyList_DropDown_handller(e) }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\" col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom21\">Base Unit</Label>\r\n                                                                    <Select\r\n                                                                        value={BaseUnit_dropdown_Select}\r\n                                                                        options={BaseUnit_DropdownOptions}\r\n                                                                        onChange={(e) => { BaseUnit_DropDown_handller(e) }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom01\">BarCode</Label>\r\n                                                                    <AvField name=\"Name\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                        placeholder=\" Please Enter BarCode \"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        validate={{\r\n                                                                            required: { value: true, errorMessage: 'Please Enter BarCode' },\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom01\">Sequence</Label>\r\n                                                                    <AvField name=\"Name\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                        placeholder=\" Please Enter Sequence \"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        validate={{\r\n                                                                            required: { value: true, errorMessage: 'Please Enter Sequence' },\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                                <FormGroup className=\"mb-2 col col-sm-5\">\r\n                                                                    <Row className=\"justify-content-md-left\">\r\n                                                                        <Label htmlFor=\"horizontal-firstname-input\" className=\"col-sm-2 col-form-label\" >Active </Label>\r\n                                                                        <Col md={2} style={{ marginTop: '9px' }} >\r\n\r\n                                                                            <div className=\"form-check form-switch form-switch-md mb-3\" dir=\"ltr\">\r\n                                                                                <AvInput type=\"checkbox\" className=\"form-check-input\" id=\"customSwitchsizemd\"\r\n                                                                                    checked={\"\"}\r\n                                                                                    defaultChecked={true}\r\n                                                                                    name=\"isActive\"\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </FormGroup>\r\n                                                            </Row>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n\r\n                                            </TabPane>\r\n\r\n                                            <TabPane tabId=\"2\">\r\n                                                <Col md={12}  >\r\n                                                    <Card className=\"text-black\">\r\n                                                        <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n                                                            <Row>\r\n                                                                <h5>Item Name :<Label className=\"text-primary\" >{name}</Label></h5>\r\n                                                            </Row>\r\n                                                            {multiCat.map((index, key) => {\r\n\r\n                                                                return <Row className=\"mt-3\">\r\n                                                                    <Col className=\" col col-11 \">\r\n                                                                        <Row>\r\n                                                                            <FormGroup className=\" col col-sm-4 \" >\r\n                                                                                <Label htmlFor=\"validationCustom21\">Category Type</Label>\r\n                                                                                <Select\r\n                                                                                    value={multiCat[key].CategoryType}\r\n                                                                                    options={CategoryType_DropdownOptions}\r\n                                                                                    onChange={(e) => { Common_DropDown_handller_tabe_2(e, key, \"CategoryType\") }}\r\n                                                                                />\r\n                                                                            </FormGroup>\r\n\r\n                                                                            <FormGroup className=\" col col-sm-4 \" >\r\n                                                                                <Label htmlFor=\"validationCustom21\">Category</Label>\r\n                                                                                <Select\r\n                                                                                    value={multiCat[key].Category}\r\n                                                                                    options={Category_DropdownOptions}\r\n                                                                                    onChange={(e) => { Common_DropDown_handller_tabe_2(e, key, \"Category\") }}\r\n                                                                                />\r\n                                                                            </FormGroup>\r\n\r\n                                                                            <FormGroup className=\" col col-sm-4 \" >\r\n                                                                                <Label htmlFor=\"validationCustom21\">Sub Category</Label>\r\n                                                                                <Select\r\n                                                                                    value={multiCat[key].SubCategory}\r\n                                                                                    options={SubCategory_DropdownOptions}\r\n                                                                                    onChange={(e) => { Common_DropDown_handller_tabe_2(e, key, \"SubCategory\") }}\r\n                                                                                />\r\n                                                                            </FormGroup>\r\n                                                                        </Row>\r\n                                                                    </Col>\r\n                                                                    {(multiCat.length === key + 1) ?\r\n                                                                        <Col className=\"col col-1 mt-3\">\r\n                                                                            <Button className=\"btn btn-sm btn-light mt-3 \"\r\n                                                                                type=\"button\"\r\n                                                                                onClick={() => { MuliSelectTab2Handler(key) }} >\r\n                                                                                <i className=\"dripicons-plus\"></i></Button>\r\n                                                                            {/* \r\n\r\n                                                                                <i\r\n                                                                                className=\"dripicons-plus text-primary font-size-20 mt-3\"\r\n                                                                                onClick={() => {\r\n                                                                                    MuliSelectTab2Handler(key);\r\n                                                                                }}\r\n                                                                            ></i> */}\r\n                                                                        </Col>\r\n                                                                        : <Col className=\"col col-1 mt-3\">\r\n\r\n                                                                            <i\r\n                                                                                className=\"mdi mdi-trash-can d-block text-danger font-size-20 mt-3\"\r\n                                                                                onClick={() => {\r\n                                                                                    MulitDeletrTab_2Handler(key);\r\n                                                                                }}\r\n                                                                            ></i>\r\n\r\n                                                                        </Col>}\r\n                                                                </Row>\r\n\r\n\r\n                                                            })}\r\n\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n\r\n                                                </Col>\r\n\r\n                                            </TabPane>\r\n\r\n                                            <TabPane tabId=\"3\">\r\n                                                <Col md={12}>\r\n                                                    <Row>\r\n                                                        <Col md={12}  >\r\n                                                            <Card className=\"text-black\">\r\n                                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n                                                                    <Row>\r\n                                                                        <h5>Item Name :<Label className=\"text-primary\" >{name}</Label></h5>\r\n                                                                    </Row>\r\n\r\n                                                                    <Row>\r\n                                                                        <FormGroup className=\" col col-sm-4 \" >\r\n                                                                            <Label >Base Unit</Label>\r\n                                                                            <Select\r\n                                                                                value={BaseUnit_dropdown_Select}\r\n                                                                                options={BaseUnit_DropdownOptions}\r\n                                                                                onChange={BaseUnit_DropDown_handller}\r\n                                                                            />\r\n                                                                        </FormGroup>\r\n                                                                    </Row>\r\n\r\n\r\n\r\n\r\n                                                                    <Row className=\"mt-3\">\r\n                                                                        <Col md={8}><Table className=\"table table-bordered  text-center \">\r\n                                                                            <Thead >\r\n                                                                                <tr>\r\n                                                                                    <th>Unit Name</th>\r\n\r\n                                                                                    <th className=\"col-sm-3 text-center\">Conversion Ratio </th>\r\n                                                                                    <th> To Base Unit</th>\r\n                                                                                    <th>Action</th>\r\n                                                                                </tr>\r\n                                                                            </Thead>\r\n                                                                            <Tbody  >\r\n                                                                                {baseUnitTableData.map((TableValue, key) => (\r\n                                                                                    <tr >\r\n                                                                                        <td>\r\n                                                                                            <Label>1</Label>    {BaseUnit_dropdown_Select.label}\r\n                                                                                        </td>\r\n                                                                                        <td>\r\n                                                                                            <AvInput name=\"value\" type=\"text\"\r\n                                                                                                defaultValue={TableValue.conversionRatio}\r\n                                                                                                onChange={(e) => BaseUnit2_DropDown_handller(e, key, \"Conversion\")}></AvInput>\r\n                                                                                        </td>\r\n                                                                                        <td>\r\n                                                                                            <Select\r\n                                                                                                // placeholder=\"select unit\"\r\n                                                                                                value={TableValue.toBaseUnit}\r\n                                                                                                options={BaseUnit_DropdownOptions2}\r\n                                                                                                onChange={(e) => BaseUnit2_DropDown_handller(e, key, \"BaseUnit\")}\r\n                                                                                            />\r\n                                                                                        </td>\r\n                                                                                        <td>\r\n                                                                                            {(baseUnitTableData.length === key + 1) ?\r\n                                                                                                <Row className=\"\">\r\n                                                                                                    <Col >\r\n                                                                                                        <Button className=\"btn btn-sm btn-light mt-3 col col-6  align-items-sm-end\"\r\n                                                                                                            type=\"button\"\r\n                                                                                                            onClick={() => { MultipleAddRow_Button_Handler_tab3(key) }} >\r\n                                                                                                            <i className=\"dripicons-plus\"></i>\r\n                                                                                                        </Button>\r\n                                                                                                    </Col>\r\n                                                                                                    <Col className=\"mt-3\">\r\n                                                                                                        < i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                            BaseUnitTable_Delete_Row_Handller_tab_3(key)\r\n                                                                                                        }} >\r\n                                                                                                        </i>\r\n                                                                                                    </Col>\r\n                                                                                                </Row>\r\n                                                                                                :\r\n\r\n                                                                                                < i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                    BaseUnitTable_Delete_Row_Handller_tab_3(key)\r\n                                                                                                }} >\r\n                                                                                                </i>\r\n\r\n\r\n                                                                                            }\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                ))}\r\n                                                                            </Tbody>\r\n                                                                        </Table></Col>\r\n\r\n                                                                    </Row>\r\n\r\n                                                                </CardBody>\r\n                                                            </Card>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Col>\r\n\r\n\r\n                                            </TabPane>\r\n\r\n                                            <TabPane tabId=\"4\">\r\n                                                <Row>\r\n                                                    <Col className=\"col-12\">\r\n                                                        <Card>\r\n                                                            <CardBody>\r\n                                                                {/* <CardTitle>Image Upload</CardTitle> */}\r\n                                                                {/* <CardSubtitle className=\"mb-3\">\r\n                                                                    {\" \"}\r\n                                                                    DropzoneJS is an open source library that provides\r\n                                                                    drag’n’drop file uploads with image previews.\r\n                                                                </CardSubtitle> */}\r\n                                                                {/* <Form> */}\r\n\r\n\r\n                                                                <input type=\"file\" name=\"\" id=\"fileId\"\r\n                                                                    onChange={() => imageUploaded()} />\r\n                                                                <br></br>\r\n                                                                <img src={`data:image/png;base64,${base64String}`} />\r\n                                                                <br></br>\r\n                                                                <br></br>\r\n                                                                <br></br>\r\n                                                                <br></br>\r\n\r\n                                                                <Dropzone\r\n                                                                    onDrop={acceptedFiles => {\r\n                                                                        handleAcceptedFiles(acceptedFiles)\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {({ getRootProps, getInputProps }) => (\r\n                                                                        // <div className=\"dropzone\">\r\n                                                                        <div\r\n                                                                            className=\"dz-message needsclick mt-2\"\r\n                                                                            {...getRootProps()}\r\n                                                                        >\r\n                                                                            <input {...getInputProps()} />\r\n\r\n                                                                            <div className=\"mb-3\">\r\n\r\n                                                                                <i className=\"display-6 text-muted bx  bx bx-cloud-upload\" />\r\n                                                                            </div>\r\n                                                                            {/* <h4>Drop files here or click to upload.</h4> */}\r\n                                                                        </div>\r\n                                                                        // </div>\r\n                                                                    )}\r\n                                                                </Dropzone>\r\n                                                                <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\r\n                                                                    {selectedFiles.map((index, i) => {\r\n                                                                        return (\r\n                                                                            <Card\r\n                                                                                className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\r\n                                                                                key={i + \"-file\"}\r\n                                                                            >\r\n                                                                                <div className=\"p-2\">\r\n                                                                                    <Row className=\"align-items-center\">\r\n                                                                                        <Col className=\"col-auto\">\r\n                                                                                            <img\r\n                                                                                                data-dz-thumbnail=\"\"\r\n                                                                                                height=\"80\"\r\n                                                                                                className=\"avatar-sm rounded bg-light\"\r\n                                                                                                alt={index.name}\r\n                                                                                                src={index.preview}\r\n\r\n                                                                                            />\r\n                                                                                        </Col>\r\n                                                                                        <Col>\r\n                                                                                            <Link\r\n                                                                                                to=\"#\"\r\n                                                                                                className=\"text-muted font-weight-bold\"\r\n                                                                                            >\r\n                                                                                                {index.name}\r\n                                                                                            </Link>\r\n                                                                                            <p className=\"mb-0\">\r\n                                                                                                <strong>{index.formattedSize}</strong>\r\n                                                                                            </p>\r\n                                                                                        </Col>\r\n                                                                                    </Row>\r\n                                                                                </div>\r\n                                                                            </Card>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </div>\r\n                                                                {/* </Form> */}\r\n\r\n                                                                <div className=\"text-center mt-4\">\r\n                                                                    <button\r\n                                                                        type=\"button\"\r\n                                                                        className=\"btn btn-primary \"\r\n                                                                    >\r\n                                                                        Upload\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <form action=\"/action_page.php\">\r\n                                                                    <input type=\"file\" id=\"myFile\" name=\"filename\" />\r\n                                                                    <input type=\"submit\" />\r\n                                                                </form>\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </TabPane>\r\n\r\n                                            <TabPane tabId=\"5\">\r\n                                                <Row>\r\n                                                    <Col md={12}  >\r\n                                                        <Card className=\"text-black\">\r\n                                                            <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n                                                                <Row>\r\n                                                                    <h5>Item Name :<Label className=\"text-primary\" >{name}</Label></h5>\r\n                                                                </Row>\r\n\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\" col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom21\">Division Type</Label>\r\n                                                                        <Select\r\n                                                                            value={divisionType_dropdown_Select}\r\n                                                                            options={DivisionType_DropdownOptions}\r\n                                                                            onChange={(e) => { DivisionType_DropDown_handller(e) }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n                                                                    <Col sm={1} style={{ marginTop: '28px' }} >\r\n                                                                        {\" \"}\r\n                                                                        <Button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-sm mt-1 mb-0 btn-light  btn-outline-primary  \"\r\n                                                                            onClick={() =>\r\n                                                                                AddDivisionHandler()\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <i className=\"dripicons-plus \"></i>\r\n                                                                        </Button>\r\n                                                                    </Col>\r\n                                                                    <Col sm={3} style={{ marginTop: '28px' }}>\r\n                                                                        {divisionTypeData.length > 0 ? (\r\n\r\n                                                                            <div className=\"table-responsive\">\r\n                                                                                <Table className=\"table table-bordered  text-center\">\r\n                                                                                    <Thead >\r\n                                                                                        <tr>\r\n                                                                                            <th>Division Type</th>\r\n\r\n                                                                                            <th>Action</th>\r\n                                                                                        </tr>\r\n                                                                                    </Thead>\r\n                                                                                    <Tbody  >\r\n                                                                                        {divisionTypeData.map((TableValue) => (\r\n                                                                                            <tr >\r\n                                                                                                <td>\r\n                                                                                                    {TableValue.label}\r\n                                                                                                </td>\r\n                                                                                                <td>\r\n                                                                                                    <i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                        UserRoles_DeleteButton_Handller(TableValue.value)\r\n                                                                                                    }} >\r\n                                                                                                    </i>\r\n                                                                                                </td>\r\n                                                                                            </tr>\r\n                                                                                        ))}\r\n                                                                                    </Tbody>\r\n                                                                                </Table>\r\n                                                                            </div>\r\n                                                                        ) : (\r\n                                                                            <>\r\n                                                                            </>\r\n                                                                        )}\r\n                                                                    </Col>\r\n                                                                </Row>\r\n\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </TabPane>\r\n\r\n                                            <TabPane tabId=\"6\">\r\n                                                <Row>\r\n                                                    <Col md={12}  >\r\n                                                        <Card className=\"text-black\">\r\n                                                            <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                                <Row>\r\n                                                                    <h5>Item Name :<Label className=\"text-primary\" >{name}</Label></h5>\r\n                                                                </Row>\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">MRP</Label>\r\n                                                                        <AvField name=\"MRP\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                            placeholder=\" Please Enter MRP \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            validate={{\r\n                                                                                required: { value: true, errorMessage: 'Please Enter MRP ' },\r\n                                                                            }}\r\n                                                                            onChange={(e) => { (setName(e.target.value)) }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">GST</Label>\r\n                                                                        <AvField name=\"GST\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                            placeholder=\" Please Enter GST \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            validate={{\r\n                                                                                required: { value: true, errorMessage: 'Please Enter GST' },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">HSN</Label>\r\n                                                                        <AvField name=\"HSN\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                            placeholder=\" Please Enter HSN \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            validate={{\r\n                                                                                required: { value: true, errorMessage: 'Please Enter HSN' },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                </Row>\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n\r\n                                                    </Col>\r\n\r\n                                                </Row>\r\n                                            </TabPane>\r\n                                            <TabPane tabId=\"7\">\r\n                                                <Row>\r\n                                                    <Col md={12}  >\r\n                                                        <Card className=\"text-black\">\r\n                                                            <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                                <Row>\r\n                                                                    <h5>Item Name :<Label className=\"text-primary\" >{name}</Label></h5>\r\n                                                                </Row>\r\n                                                                <Row>\r\n\r\n                                                                    <FormGroup className=\" col col-sm-4 \" >\r\n                                                                        <Label >Price List</Label>\r\n                                                                        <Select\r\n                                                                            value={priceList_Dropdown_Select}\r\n                                                                            options={PriceList_DropdownOptions}\r\n                                                                            onChange={() => { PriceList_DropDown_handller() }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">Margin</Label>\r\n                                                                        <AvField name=\"GST\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                            placeholder=\" Please Enter GST \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            validate={{\r\n                                                                                required: { value: true, errorMessage: 'Please Enter GST' },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n\r\n\r\n\r\n                                                                </Row>\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n\r\n                                                    </Col>\r\n\r\n                                                </Row>\r\n                                            </TabPane>\r\n\r\n                                        </TabContent>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                    </AvForm>\r\n                </Container>\r\n            </div >\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default ItemsMaster;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}