{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\DriverPage\\\\DriverMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertState } from \"../../../store/actions\";\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\nimport { PostMethodForDriverMaster, getMethodForDriverList, PostMethod_ForDriverMasterSuccess, getMethod_ForDriverListSuccess, editDriverTypeSuccess, updateDriverTypeID } from \"../../../store/Administrator/DriverRedux/action\";\nimport { useHistory } from \"react-router-dom\";\nimport Flatpickr from \"react-flatpickr\";\nimport { comAddPageFieldFunc, formValChange, formValid, PageFieldMaster } from \"./validfiles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DriverMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let editDataGatingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  const formRef = useRef(null);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(\"\");\n  const [EditData, setEditData] = useState([]);\n  const [DOB_Date_Select, setDOB_Date_Select] = useState(\"\"); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    DriverList,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    PostAPIResponse: state.DriverReducer.PostDataMessage,\n    DriverList: state.DriverReducer.DriverList,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData\n  }));\n  useEffect(() => {\n    dispatch(getMethodForDriverList());\n  }, [dispatch]); //userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = undefined;\n\n    if (editDataGatingFromList === undefined) {\n      let locationPath = history.location.pathname;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === locationPath;\n      });\n    } else if (!(editDataGatingFromList === undefined)) {\n      let relatatedPage = props.relatatedPage;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === relatatedPage;\n      });\n    }\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (!(editDataGatingFromList === undefined)) {\n      setEditData(editDataGatingFromList);\n      setPageMode(pageModeProps);\n      setDOB_Date_Select(editDataGatingFromList.DOB);\n      dispatch(editDriverTypeSuccess({\n        Status: false\n      }));\n      dispatch(BreadcrumbShow(editDataGatingFromList.DriverMaster));\n      return;\n    }\n  }, [editDataGatingFromList]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForDriverMasterSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/DriverList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getMethod_ForDriverListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n\n  const formSubmitHandler = (event, values) => {\n    const jsonBody = JSON.stringify({\n      Name: values.Name,\n      Address: values.Address,\n      DOB: DOB_Date_Select,\n      UID: values.UID\n    });\n\n    if (pageMode === 'edit') {\n      dispatch(updateDriverTypeID(jsonBody, EditData.id));\n    } else {\n      dispatch(PostMethodForDriverMaster(jsonBody));\n    }\n  };\n\n  const [state, setState] = useState({\n    value: {\n      name: '',\n      address: '',\n      uid: ''\n    },\n    fieldLabel: {\n      name: '',\n      address: '',\n      uid: ''\n    },\n    isError: {\n      name: '',\n      address: '',\n      uid: ''\n    },\n    hasValid: {\n      name: {\n        regExp: '',\n        inValidMsg: \"\"\n      },\n      address: {\n        regExp: '',\n        inValidMsg: \"\"\n      },\n      uid: {\n        regExp: '',\n        inValidMsg: \"\"\n      }\n    },\n    required: {\n      name: true\n    }\n  });\n  useEffect(() => {\n    comAddPageFieldFunc({\n      state,\n      setState\n    });\n  }, []);\n\n  const onChange = e => {\n    formValChange({\n      e,\n      state,\n      setState\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (formValid({\n      state,\n      setState\n    })) {\n      console.log(\"isvalid\", state);\n    } else {\n      console.log(\"Form is invalid!\");\n    }\n  };\n\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"DriverMaster | FoodERP-React FrontEnd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.name, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 244,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              type: \"text\",\n                              className: isError.name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              name: \"name\",\n                              placeholder: \"Please Enter Name\",\n                              onChange: e => {\n                                onChange(e);\n                                dispatch(BreadcrumbShow(e.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 245,\n                              columnNumber: 61\n                            }, this), isError.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 257,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 243,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"4\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  children: \"Date of Birth\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 263,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                                  id: \"FSSAIExipry\",\n                                  name: \"FSSAIExipry\",\n                                  value: DOB_Date_Select,\n                                  className: \"form-control d-block p-2 bg-white text-dark\",\n                                  placeholder: \"YYYY-MM-DD\",\n                                  autoComplete: \"off\",\n                                  options: {\n                                    altInput: true,\n                                    altFormat: \"F j, Y\",\n                                    dateFormat: \"Y-m-d\"\n                                  },\n                                  onChange: (selectedDates, dateStr, instance) => {\n                                    setDOB_Date_Select(dateStr);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 264,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 262,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 261,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 260,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [fieldLabel.address, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 286,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                type: \"text\",\n                                value: EditData.Address,\n                                className: isError.address.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                name: \"address\",\n                                placeholder: \"Please Enter Address\",\n                                autoComplete: \"off\",\n                                onChange: onChange\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 287,\n                                columnNumber: 65\n                              }, this), isError.address.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.address\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 297,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 285,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 284,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: fieldLabel.uid\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 304,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"uid\",\n                                value: EditData.UID,\n                                type: \"text\",\n                                placeholder: \"Please Enter UID\",\n                                autoComplete: \"off\",\n                                className: isError.uid.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                onChange: onChange\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 305,\n                                columnNumber: 65\n                              }, this), isError.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.uid\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 315,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 303,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 302,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Update Party Type\",\n                                    className: \"btn btn-success w-md mt-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fas fa-edit me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 332,\n                                      columnNumber: 89\n                                    }, this), \"Update\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 327,\n                                    columnNumber: 85\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Save Party Type\",\n                                    className: \"btn btn-primary w-md mt-3 \",\n                                    children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"fas fa-save me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 343,\n                                      columnNumber: 91\n                                    }, this), \" Save\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 339,\n                                    columnNumber: 89\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 323,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 322,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 321,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 320,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(DriverMaster, \"2Rb/aHdGBJbg+wmvH1SAMg2vReg=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = DriverMaster;\nexport default DriverMaster;\nconst Email = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst Mobile = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst NotNull = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","useDispatch","useSelector","AlertState","CommonGetRoleAccessFunction","PostMethodForDriverMaster","getMethodForDriverList","PostMethod_ForDriverMasterSuccess","getMethod_ForDriverListSuccess","editDriverTypeSuccess","updateDriverTypeID","useHistory","Flatpickr","comAddPageFieldFunc","formValChange","formValid","PageFieldMaster","DriverMaster","props","dispatch","history","editDataGatingFromList","state","pageModeProps","pageMode","formRef","setPageMode","userPageAccessState","setUserPageAccessState","EditData","setEditData","DOB_Date_Select","setDOB_Date_Select","PostAPIResponse","DriverList","RoleAccessModifiedinSingleArray","DriverReducer","PostDataMessage","Login","RoleAccessUpdateData","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","DOB","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","formSubmitHandler","event","values","jsonBody","Name","Address","UID","id","setState","value","name","address","uid","fieldLabel","isError","hasValid","regExp","inValidMsg","required","onChange","e","onSubmit","preventDefault","console","log","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","altInput","altFormat","dateFormat","selectedDates","dateStr","instance","RoleAccess_IsEdit","RoleAccess_IsSave","Email","RegExp","Mobile","NotNull"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/DriverMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport {\r\n    PostMethodForDriverMaster,\r\n    getMethodForDriverList,\r\n    PostMethod_ForDriverMasterSuccess,\r\n    getMethod_ForDriverListSuccess,\r\n    editDriverTypeSuccess,\r\n    updateDriverTypeID\r\n} from \"../../../store/Administrator/DriverRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport { comAddPageFieldFunc, formValChange, formValid, PageFieldMaster } from \"./validfiles\";\r\n\r\nconst DriverMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    let editDataGatingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    const formRef = useRef(null);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(\"\");\r\n    const [EditData, setEditData] = useState([]);\r\n    const [DOB_Date_Select, setDOB_Date_Select] = useState(\"\");\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, DriverList, RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n        PostAPIResponse: state.DriverReducer.PostDataMessage,\r\n        DriverList: state.DriverReducer.DriverList,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n\r\n    }));\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMethodForDriverList());\r\n\r\n    }, [dispatch]);\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = undefined\r\n        if ((editDataGatingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGatingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGatingFromList === undefined)) {\r\n\r\n            setEditData(editDataGatingFromList);\r\n            setPageMode(pageModeProps);\r\n            setDOB_Date_Select(editDataGatingFromList.DOB)\r\n\r\n            dispatch(editDriverTypeSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGatingFromList.DriverMaster))\r\n            return\r\n        }\r\n    }, [editDataGatingFromList])\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/DriverList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForDriverListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n    const formSubmitHandler = (event, values) => {\r\n        const jsonBody = JSON.stringify({\r\n            Name: values.Name,\r\n            Address: values.Address,\r\n            DOB: DOB_Date_Select,\r\n            UID: values.UID\r\n        });\r\n\r\n        if (pageMode === 'edit') {\r\n            dispatch(updateDriverTypeID(jsonBody, EditData.id));\r\n        }\r\n\r\n        else {\r\n            dispatch(PostMethodForDriverMaster(jsonBody));\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const [state, setState] = useState({\r\n        value: {\r\n            name: '',\r\n            address: '',\r\n            uid: '',\r\n        },\r\n        fieldLabel: {\r\n            name: '',\r\n            address: '',\r\n            uid: '',\r\n        },\r\n\r\n        isError: {\r\n            name: '',\r\n            address: '',\r\n            uid: '',\r\n        },\r\n\r\n        hasValid: {\r\n            name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n            },\r\n            address: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n            },\r\n\r\n            uid: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n            },\r\n        },\r\n        required: {\r\n            name: true,\r\n        }\r\n    }\r\n    )\r\n\r\n    useEffect(() => {\r\n        comAddPageFieldFunc({state,setState})\r\n    }, [])\r\n\r\n    const onChange = (e) => {\r\n        formValChange({e, state, setState})\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (formValid({state, setState})) {\r\n            console.log(\"isvalid\", state)\r\n        } else {\r\n            console.log(\"Form is invalid!\");\r\n        }\r\n    };\r\n\r\n\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>DriverMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.name} </Label>\r\n                                                            <Input\r\n                                                                type=\"text\"\r\n                                                                className={isError.name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                name=\"name\"\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                onChange={(e) => {\r\n                                                                    onChange(e)\r\n                                                                    dispatch(BreadcrumbShow(e.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label>Date of Birth</Label>\r\n                                                                    <Flatpickr\r\n                                                                        id=\"FSSAIExipry\"\r\n                                                                        name=\"FSSAIExipry\"\r\n                                                                        value={DOB_Date_Select}\r\n                                                                        className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                                        placeholder=\"YYYY-MM-DD\"\r\n                                                                        autoComplete='off'\r\n                                                                        options={{\r\n                                                                            altInput: true,\r\n                                                                            altFormat: \"F j, Y\",\r\n                                                                            dateFormat: \"Y-m-d\"\r\n                                                                        }}\r\n                                                                        onChange={(selectedDates, dateStr, instance) => {\r\n                                                                            setDOB_Date_Select(dateStr)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.address} </Label>\r\n                                                                <Input\r\n                                                                    type=\"text\"\r\n                                                                    value={EditData.Address}\r\n                                                                    className={isError.address.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    name=\"address\"\r\n                                                                    placeholder=\"Please Enter Address\"\r\n                                                                    autoComplete='off'\r\n                                                                    onChange={onChange}\r\n                                                                />\r\n                                                                {isError.address.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.address}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.uid}</Label>\r\n                                                                <Input\r\n                                                                    name=\"uid\"\r\n                                                                    value={EditData.UID}\r\n                                                                    type=\"text\"\r\n                                                                    placeholder=\"Please Enter UID\"\r\n                                                                    autoComplete='off'\r\n                                                                    className={isError.uid.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    onChange={onChange}\r\n                                                                />\r\n                                                                {isError.name.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.uid}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n\r\n                                                        </Row>\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DriverMaster\r\n\r\n\r\n\r\n\r\nconst Email = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\n\r\nconst Mobile = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\nconst NotNull = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)"],"mappings":"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"},"metadata":{},"sourceType":"module"}