{"ast":null,"code":"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\"; // Login Redux States\n\nimport { CHANGE_PASSWORD_FOR_FORGET_PASSWORD, SEND_OTP_FOR_FORGET_PASSWORD } from \"./actionTypes\";\nimport { userForgetPassword_sendOTP_Success, changePasswordForForgetPasswordSuccess, changePasswordForForgetPasswordError, userForgetPassword_sendOTP_Error } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { Python_FoodERP_postJwtForgetPwd_SendOTP, Python_FoodERP_postJwtForgetPwd_Verify_OTP } from \"../../../helpers/backend_helper\"; // function* forgetUser({ user }) {\n//   try {\n//     const response =\"lxnvc\"\n//     //  yield call(Python_FoodERP_postJwtForgetPwd, {\n//       // \"Email\": \"rohitganeshaa98@gmail.com\",\n//       // \"Mobail\": 1234\n//     // })\n//     if (response) {\n//       yield put(userForgetPasswordSuccess(response))\n//     }\n//   } catch (error) {\n//     yield put(userForgetPasswordError(error))\n//   }\n// }\n\nfunction* sendOTP_GnerFun(_ref) {\n  let {\n    user\n  } = _ref;\n  debugger;\n\n  try {\n    const response = yield call(Python_FoodERP_postJwtForgetPwd_SendOTP, user);\n\n    if (response.StatusCode == 200) {\n      yield put(userForgetPassword_sendOTP_Success(response.Message));\n    } else {\n      yield put(userForgetPassword_sendOTP_Error(response.Message));\n    }\n  } catch (error) {\n    console.log(JSON.stringify(error));\n    yield put(userForgetPassword_sendOTP_Error(error));\n  }\n}\n\nfunction* changePassword_GnerFun(_ref2) {\n  let {\n    data\n  } = _ref2;\n\n  try {\n    debugger;\n    const response = yield call(Python_FoodERP_postJwtForgetPwd_Verify_OTP, data); //  \"Reset link are sended to your mailbox, check there first\"\n\n    if (response.StatusCode == 200) {\n      yield put(changePasswordForForgetPasswordSuccess(response.Message));\n    } else {\n      yield put(changePasswordForForgetPasswordError(response.Message));\n    }\n  } catch (error) {\n    yield put(changePasswordForForgetPasswordError('Reset password Error'));\n  }\n}\n\nexport function* watchUserPasswordForget() {\n  // yield takeEvery(FORGET_PASSWORD, forgetUser)\n  yield takeEvery(SEND_OTP_FOR_FORGET_PASSWORD, sendOTP_GnerFun);\n  yield takeEvery(CHANGE_PASSWORD_FOR_FORGET_PASSWORD, changePassword_GnerFun);\n}\n\nfunction* forgetPasswordSaga() {\n  yield all([fork(watchUserPasswordForget)]);\n}\n\nexport default forgetPasswordSaga;","map":{"version":3,"names":["takeEvery","fork","put","all","call","CHANGE_PASSWORD_FOR_FORGET_PASSWORD","SEND_OTP_FOR_FORGET_PASSWORD","userForgetPassword_sendOTP_Success","changePasswordForForgetPasswordSuccess","changePasswordForForgetPasswordError","userForgetPassword_sendOTP_Error","Python_FoodERP_postJwtForgetPwd_SendOTP","Python_FoodERP_postJwtForgetPwd_Verify_OTP","sendOTP_GnerFun","user","response","StatusCode","Message","error","console","log","JSON","stringify","changePassword_GnerFun","data","watchUserPasswordForget","forgetPasswordSaga"],"sources":["D:/GitProjects/Manthan/src/store/auth/forgetpwd/saga.js"],"sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\"\r\n\r\n// Login Redux States\r\nimport { CHANGE_PASSWORD_FOR_FORGET_PASSWORD, SEND_OTP_FOR_FORGET_PASSWORD, } from \"./actionTypes\"\r\nimport {  userForgetPassword_sendOTP_Success, changePasswordForForgetPasswordSuccess, changePasswordForForgetPasswordError, userForgetPassword_sendOTP_Error } from \"./actions\"\r\n\r\n//Include Both Helper File with needed methods\r\nimport { Python_FoodERP_postJwtForgetPwd_SendOTP, Python_FoodERP_postJwtForgetPwd_Verify_OTP } from \"../../../helpers/backend_helper\"\r\n\r\n\r\n\r\n// function* forgetUser({ user }) {\r\n//   try {\r\n\r\n//     const response =\"lxnvc\"\r\n//     //  yield call(Python_FoodERP_postJwtForgetPwd, {\r\n//       // \"Email\": \"rohitganeshaa98@gmail.com\",\r\n//       // \"Mobail\": 1234\r\n//     // })\r\n//     if (response) {\r\n//       yield put(userForgetPasswordSuccess(response))\r\n//     }\r\n//   } catch (error) {\r\n//     yield put(userForgetPasswordError(error))\r\n//   }\r\n// }\r\n\r\n\r\nfunction* sendOTP_GnerFun({ user }) {\r\n  debugger\r\n  try {\r\n   \r\n    const response = yield call(Python_FoodERP_postJwtForgetPwd_SendOTP, user)\r\n    if (response.StatusCode == 200) {\r\n      yield put(userForgetPassword_sendOTP_Success(response.Message))\r\n    }\r\n    else {\r\n      yield put(userForgetPassword_sendOTP_Error(response.Message))\r\n    }\r\n  } catch (error) {\r\n    console.log(JSON.stringify(error))\r\n    yield put(userForgetPassword_sendOTP_Error(error))\r\n  }\r\n}\r\n\r\n\r\nfunction* changePassword_GnerFun({ data }) {\r\n  try {\r\ndebugger\r\n    const response = yield call(Python_FoodERP_postJwtForgetPwd_Verify_OTP, data)\r\n    //  \"Reset link are sended to your mailbox, check there first\"\r\n\r\n    if (response.StatusCode == 200) {\r\n      yield put(\r\n        changePasswordForForgetPasswordSuccess(response.Message))\r\n    } else {\r\n      yield put(changePasswordForForgetPasswordError(response.Message))\r\n    }\r\n\r\n  } catch (error) {\r\n    yield put(changePasswordForForgetPasswordError('Reset password Error'))\r\n  }\r\n}\r\nexport function* watchUserPasswordForget() {\r\n  // yield takeEvery(FORGET_PASSWORD, forgetUser)\r\n  yield takeEvery(SEND_OTP_FOR_FORGET_PASSWORD, sendOTP_GnerFun)\r\n  yield takeEvery(CHANGE_PASSWORD_FOR_FORGET_PASSWORD, changePassword_GnerFun)\r\n}\r\n\r\nfunction* forgetPasswordSaga() {\r\n  yield all([fork(watchUserPasswordForget)])\r\n}\r\n\r\nexport default forgetPasswordSaga\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,mCAAT,EAA8CC,4BAA9C,QAAmF,eAAnF;AACA,SAAUC,kCAAV,EAA8CC,sCAA9C,EAAsFC,oCAAtF,EAA4HC,gCAA5H,QAAoK,WAApK,C,CAEA;;AACA,SAASC,uCAAT,EAAkDC,0CAAlD,QAAoG,iCAApG,C,CAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,UAAUC,eAAV,OAAoC;EAAA,IAAV;IAAEC;EAAF,CAAU;EAClC;;EACA,IAAI;IAEF,MAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACO,uCAAD,EAA0CG,IAA1C,CAA3B;;IACA,IAAIC,QAAQ,CAACC,UAAT,IAAuB,GAA3B,EAAgC;MAC9B,MAAMd,GAAG,CAACK,kCAAkC,CAACQ,QAAQ,CAACE,OAAV,CAAnC,CAAT;IACD,CAFD,MAGK;MACH,MAAMf,GAAG,CAACQ,gCAAgC,CAACK,QAAQ,CAACE,OAAV,CAAjC,CAAT;IACD;EACF,CATD,CASE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAZ;IACA,MAAMhB,GAAG,CAACQ,gCAAgC,CAACQ,KAAD,CAAjC,CAAT;EACD;AACF;;AAGD,UAAUK,sBAAV,QAA2C;EAAA,IAAV;IAAEC;EAAF,CAAU;;EACzC,IAAI;IACN;IACI,MAAMT,QAAQ,GAAG,MAAMX,IAAI,CAACQ,0CAAD,EAA6CY,IAA7C,CAA3B,CAFE,CAGF;;IAEA,IAAIT,QAAQ,CAACC,UAAT,IAAuB,GAA3B,EAAgC;MAC9B,MAAMd,GAAG,CACPM,sCAAsC,CAACO,QAAQ,CAACE,OAAV,CAD/B,CAAT;IAED,CAHD,MAGO;MACL,MAAMf,GAAG,CAACO,oCAAoC,CAACM,QAAQ,CAACE,OAAV,CAArC,CAAT;IACD;EAEF,CAZD,CAYE,OAAOC,KAAP,EAAc;IACd,MAAMhB,GAAG,CAACO,oCAAoC,CAAC,sBAAD,CAArC,CAAT;EACD;AACF;;AACD,OAAO,UAAUgB,uBAAV,GAAoC;EACzC;EACA,MAAMzB,SAAS,CAACM,4BAAD,EAA+BO,eAA/B,CAAf;EACA,MAAMb,SAAS,CAACK,mCAAD,EAAsCkB,sBAAtC,CAAf;AACD;;AAED,UAAUG,kBAAV,GAA+B;EAC7B,MAAMvB,GAAG,CAAC,CAACF,IAAI,CAACwB,uBAAD,CAAL,CAAD,CAAT;AACD;;AAED,eAAeC,kBAAf"},"metadata":{},"sourceType":"module"}