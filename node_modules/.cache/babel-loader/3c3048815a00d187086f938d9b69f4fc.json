{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\RoleAccessPages\\\\RoleAccessListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Modal, Button } from \"reactstrap\";\nimport MetaTags from 'react-meta-tags'; // datatable related plugins\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit'; //Import Breadcrumb\n\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\";\nimport \"../../../assets/scss/CustomTable2/datatables.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRoleAccessListPage, PostMethod_ForCopyRoleAccessFor_Role_Success } from \"../../../store/actions\";\nimport { AlertState } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport RoleAccessCopyFunctionality from \"./RoleAccessCopyFunctionality\";\nimport { mySearchProps } from \"../../../components/Common/CmponentRelatedCommonFile/SearchBox/MySearch\";\nimport { countlabelFunc } from \"../../../components/Common/CmponentRelatedCommonFile/commonListPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoleAccessListPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userAccState, setUserAccState] = useState('');\n  const [modal_center, setmodal_center] = useState(false);\n  const [copy_user_RowData, setCopy_user_RowData] = useState({});\n  const {\n    TableListData,\n    RoleAccessModifiedinSingleArray,\n    PostMessage_ForCopyRoleAccess\n  } = useSelector(state => ({\n    TableListData: state.RoleAccessReducer.RoleAccessListPage,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\n    PostMessage_ForCopyRoleAccess: state.RoleAccessReducer.PostMessage_ForCopyRoleAccess\n  })); // useEffect(() => {\n  //     const userAcc = CommonGetRoleAccessFunction(history)\n  //     if (!(userAcc === undefined)) {\n  //         setUserPageAccessState(userAcc)\n  //     }\n  // }, [history])\n\n  useEffect(() => {\n    // debugger\n    // const userAcc = CommonGetRoleAccessFunction(history)\n    const locationPath = history.location.pathname;\n    let userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserAccState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); //  This UseEffect => Featch Modules List data  First Rendering\n\n  useEffect(() => {\n    dispatch(getRoleAccessListPage());\n  }, []);\n\n  const EditPageHandler = rowData => {\n    debugger;\n\n    if (rowData.Division_id === null) {\n      rowData.Division_id = 0;\n    } // let RelatedPageID = 0\n    // const userPageAccess = history.location.state\n\n\n    let RelatedPageID = userAccState.RelatedPageID;\n    const found = RoleAccessModifiedinSingleArray.find(element => {\n      return element.id === RelatedPageID;\n    });\n\n    if (!(found === undefined)) {\n      history.push({\n        pathname: `/${found.ActualPagePath}`,\n        // pathname: `/${found.ActualPagePath}`,\n        // state: { fromDashboardAccess: true, UserDetails: found, EditData: rowData }\n        state: rowData // relatatedPage:\"/UserMaster\"\n\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (PostMessage_ForCopyRoleAccess.Status === true && PostMessage_ForCopyRoleAccess.StatusCode === 200) {\n      dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({\n        Status: false\n      }));\n      dispatch(getRoleAccessListPage()); // GoButton_Handler()\n\n      tog_center();\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: PostMessage_ForCopyRoleAccess.Message,\n        AfterResponseAction: false\n      }));\n    } else if (PostMessage_ForCopyRoleAccess.Status === true) {\n      dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostMessage_ForCopyRoleAccess.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostMessage_ForCopyRoleAccess]); //select id for copy row\n\n  const CopyHandeler = event => {\n    setCopy_user_RowData(event);\n    tog_center();\n  }; //select id for delete row\n\n\n  const deleteHandeler = (id, name) => {\n    dispatch(AlertState({\n      Type: 5,\n      Status: true,\n      Message: `Are you sure you want to delete this item : \"${name}\"`,\n      RedirectPath: false,\n      // PermissionAction: deleteItemID,\n      ID: id\n    }));\n  }; // Modules list component table columns \n\n\n  const columns = [{\n    dataField: 'RoleName',\n    text: 'Role Name',\n    sort: true\n  }, {\n    dataField: 'DivisionName',\n    text: 'Division Name',\n    sort: true\n  }, {\n    dataField: 'CompanyName',\n    text: 'Company Name',\n    sort: true\n  }, {\n    text: \"Action\",\n    hidden: !userAccState.RoleAccess_IsEdit && !userAccState.RoleAccess_IsView && !userAccState.RoleAccess_IsDelete ? true : false,\n    formatter: (cellContent, RoleAccess) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-3\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Copy RoleAccess\",\n        onClick: () => {\n          CopyHandeler(RoleAccess);\n        },\n        children: \"copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), userAccState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Edit RoleAccess\",\n        onClick: () => {\n          EditPageHandler(RoleAccess);\n        },\n        className: \"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\",\n        children: [console.log(\"id\", RoleAccess), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-pencil font-size-18\",\n          id: \"edittooltip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }, this) : null, !userAccState.RoleAccess_IsEdit && userAccState.RoleAccess_IsView ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"View RoleAccess\",\n        onClick: () => {\n          EditPageHandler(RoleAccess);\n        },\n        className: \"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bxs-show font-size-18 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }, this) : null, userAccState.RoleAccess_IsDelete ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Delete RoleAccess\",\n        onClick: () => {\n          deleteHandeler(RoleAccess.id, RoleAccess.Name);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-delete font-size-18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this)\n  }];\n  const defaultSorted = [{\n    dataField: 'RoleName',\n    order: 'asc'\n  }];\n  const pageOptions = {\n    sizePerPage: 10,\n    totalSize: TableListData.length,\n    // replace later with size(customers),\n    custom: true\n  }; // tag_center -- Control the Edit Modal show and close\n\n  function tog_center() {\n    setmodal_center(!modal_center);\n  }\n\n  if (!(userAccState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"RoleAccess List Page| FoodERP-React FrontEnd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n          pageHeading: userAccState.PageHeading,\n          newBtnView: userAccState.RoleAccess_IsSave ? true : false,\n          showCount: true,\n          excelBtnView: true,\n          excelData: TableListData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PaginationProvider, {\n          pagination: paginationFactory(pageOptions),\n          keyField: \"id\",\n          columns: columns,\n          data: TableListData,\n          children: _ref => {\n            let {\n              paginationProps,\n              paginationTableProps\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n              keyField: \"id\",\n              columns: columns,\n              data: TableListData,\n              search: true,\n              children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n                    keyField: \"id\",\n                    responsive: true,\n                    bordered: true,\n                    striped: false,\n                    classes: \"table align-middle table-nowrap table-hover\",\n                    noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-danger text-center \",\n                      children: \"Items Not available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 67\n                    }, this),\n                    headerWrapperClasses: \"thead-light\",\n                    ...toolkitProps.baseProps,\n                    ...paginationTableProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 45\n                  }, this), countlabelFunc(toolkitProps, paginationProps, dispatch, \"RoleAccess\"), mySearchProps(toolkitProps.searchProps)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"align-items-md-center mt-30\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pagination pagination-rounded justify-content-end mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modal_center,\n          toggle: () => {\n            tog_center();\n          },\n          size: \"xl\",\n          children: /*#__PURE__*/_jsxDEV(RoleAccessCopyFunctionality, {\n            state: copy_user_RowData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(RoleAccessListPage, \"VIuw5kSVMlKS+nMmORq4SOrGb64=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = RoleAccessListPage;\nexport default RoleAccessListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleAccessListPage\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","Modal","Button","MetaTags","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","Breadcrumb","useDispatch","useSelector","getRoleAccessListPage","PostMethod_ForCopyRoleAccessFor_Role_Success","AlertState","useHistory","RoleAccessCopyFunctionality","mySearchProps","countlabelFunc","RoleAccessListPage","dispatch","history","userAccState","setUserAccState","modal_center","setmodal_center","copy_user_RowData","setCopy_user_RowData","TableListData","RoleAccessModifiedinSingleArray","PostMessage_ForCopyRoleAccess","state","RoleAccessReducer","Login","RoleAccessUpdateData","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","EditPageHandler","rowData","Division_id","RelatedPageID","found","element","id","push","Status","StatusCode","tog_center","Type","Message","AfterResponseAction","JSON","stringify","RedirectPath","CopyHandeler","event","deleteHandeler","name","ID","columns","dataField","text","sort","hidden","RoleAccess_IsEdit","RoleAccess_IsView","RoleAccess_IsDelete","formatter","cellContent","RoleAccess","display","justifyContent","console","log","Name","defaultSorted","order","pageOptions","sizePerPage","totalSize","length","custom","PageHeading","RoleAccess_IsSave","paginationProps","paginationTableProps","toolkitProps","baseProps","searchProps"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/RoleAccessPages/RoleAccessListPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Row, Col, Modal, Button } from \"reactstrap\"\r\nimport MetaTags from 'react-meta-tags'\r\n\r\n// datatable related plugins\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n    PaginationProvider, PaginationListStandalone,\r\n} from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb3\"\r\nimport \"../../../assets/scss/CustomTable2/datatables.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getRoleAccessListPage,\r\n    PostMethod_ForCopyRoleAccessFor_Role_Success,\r\n\r\n} from \"../../../store/actions\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleAccessCopyFunctionality from \"./RoleAccessCopyFunctionality\";\r\nimport { mySearchProps } from \"../../../components/Common/CmponentRelatedCommonFile/SearchBox/MySearch\";\r\nimport { countlabelFunc } from \"../../../components/Common/CmponentRelatedCommonFile/commonListPage\";\r\n\r\nconst RoleAccessListPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [userAccState, setUserAccState] = useState('');\r\n    const [modal_center, setmodal_center] = useState(false);\r\n    const [copy_user_RowData, setCopy_user_RowData] = useState({});\r\n\r\n\r\n    const { TableListData, RoleAccessModifiedinSingleArray, PostMessage_ForCopyRoleAccess } = useSelector((state) => ({\r\n        TableListData: state.RoleAccessReducer.RoleAccessListPage,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n        PostMessage_ForCopyRoleAccess: state.RoleAccessReducer.PostMessage_ForCopyRoleAccess,\r\n\r\n    }));\r\n\r\n    // useEffect(() => {\r\n    //     const userAcc = CommonGetRoleAccessFunction(history)\r\n    //     if (!(userAcc === undefined)) {\r\n    //         setUserPageAccessState(userAcc)\r\n    //     }\r\n    // }, [history])\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        // const userAcc = CommonGetRoleAccessFunction(history)\r\n        const locationPath = history.location.pathname\r\n        let userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n        if (!(userAcc === undefined)) {\r\n            setUserAccState(userAcc)\r\n        }\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n\r\n    //  This UseEffect => Featch Modules List data  First Rendering\r\n    useEffect(() => {\r\n        dispatch(getRoleAccessListPage());\r\n    }, []);\r\n\r\n    const EditPageHandler = (rowData) => {\r\n        debugger\r\n        if (rowData.Division_id === null) {\r\n            rowData.Division_id = 0\r\n        }\r\n\r\n        // let RelatedPageID = 0\r\n        // const userPageAccess = history.location.state\r\n\r\n        let RelatedPageID = userAccState.RelatedPageID\r\n\r\n        const found = RoleAccessModifiedinSingleArray.find((element) => {\r\n            return element.id === RelatedPageID\r\n        })\r\n\r\n        if (!(found === undefined)) {\r\n            history.push({\r\n                pathname: `/${found.ActualPagePath}`,\r\n                // pathname: `/${found.ActualPagePath}`,\r\n                // state: { fromDashboardAccess: true, UserDetails: found, EditData: rowData }\r\n                state: rowData,\r\n                // relatatedPage:\"/UserMaster\"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if ((PostMessage_ForCopyRoleAccess.Status === true) && (PostMessage_ForCopyRoleAccess.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({ Status: false }))\r\n\r\n            dispatch(getRoleAccessListPage());\r\n            // GoButton_Handler()\r\n            tog_center()\r\n            dispatch(AlertState({\r\n                Type: 1,\r\n                Status: true,\r\n                Message: PostMessage_ForCopyRoleAccess.Message,\r\n                AfterResponseAction: false\r\n            }))\r\n        }\r\n        else if (PostMessage_ForCopyRoleAccess.Status === true) {\r\n            dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostMessage_ForCopyRoleAccess.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostMessage_ForCopyRoleAccess])\r\n\r\n    //select id for copy row\r\n    const CopyHandeler = (event) => {\r\n\r\n        setCopy_user_RowData(event)\r\n        tog_center()\r\n    };\r\n\r\n\r\n\r\n    //select id for delete row\r\n    const deleteHandeler = (id, name) => {\r\n        dispatch(\r\n            AlertState({\r\n                Type: 5,\r\n                Status: true,\r\n                Message: `Are you sure you want to delete this item : \"${name}\"`,\r\n                RedirectPath: false,\r\n                // PermissionAction: deleteItemID,\r\n                ID: id,\r\n            })\r\n        );\r\n    };\r\n\r\n    // Modules list component table columns \r\n    const columns = [\r\n        {\r\n            dataField: 'RoleName',\r\n            text: 'Role Name',\r\n            sort: true\r\n        }, {\r\n            dataField: 'DivisionName',\r\n            text: 'Division Name',\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: 'CompanyName',\r\n            text: 'Company Name',\r\n            sort: true\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            hidden: (\r\n                !(userAccState.RoleAccess_IsEdit)\r\n                && !(userAccState.RoleAccess_IsView)\r\n                && !(userAccState.RoleAccess_IsDelete)) ? true : false,\r\n\r\n            formatter: (cellContent, RoleAccess) => (\r\n\r\n                <div className=\"d-flex gap-3\" style={{ display: 'flex', justifyContent: 'center' }} >\r\n\r\n                    <Button\r\n                        className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Copy RoleAccess\"\r\n                        onClick={() => { CopyHandeler(RoleAccess); }}\r\n                    >\r\n                        copy\r\n                    </Button>\r\n\r\n\r\n                    {((userAccState.RoleAccess_IsEdit)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Edit RoleAccess\"\r\n                            onClick={() => { EditPageHandler(RoleAccess); }}\r\n                            className=\"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\"\r\n                        >\r\n                            {console.log(\"id\", RoleAccess)} <i className=\"mdi mdi-pencil font-size-18\" id=\"edittooltip\"></i>\r\n                        </Button> : null}\r\n\r\n                    {(!(userAccState.RoleAccess_IsEdit) && (userAccState.RoleAccess_IsView)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"View RoleAccess\"\r\n                            onClick={() => { EditPageHandler(RoleAccess); }}\r\n                            className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n\r\n                        >\r\n                            <i className=\"bx bxs-show font-size-18 \"></i>\r\n                        </Button> : null}\r\n\r\n                    {(userAccState.RoleAccess_IsDelete)\r\n                        ?\r\n                        <Button\r\n                            className=\"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Delete RoleAccess\"\r\n                            onClick={() => { deleteHandeler(RoleAccess.id, RoleAccess.Name); }}\r\n                        >\r\n                            <i className=\"mdi mdi-delete font-size-18\"></i>\r\n                        </Button>\r\n                        : null\r\n                    }\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const defaultSorted = [{\r\n        dataField: 'RoleName',\r\n        order: 'asc'\r\n    }];\r\n\r\n    const pageOptions = {\r\n        sizePerPage: 10,\r\n        totalSize: TableListData.length, // replace later with size(customers),\r\n        custom: true,\r\n    }\r\n\r\n    // tag_center -- Control the Edit Modal show and close\r\n    function tog_center() {\r\n        setmodal_center(!modal_center)\r\n    }\r\n\r\n    if (!(userAccState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\">\r\n                    <MetaTags>\r\n                        <title>RoleAccess List Page| FoodERP-React FrontEnd</title>\r\n                    </MetaTags>\r\n                    <Breadcrumb\r\n                        pageHeading={userAccState.PageHeading}\r\n                        newBtnView={(userAccState.RoleAccess_IsSave) ? true : false}\r\n                        showCount={true}\r\n                        excelBtnView={true}\r\n                        excelData={TableListData}\r\n                    />\r\n                    <PaginationProvider\r\n                        pagination={paginationFactory(pageOptions)}\r\n                        keyField='id'\r\n                        columns={columns}\r\n                        data={TableListData}\r\n                    >\r\n                        {({ paginationProps, paginationTableProps }) => (\r\n                            <ToolkitProvider\r\n                                keyField='id'\r\n                                columns={columns}\r\n                                data={TableListData}\r\n                                search\r\n                            >\r\n                                {toolkitProps => (\r\n                                    <React.Fragment>\r\n                                        <div className=\"table-responsive\">\r\n                                            <BootstrapTable\r\n                                                keyField={\"id\"}\r\n                                                responsive\r\n                                                bordered={true}\r\n                                                striped={false}\r\n                                                classes={\"table align-middle table-nowrap table-hover\"}\r\n                                                noDataIndication={<div className=\"text-danger text-center \">Items Not available</div>}\r\n                                                headerWrapperClasses={\"thead-light\"}\r\n                                                {...toolkitProps.baseProps}\r\n                                                {...paginationTableProps}\r\n                                            />\r\n                                            {countlabelFunc(toolkitProps, paginationProps, dispatch, \"RoleAccess\")}\r\n                                            {mySearchProps(toolkitProps.searchProps)}\r\n                                        </div>\r\n\r\n                                        <Row className=\"align-items-md-center mt-30\">\r\n                                            <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                <PaginationListStandalone\r\n                                                    {...paginationProps}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </React.Fragment>\r\n                                )\r\n                                }\r\n                            </ToolkitProvider>\r\n                        )\r\n                        }\r\n                    </PaginationProvider>\r\n                    <Modal\r\n                        isOpen={modal_center}\r\n                        toggle={() => { tog_center() }}\r\n                        size=\"xl\"\r\n                    >\r\n                        <RoleAccessCopyFunctionality state={copy_user_RowData} />\r\n\r\n                    </Modal>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default RoleAccessListPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}