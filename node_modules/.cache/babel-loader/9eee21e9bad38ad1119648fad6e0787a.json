{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\CategoryTypePages\\\\CategoryTypeMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { AlertState, commonPageField } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PostMethodForCategoryTypeMaster, PostMethod_ForCategoryTypeMasterAPISuccess, editCategoryTypeIDSuccess, updateCategoryTypeID, getCategoryTypelistSuccess } from \"../../../store/Administrator/CategoryTypeRedux/actions\";\nimport { comAddPageFieldFunc, formValid, onChangeText } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\nimport { CATEGORYTYPE_lIST } from \"../../../routes/route_url\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryTypeMaster = props => {\n  _s();\n\n  const formRef = useRef(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [modalCss, setModalCss] = useState(false);\n  const [EditData, setEditData] = useState([]);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(123); //*** \"isEditdata get all data from ModuleID for Binding  Form controls\n\n  let editDataGetingFromList = props.state;\n  let pageModeProps = props.pageMode; //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    pageField,\n    userAccess\n  } = useSelector(state => ({\n    PostAPIResponse: state.categoryTypeReducer.PostData,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {\n    dispatch(commonPageField(16));\n  }, []);\n  {\n    /** Dyanamic Page access state and OnChange function */\n  }\n  {\n    /*start */\n  }\n  const [state, setState] = useState({\n    values: {\n      Name: \"\",\n      id: \"\"\n    },\n    fieldLabel: {\n      Name: ''\n    },\n    isError: {\n      Name: \"\"\n    },\n    hasValid: {\n      Name: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  });\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\"); //userAccess useEffect\n  // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]); //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    debugger; // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        const {\n          id,\n          Name\n        } = hasEditVal;\n        const {\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        } = { ...state\n        };\n        values.Name = Name;\n        values.id = id;\n        hasValid.Name.valid = true;\n        setState({\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        });\n        dispatch(BreadcrumbShow(hasEditVal.Name));\n      }\n\n      dispatch(editCategoryTypeIDSuccess({\n        Status: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForCategoryTypeMasterAPISuccess({\n        Status: false\n      }));\n\n      if (pageMode === \"other\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: CATEGORYTYPE_lIST\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getCategoryTypelistSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostAPIResponse.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        Name: values.Name\n      });\n\n      if (pageMode === \"edit\") {\n        dispatch(updateCategoryTypeID(jsonBody, values.id));\n      } else {\n        dispatch(PostMethodForCategoryTypeMaster(jsonBody));\n      }\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: [userPageAccessState.PageHeading, \"| FoodERP-React FrontEnd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: fieldLabel.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 239,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"Name\",\n                              id: \"txtName\",\n                              value: values.Name,\n                              type: \"text\",\n                              className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter Name\",\n                              autoComplete: \"off\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                                dispatch(BreadcrumbShow(event.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 240,\n                              columnNumber: 61\n                            }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 254,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 238,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: SaveButton({\n                                  pageMode,\n                                  userPageAccessState,\n                                  module: \"CategoryTypeMaster\"\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 260,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 259,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 258,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CategoryTypeMaster, \"4NlB+8IlAqxaFGwZZxY9r5OZXqM=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = CategoryTypeMaster;\nexport default CategoryTypeMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryTypeMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","MetaTags","AlertState","commonPageField","useHistory","BreadcrumbShow","useDispatch","useSelector","PostMethodForCategoryTypeMaster","PostMethod_ForCategoryTypeMasterAPISuccess","editCategoryTypeIDSuccess","updateCategoryTypeID","getCategoryTypelistSuccess","comAddPageFieldFunc","formValid","onChangeText","SaveButton","CATEGORYTYPE_lIST","CategoryTypeMaster","props","formRef","history","dispatch","modalCss","setModalCss","EditData","setEditData","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","editDataGetingFromList","state","pageModeProps","PostAPIResponse","pageField","userAccess","categoryTypeReducer","PostData","Login","RoleAccessUpdateData","CommonPageFieldReducer","setState","values","Name","id","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","Status","StatusCode","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","value","module"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/CategoryTypePages/CategoryTypeMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\n\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    PostMethodForCategoryTypeMaster,\r\n    PostMethod_ForCategoryTypeMasterAPISuccess,\r\n    editCategoryTypeIDSuccess,\r\n    updateCategoryTypeID,\r\n    getCategoryTypelistSuccess,\r\n} from \"../../../store/Administrator/CategoryTypeRedux/actions\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    onChangeText\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\r\nimport { CATEGORYTYPE_lIST } from \"../../../routes/route_url\";\r\n\r\nconst CategoryTypeMaster = (props) => {\r\n    const formRef = useRef(null);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const [modalCss, setModalCss] = useState(false);\r\n\r\n    const [EditData, setEditData] = useState([]);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n\r\n\r\n    //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n    let editDataGetingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, pageField, userAccess } = useSelector((state) => ({\r\n        PostAPIResponse: state.categoryTypeReducer.PostData,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageField(16))\r\n    }, []);\r\n\r\n    {/** Dyanamic Page access state and OnChange function */ }\r\n    {/*start */ }\r\n    const [state, setState] = useState({\r\n        values: {\r\n            Name: \"\",\r\n            id: \"\"\r\n\r\n        },\r\n        fieldLabel: {\r\n            Name: '',\r\n\r\n        },\r\n\r\n        isError: {\r\n            Name: \"\",\r\n\r\n        },\r\n\r\n        hasValid: {\r\n            Name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n        },\r\n        required: {\r\n\r\n        }\r\n    })\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    //userAccess useEffect\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n    //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n        debugger\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n\r\n                const { id, Name } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n                values.Name = Name;\r\n                values.id = id\r\n\r\n                hasValid.Name.valid = true;\r\n\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(BreadcrumbShow(hasEditVal.Name))\r\n\r\n            }\r\n            dispatch(editCategoryTypeIDSuccess({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForCategoryTypeMasterAPISuccess({ Status: false }))\r\n\r\n\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: CATEGORYTYPE_lIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getCategoryTypelistSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostAPIResponse.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n            });\r\n            if (pageMode === \"edit\") {\r\n                dispatch(updateCategoryTypeID(jsonBody, values.id));\r\n            }\r\n            else {\r\n                dispatch(PostMethodForCategoryTypeMaster(jsonBody))\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading}| FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name}</Label>\r\n                                                            <Input\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={values.Name}\r\n                                                                type=\"text\"\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete=\"off\"\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    {SaveButton({ pageMode, userPageAccessState, module: \"CategoryTypeMaster\" })}\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n\r\n                                                    </Row>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default CategoryTypeMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}