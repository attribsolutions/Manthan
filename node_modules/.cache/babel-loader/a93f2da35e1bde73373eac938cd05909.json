{"ast":null,"code":"import _objectSpread from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import{Button,Card,CardBody,CardHeader,Col,Container,FormGroup,Input,Label,Row}from\"reactstrap\";import{AvField,AvForm}from\"availity-reactstrap-validation\";import Select from\"react-select\";import{MetaTags}from\"react-meta-tags\";import{BreadcrumbShow,commonPageField,commonPageFieldSuccess,editGroupIDSuccess,getGroupList,postGroupList,PostMethod_GroupList_Success,updateGroupID}from\"../../../store/actions\";import{useDispatch,useSelector}from\"react-redux\";import{AlertState}from\"../../../store/actions\";import{CommonGetRoleAccessFunction}from\"../../../components/Common/CommonGetRoleAccessFunction\";import{useHistory}from\"react-router-dom\";import{comAddPageFieldFunc,formValid,initialFiledFunc,onChangeSelect,onChangeText}from\"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";import{SaveButton}from\"../../../components/CommonSaveButton\";import{getGroupTypeslist}from\"../../../store/Administrator/GroupTypeRedux/action\";import{GROUP_lIST}from\"../../../routes/route_url\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var GroupMaster=function GroupMaster(props){var formRef=useRef(null);var history=useHistory();var dispatch=useDispatch();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),EditData=_useState2[0],setEditData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),pageMode=_useState4[0],setPageMode=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modalCss=_useState6[0],setModalCss=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),GroupTypes_dropdown_Select=_useState8[0],setGroupTypes_dropdown_Select=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),userPageAccessState=_useState10[0],setUserPageAccessState=_useState10[1];//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{postMsg:state.GroupReducer.postMsg,GroupTypeAPI:state.GroupTypeReducer.GroupType,userAccess:state.Login.RoleAccessUpdateData,pageField:state.CommonPageFieldReducer.pageField};}),postMsg=_useSelector.postMsg,GroupTypeAPI=_useSelector.GroupTypeAPI,pageField=_useSelector.pageField,userAccess=_useSelector.userAccess;{/** Dyanamic Page access state and OnChange function */}{/*start */}var initialFiled={id:\"\",Name:\"\",GroupType:\"\",GroupTypeName:\"\"};var _useState11=useState(initialFiledFunc(initialFiled)),_useState12=_slicedToArray(_useState11,2),state=_useState12[0],setState=_useState12[1];var values=_objectSpread({},state.values);var isError=state.isError;var fieldLabel=state.fieldLabel;{/*End */}useEffect(function(){dispatch(commonPageFieldSuccess(null));dispatch(commonPageField(119));dispatch(getGroupTypeslist());},[]);var location=_objectSpread({},history.location);var hasShowloction=location.hasOwnProperty(\"editValue\");var hasShowModal=props.hasOwnProperty(\"editValue\");// userAccess useEffect\nuseEffect(function(){var userAcc=null;var locationPath=location.pathname;if(hasShowModal){locationPath=props.masterPath;};userAcc=userAccess.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(userAcc){setUserPageAccessState(userAcc);};},[userAccess]);useEffect(function(){// if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\nif(hasShowloction||hasShowModal){var hasEditVal=null;if(hasShowloction){setPageMode(location.pageMode);hasEditVal=location.editValue;}else if(hasShowModal){hasEditVal=props.editValue;setPageMode(props.pageMode);setModalCss(true);}if(hasEditVal){setEditData(hasEditVal);var _hasEditVal=hasEditVal,id=_hasEditVal.id,Name=_hasEditVal.Name,GroupType=_hasEditVal.GroupType,GroupTypeName=_hasEditVal.GroupTypeName;var _state=_objectSpread({},state),_values=_state.values,_fieldLabel=_state.fieldLabel,hasValid=_state.hasValid,required=_state.required,_isError=_state.isError;_values.Name=Name;_values.id=id;_values.GroupType=GroupType;_values.GroupType={label:GroupTypeName};hasValid.Name.valid=true;hasValid.GroupType.valid=true;setState({values:_values,fieldLabel:_fieldLabel,hasValid:hasValid,required:required,isError:_isError});dispatch(BreadcrumbShow(hasEditVal.Name));}dispatch(editGroupIDSuccess({Status:false}));}},[]);useEffect(function(){if(postMsg.Status===true&&postMsg.StatusCode===200){setGroupTypes_dropdown_Select('');dispatch(PostMethod_GroupList_Success({Status:false}));formRef.current.reset();if(pageMode===\"other\"){dispatch(AlertState({Type:1,Status:true,Message:postMsg.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:postMsg.Message,RedirectPath:false}));}}else if(postMsg.Status===true){dispatch(PostMethod_GroupList_Success({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(postMessage.Message),RedirectPath:false,AfterResponseAction:false}));}},[postMsg]);useEffect(function(){if(pageField){var fieldArr=pageField.PageFieldMaster;comAddPageFieldFunc({state:state,setState:setState,fieldArr:fieldArr});// new change\n}},[pageField]);// get method for dropdown\nuseEffect(function(){dispatch(getGroupList());},[dispatch]);function handllerDivision(e){setGroupTypes_dropdown_Select(e);}var GroupTypesValues=GroupTypeAPI.map(function(Data){return{value:Data.id,label:Data.Name};});var formSubmitHandler=function formSubmitHandler(event){event.preventDefault();if(formValid(state,setState)){debugger;var jsonBody=JSON.stringify({Name:values.Name,GroupType:values.GroupType.value,CreatedBy:1,CreatedOn:\"0002-10-03T12:48:14.910491\",UpdatedBy:1,UpdatedOn:\"0002-10-03T12:48:14.910491\"});if(pageMode===\"edit\"){dispatch(updateGroupID(jsonBody,EditData.id));}else{dispatch(postGroupList(jsonBody));// console.log(\"jsonBody\", jsonBody)\n}}};// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(modalCss||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsxs(\"title\",{children:[userPageAccessState.PageHeading,\" | FoodERP-React FrontEnd\"]})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formSubmitHandler,ref:formRef,noValidate:true,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[fieldLabel.Name,\" \"]}),/*#__PURE__*/_jsxs(Col,{sm:12,children:[/*#__PURE__*/_jsx(Input,{name:\"Name\",id:\"txtName\",value:values.Name,type:\"text\",className:isError.Name.length>0?\"is-invalid form-control\":\"form-control\",placeholder:\"Please Enter Name\",autoComplete:\"off\",onChange:function onChange(event){onChangeText({event:event,state:state,setState:setState});dispatch(BreadcrumbShow(event.target.value));}}),isError.Name.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"invalid-feedback\",children:isError.Name})]})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[\" \",fieldLabel.GroupType,\" \"]}),/*#__PURE__*/_jsx(Select,{name:\"GroupType\"// defaultValue={EmployeeType_DropdownOptions[0]}\n,value:values.GroupType,isSearchable:false,className:\"react-dropdown\",options:GroupTypesValues,onChange:function onChange(hasSelect,evn){return onChangeSelect({hasSelect:hasSelect,evn:evn,state:state,setState:setState});},classNamePrefix:\"dropdown\"}),isError.GroupType.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"text-danger f-8\",children:/*#__PURE__*/_jsx(\"small\",{children:isError.GroupType})})]})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:SaveButton({pageMode:pageMode,userPageAccessState:userPageAccessState,module:\"GroupMaster\"})})})})]})})})})})})})]})]})})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default GroupMaster;","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Button","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","commonPageField","commonPageFieldSuccess","editGroupIDSuccess","getGroupList","postGroupList","PostMethod_GroupList_Success","updateGroupID","useDispatch","useSelector","AlertState","CommonGetRoleAccessFunction","useHistory","comAddPageFieldFunc","formValid","initialFiledFunc","onChangeSelect","onChangeText","SaveButton","getGroupTypeslist","GROUP_lIST","GroupMaster","props","formRef","history","dispatch","EditData","setEditData","pageMode","setPageMode","modalCss","setModalCss","GroupTypes_dropdown_Select","setGroupTypes_dropdown_Select","userPageAccessState","setUserPageAccessState","state","postMsg","GroupReducer","GroupTypeAPI","GroupTypeReducer","GroupType","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","initialFiled","id","Name","GroupTypeName","setState","values","isError","fieldLabel","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","hasValid","required","label","valid","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","fieldArr","PageFieldMaster","handllerDivision","e","GroupTypesValues","map","Data","value","formSubmitHandler","event","preventDefault","jsonBody","CreatedBy","CreatedOn","UpdatedBy","UpdatedOn","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","hasSelect","evn","module"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/GroupPage/GroupMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageField, commonPageFieldSuccess, editGroupIDSuccess, getGroupList, postGroupList, PostMethod_GroupList_Success, updateGroupID } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    initialFiledFunc,\r\n    onChangeSelect,\r\n    onChangeText,\r\n\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\n\r\n\r\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\r\nimport { getGroupTypeslist } from \"../../../store/Administrator/GroupTypeRedux/action\";\r\nimport { GROUP_lIST } from \"../../../routes/route_url\";\r\n\r\n\r\n\r\nconst GroupMaster = (props) => {\r\n\r\n    const formRef = useRef(null);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const [EditData, setEditData] = useState({});\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [modalCss, setModalCss] = useState(false);\r\n\r\n    const [GroupTypes_dropdown_Select, setGroupTypes_dropdown_Select] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        postMsg,\r\n        GroupTypeAPI,\r\n        pageField,\r\n        userAccess } = useSelector((state) => ({\r\n            postMsg: state.GroupReducer.postMsg,\r\n            GroupTypeAPI: state.GroupTypeReducer.GroupType,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            pageField: state.CommonPageFieldReducer.pageField\r\n        }));\r\n\r\n\r\n    {/** Dyanamic Page access state and OnChange function */ }\r\n    {/*start */ }\r\n\r\n    const initialFiled = {\r\n        id: \"\",\r\n        Name: \"\",\r\n        GroupType: \"\",\r\n        GroupTypeName: \"\"\r\n    }\r\n\r\n    const [state, setState] = useState(initialFiledFunc(initialFiled))\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n    {/*End */ }\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(119))\r\n        dispatch(getGroupTypeslist())\r\n    }, []);\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n                setEditData(hasEditVal)\r\n                const { id, Name, GroupType,GroupTypeName } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n                values.Name = Name;\r\n                values.id = id\r\n                values.GroupType = GroupType;\r\n                values.GroupType = { label: GroupTypeName};\r\n                hasValid.Name.valid = true;\r\n                hasValid.GroupType.valid = true;\r\n\r\n\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(BreadcrumbShow(hasEditVal.Name))\r\n\r\n            }\r\n            dispatch(editGroupIDSuccess({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            setGroupTypes_dropdown_Select('')\r\n            dispatch(PostMethod_GroupList_Success({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: false,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(PostMethod_GroupList_Success({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })// new change\r\n        }\r\n    }, [pageField])\r\n\r\n\r\n    // get method for dropdown\r\n    useEffect(() => {\r\n        dispatch(getGroupList());\r\n    }, [dispatch]);\r\n\r\n\r\n    function handllerDivision(e) {\r\n        setGroupTypes_dropdown_Select(e)\r\n    }\r\n\r\n    const GroupTypesValues = GroupTypeAPI.map((Data) => ({\r\n        value: Data.id,\r\n        label: Data.Name\r\n    }));\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            debugger\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                GroupType: values.GroupType.value,\r\n                CreatedBy: 1,\r\n                CreatedOn: \"0002-10-03T12:48:14.910491\",\r\n                UpdatedBy: 1,\r\n                UpdatedOn: \"0002-10-03T12:48:14.910491\"\r\n            });\r\n            \r\n            if (pageMode === \"edit\") {\r\n                dispatch(updateGroupID(jsonBody, EditData.id));\r\n            }\r\n            else {\r\n                dispatch(postGroupList(jsonBody));\r\n                // console.log(\"jsonBody\", jsonBody)\r\n\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n\r\n                                                        <Col md=\"4\">\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n\r\n                                                                <Col sm={12}>\r\n                                                                <Input\r\n                                                                    name=\"Name\"\r\n                                                                    id=\"txtName\"\r\n                                                                    value={values.Name}\r\n                                                                    type=\"text\"\r\n                                                                    className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    placeholder=\"Please Enter Name\"\r\n                                                                    autoComplete='off'\r\n                                                                    onChange={(event) => {\r\n                                                                        onChangeText({ event, state, setState })\r\n                                                                        dispatch(BreadcrumbShow(event.target.value))\r\n                                                                    }}\r\n\r\n                                                                />\r\n                                                                {isError.Name.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                                )}\r\n                                                                   \r\n\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\"> {fieldLabel.GroupType} </Label>\r\n\r\n\r\n                                                                <Select\r\n                                                                        name=\"GroupType\"\r\n                                                                        // defaultValue={EmployeeType_DropdownOptions[0]}\r\n                                                                        value={values.GroupType}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        options={GroupTypesValues}\r\n                                                                        onChange={(hasSelect, evn) => onChangeSelect({ hasSelect, evn, state, setState, })}\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                    />\r\n                                                                    {isError.GroupType.length > 0 && (\r\n                                                                        <span className=\"text-danger f-8\"><small>{isError.GroupType}</small></span>\r\n                                                                    )}\r\n\r\n                                                            </FormGroup>\r\n\r\n                                                        </Row>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n\r\n                                                                    {SaveButton({ pageMode, userPageAccessState, module: \"GroupMaster\" })}\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default GroupMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}