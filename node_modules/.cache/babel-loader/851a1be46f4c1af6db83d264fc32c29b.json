{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { PostMethod_ForCompanyGroupMasterSuccess, getMethod_ForCompanyGroupListSuccess, deleteCompanyGroupTypeIDSuccess, editCompanyGroupTypeSuccess, updateCompanyGroupTypeIDSuccess } from \"./action\";\nimport { get_CompanyGroupList_API, Post_CompanyGroup_API, detelet_CompanyGroupType_List_Api, edit_CompanyGroupType_List_Api, update_CompanyGroupType_List_Api } from \"../../../helpers/backend_helper\";\nimport { POST_METHOD_FOR_COMPANYGROUP_MASTER, GET_METHOD_FOR_COMPANYGROUP_LIST, DELETE_COMPANYGROUP_TYPE_ID, EDIT_COMPANYGROUP_TYPE_ID, UPDATE_COMPANYGROUP_TYPE_ID } from \"./actionType\";\nimport { AlertState } from \"../../actions\";\nimport { PaginationListStandalone } from \"react-bootstrap-table2-paginator\"; // Get List Page API\n\nfunction* Get_CompanyGroup_GenratorFunction() {\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(get_CompanyGroupList_API);\n    yield put(getMethod_ForCompanyGroupListSuccess(response.Data));\n    yield put(SpinnerState(false));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // post api\n\n\n_c = Get_CompanyGroup_GenratorFunction;\n\nfunction* Post_Method_For_CompanyGroup_GenFun(_ref) {\n  let {\n    data\n  } = _ref;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(Post_CompanyGroup_API, data);\n    yield put(SpinnerState(false));\n    yield put(PostMethod_ForCompanyGroupMasterSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // delete api \n\n\n_c2 = Post_Method_For_CompanyGroup_GenFun;\n\nfunction* Delete_CompanyGroupType_ID_GenratorFunction(_ref2) {\n  let {\n    id\n  } = _ref2;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(detelet_CompanyGroupType_List_Api, id);\n    yield put(SpinnerState(false));\n    yield put(deleteCompanyGroupTypeIDSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // edit api\n\n\n_c3 = Delete_CompanyGroupType_ID_GenratorFunction;\n\nfunction* Edit_CompanyGroupType_ID_GenratorFunction(_ref3) {\n  let {\n    id,\n    pageMode\n  } = _ref3;\n\n  try {\n    const response = yield call(edit_CompanyGroupType_List_Api, id);\n    response.pageMode = pageMode;\n    yield put(editCompanyGroupTypeSuccess(response));\n    console.log(\"response in saga\", response);\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // update api\n\n\n_c4 = Edit_CompanyGroupType_ID_GenratorFunction;\n\nfunction* Update_CompanyGroupType_ID_GenratorFunction(_ref4) {\n  let {\n    updateData,\n    ID\n  } = _ref4;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(update_CompanyGroupType_List_Api, updateData, ID);\n    yield put(SpinnerState(false));\n    yield put(updateCompanyGroupTypeIDSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\n_c5 = Update_CompanyGroupType_ID_GenratorFunction;\n\nfunction* CompanyGroupSaga() {\n  yield takeEvery(POST_METHOD_FOR_COMPANYGROUP_MASTER, Post_Method_For_CompanyGroup_GenFun);\n  yield takeEvery(GET_METHOD_FOR_COMPANYGROUP_LIST, Get_CompanyGroup_GenratorFunction);\n  yield takeEvery(DELETE_COMPANYGROUP_TYPE_ID, Delete_CompanyGroupType_ID_GenratorFunction);\n  yield takeEvery(EDIT_COMPANYGROUP_TYPE_ID, Edit_CompanyGroupType_ID_GenratorFunction);\n  yield takeEvery(UPDATE_COMPANYGROUP_TYPE_ID, Update_CompanyGroupType_ID_GenratorFunction);\n}\n\n_c6 = CompanyGroupSaga;\nexport default CompanyGroupSaga;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Get_CompanyGroup_GenratorFunction\");\n$RefreshReg$(_c2, \"Post_Method_For_CompanyGroup_GenFun\");\n$RefreshReg$(_c3, \"Delete_CompanyGroupType_ID_GenratorFunction\");\n$RefreshReg$(_c4, \"Edit_CompanyGroupType_ID_GenratorFunction\");\n$RefreshReg$(_c5, \"Update_CompanyGroupType_ID_GenratorFunction\");\n$RefreshReg$(_c6, \"CompanyGroupSaga\");","map":{"version":3,"names":["call","put","takeEvery","SpinnerState","PostMethod_ForCompanyGroupMasterSuccess","getMethod_ForCompanyGroupListSuccess","deleteCompanyGroupTypeIDSuccess","editCompanyGroupTypeSuccess","updateCompanyGroupTypeIDSuccess","get_CompanyGroupList_API","Post_CompanyGroup_API","detelet_CompanyGroupType_List_Api","edit_CompanyGroupType_List_Api","update_CompanyGroupType_List_Api","POST_METHOD_FOR_COMPANYGROUP_MASTER","GET_METHOD_FOR_COMPANYGROUP_LIST","DELETE_COMPANYGROUP_TYPE_ID","EDIT_COMPANYGROUP_TYPE_ID","UPDATE_COMPANYGROUP_TYPE_ID","AlertState","PaginationListStandalone","Get_CompanyGroup_GenratorFunction","response","Data","error","Type","Status","Message","Post_Method_For_CompanyGroup_GenFun","data","Delete_CompanyGroupType_ID_GenratorFunction","id","Edit_CompanyGroupType_ID_GenratorFunction","pageMode","console","log","Update_CompanyGroupType_ID_GenratorFunction","updateData","ID","CompanyGroupSaga"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/CompanyGroupRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\n import { PostMethod_ForCompanyGroupMasterSuccess, getMethod_ForCompanyGroupListSuccess,  deleteCompanyGroupTypeIDSuccess, editCompanyGroupTypeSuccess, updateCompanyGroupTypeIDSuccess} from \"./action\";\r\nimport {\r\n   get_CompanyGroupList_API,\r\n   Post_CompanyGroup_API,\r\n   detelet_CompanyGroupType_List_Api,\r\n   edit_CompanyGroupType_List_Api,\r\n   update_CompanyGroupType_List_Api,\r\n} from \"../../../helpers/backend_helper\";\r\n\r\nimport { POST_METHOD_FOR_COMPANYGROUP_MASTER,\r\n  GET_METHOD_FOR_COMPANYGROUP_LIST,\r\n  DELETE_COMPANYGROUP_TYPE_ID,\r\n  EDIT_COMPANYGROUP_TYPE_ID,\r\n  UPDATE_COMPANYGROUP_TYPE_ID\r\n\r\n} from \"./actionType\";\r\nimport { AlertState } from \"../../actions\";\r\nimport { PaginationListStandalone } from \"react-bootstrap-table2-paginator\";\r\n\r\n// Get List Page API\r\nfunction* Get_CompanyGroup_GenratorFunction() {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(get_CompanyGroupList_API);\r\n    yield put(getMethod_ForCompanyGroupListSuccess(response.Data));\r\n    yield put(SpinnerState(false))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// post api\r\nfunction* Post_Method_For_CompanyGroup_GenFun({ data }) {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(Post_CompanyGroup_API, data);\r\n    yield put(SpinnerState(false))\r\n    yield put(PostMethod_ForCompanyGroupMasterSuccess(response));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// delete api \r\nfunction* Delete_CompanyGroupType_ID_GenratorFunction({ id }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(detelet_CompanyGroupType_List_Api, id);\r\n    yield put(SpinnerState(false))\r\n    yield put(deleteCompanyGroupTypeIDSuccess(response))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// edit api\r\nfunction* Edit_CompanyGroupType_ID_GenratorFunction({ id ,pageMode}) {\r\n  try {\r\n    const response = yield call(edit_CompanyGroupType_List_Api, id);\r\n    response.pageMode=pageMode\r\n    yield put(editCompanyGroupTypeSuccess(response));\r\n    console.log(\"response in saga\", response)\r\n\r\n  } catch (error) {\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// update api\r\nfunction* Update_CompanyGroupType_ID_GenratorFunction({ updateData, ID }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(update_CompanyGroupType_List_Api, updateData, ID);\r\n    yield put(SpinnerState(false))\r\n    yield put(updateCompanyGroupTypeIDSuccess(response))\r\n  }\r\n  catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction* CompanyGroupSaga() {\r\n  yield takeEvery(POST_METHOD_FOR_COMPANYGROUP_MASTER, Post_Method_For_CompanyGroup_GenFun)\r\n  yield takeEvery(GET_METHOD_FOR_COMPANYGROUP_LIST, Get_CompanyGroup_GenratorFunction)\r\n  yield takeEvery(DELETE_COMPANYGROUP_TYPE_ID, Delete_CompanyGroupType_ID_GenratorFunction)\r\n  yield takeEvery(EDIT_COMPANYGROUP_TYPE_ID, Edit_CompanyGroupType_ID_GenratorFunction)\r\n  yield takeEvery(UPDATE_COMPANYGROUP_TYPE_ID, Update_CompanyGroupType_ID_GenratorFunction)\r\n}\r\n\r\nexport default CompanyGroupSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module"}