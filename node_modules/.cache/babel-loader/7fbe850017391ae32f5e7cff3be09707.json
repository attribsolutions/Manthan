{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\VehiclePages\\\\VehicleMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Label, Row, Table, Button, Input } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Tbody, Thead } from \"react-super-responsive-table\";\nimport { AlertState } from \"../../../store/actions\";\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\nimport { PostMethodForVehicleMaster, getMethodForVehicleList, getMethod_DriverList_ForDropDown, getMethod_VehicleTypes_ForDropDown, PostMethod_ForVehicleMasterSuccess, getMethod_ForVehicleListSuccess, editVehicleTypeSuccess, updateVehicleTypeID } from \"../../../store/Administrator/VehicleRedux/action\";\nimport { get_Division_ForDropDown } from \"../../../store/Administrator/ItemsRedux/action\";\nimport { useHistory } from \"react-router-dom\"; // import { actionChannel } from \"redux-saga/effects\";\n\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\nimport { VEHICLE_lIST } from \"../../../routes/route_url\";\nimport { comAddPageFieldFunc, formValid, onChangeSelect, onChangeText } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VehicleMaster = props => {\n  _s();\n\n  //*** \"isEditdata get all data from ModuleID for Binding  Form controls\n  let editDataGatingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  let propsPageMode = props.pageMode;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const formRef = useRef(null); //*** \"isEditdata get all data from ModuleID for Binding  Form controls\n\n  const [EditData, setEditData] = useState({});\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(\"save\");\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [divisionData, setDivisionData] = useState([]);\n  const [divisionType_dropdown_Select, setDivisionType_dropdown_Select] = useState(\"\");\n  const [DriverList_dropdown_Select, setDriverList_dropdown_Select] = useState(\"\");\n  const [VehicleType_dropdown_Select, setVehicleType_dropdown_Select] = useState(\"\");\n  const [state, setState] = useState({\n    values: {\n      id: \"\",\n      VehicleNumber: \"\",\n      Description: \"\",\n      DriverName: \"\",\n      Vehicletype: \"\",\n      VehicleDivisions: \"\"\n    },\n    fieldLabel: {\n      VehicleNumber: \"\",\n      Description: \"\",\n      DriverName: \"\",\n      Vehicletype: \"\",\n      VehicleDivisions: \"\"\n    },\n    isError: {\n      VehicleNumber: \"\",\n      Description: \"\",\n      DriverName: \"\",\n      Vehicletype: \"\",\n      VehicleDivisions: \"\"\n    },\n    hasValid: {\n      VehicleNumber: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      Description: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      DriverName: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      Vehicletype: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      VehicleDivisions: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  }); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    VehicleList,\n    Divisions,\n    VehicleTypes,\n    pageField,\n    DriverList_redux,\n    userAccess\n  } = useSelector(state => ({\n    PostAPIResponse: state.VehicleReducer.PostDataMessage,\n    VehicleList: state.VehicleReducer.VehicleList,\n    Divisions: state.ItemMastersReducer.Division,\n    VehicleTypes: state.VehicleReducer.VehicleTypes,\n    DriverList_redux: state.VehicleReducer.DriverList,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\");\n  useEffect(() => {\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(29));\n  }, []);\n  useEffect(() => {\n    //  dispatch(PostMethodForVehicleMaster());\n    dispatch(getMethodForVehicleList());\n    dispatch(getMethod_DriverList_ForDropDown());\n    dispatch(getMethod_VehicleTypes_ForDropDown());\n    dispatch(get_Division_ForDropDown());\n  }, [dispatch]); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        setEditData(hasEditVal);\n        setDriverList_dropdown_Select({\n          value: hasEditVal.Driver,\n          label: hasEditVal.DriverName\n        });\n        setVehicleType_dropdown_Select({\n          value: hasEditVal.VehicleType,\n          label: hasEditVal.VehicleTypeName\n        });\n        let division = hasEditVal.VehicleDivisions.map(index => {\n          return {\n            label: index.DivisionName,\n            value: index.Division\n          };\n        });\n        setDivisionData(division);\n        dispatch(editVehicleTypeSuccess({\n          Status: false\n        }));\n        dispatch(BreadcrumbShow(hasEditVal.VehicleTypeName));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForVehicleMasterSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: VEHICLE_lIST\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getMethod_ForVehicleListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  const DivisionType_DropdownOptions = Divisions.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function DivisionType_DropDown_handller(e) {\n    setDivisionType_dropdown_Select(e);\n  }\n\n  const DriverList_DropdownOptions = DriverList_redux.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function DriverList_DropDown_handller(e) {\n    setDriverList_dropdown_Select(e);\n  }\n\n  const VehicleType_DropdownOptions = VehicleTypes.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function VehicleType_DropDown_handller(e) {\n    setVehicleType_dropdown_Select(e);\n  } // const VehicleList_DropdownOptions = VehicleList_redux.map((data) => ({\n  //     value: data.id,\n  //     label: data.Name\n  // }));\n  // function VehicleList_DropDown_handller(e) {\n  //     setVehicleList_dropdown_Select(e)\n  // }\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      var division = divisionData.map(i => ({\n        Division: i.value\n      }));\n      const jsonBody = JSON.stringify({\n        VehicleNumber: values.VehicleNumber,\n        Description: values.Description,\n        Driver: DriverList_dropdown_Select.value,\n        VehicleType: VehicleType_dropdown_Select.value,\n        Divisions: division\n      });\n\n      if (pageMode === 'edit') {\n        dispatch(updateVehicleTypeID(jsonBody, values.id));\n      } else {\n        dispatch(PostMethodForVehicleMaster(jsonBody));\n      }\n    }\n  }; /// Role Table Validation\n\n\n  function AddDivisionHandler() {\n    const find = divisionData.find(element => {\n      return element.value === divisionType_dropdown_Select.value;\n    });\n\n    if (divisionType_dropdown_Select.length <= 0) {\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: \"Select One Role\"\n      }));\n    } else if (find === undefined) {\n      setDivisionData([...divisionData, divisionType_dropdown_Select]);\n    } else {\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: \"DivisionType already Exists \"\n      }));\n    }\n  } // For Delete Button in table\n\n\n  function UserRoles_DeleteButton_Handller(tableValue) {\n    setDivisionData(divisionData.filter(item => !(item.value === tableValue)));\n  } // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: [userPageAccessState.PageHeading, \"  | FoodERP-React FrontEnd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          className: \"mt-3\",\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            md: \"3\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [fieldLabel.DriverName, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 397,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 12,\n                                children: [/*#__PURE__*/_jsxDEV(Select, {\n                                  id: \"DriverDropDown \" // disabled={true}\n                                  ,\n                                  name: \"DriverName\",\n                                  value: values.Driver,\n                                  isSearchable: false,\n                                  className: \"react-dropdown\",\n                                  classNamePrefix: \"dropdown\",\n                                  options: DriverList_DropdownOptions,\n                                  onChange: (v, e) => onChangeSelect({\n                                    e,\n                                    v,\n                                    state,\n                                    setState\n                                  })\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 399,\n                                  columnNumber: 69\n                                }, this), isError.DriverName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"text-danger f-8\",\n                                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                                    children: isError.DriverName\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 411,\n                                    columnNumber: 107\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 411,\n                                  columnNumber: 73\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 398,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 396,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 395,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"1\",\n                            children: \"  \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 418,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"3\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [\" \", fieldLabel.Vehicletype]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 421,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 12,\n                                children: [/*#__PURE__*/_jsxDEV(Select, {\n                                  id: \"VehicleDropDown \" // disabled={true}\n                                  ,\n                                  name: \"Vehicletype\",\n                                  value: values.Vehicle,\n                                  isSearchable: false,\n                                  className: \"react-dropdown\",\n                                  classNamePrefix: \"dropdown\",\n                                  options: VehicleType_DropdownOptions,\n                                  onChange: (v, e) => onChangeSelect({\n                                    e,\n                                    v,\n                                    state,\n                                    setState\n                                  })\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 423,\n                                  columnNumber: 69\n                                }, this), isError.Vehicletype.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"text-danger f-8\",\n                                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                                    children: isError.Vehicletype\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 435,\n                                    columnNumber: 107\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 435,\n                                  columnNumber: 73\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 422,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 420,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 419,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 442,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-8 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [fieldLabel.VehicleNumber, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 446,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"VehicleNumber\",\n                                id: \"VehicleNumber\",\n                                value: values.VehicleNumber,\n                                type: \"text\",\n                                className: isError.VehicleNumber.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                placeholder: \"Please Enter VehicleNumber\",\n                                autoComplete: \"off\",\n                                onChange: event => {\n                                  onChangeText({\n                                    event,\n                                    state,\n                                    setState\n                                  });\n                                  dispatch(BreadcrumbShow(event.target.value));\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 447,\n                                columnNumber: 65\n                              }, this), isError.VehicleNumber.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.VehicleNumber\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 461,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 445,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 444,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"3\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: [\" \", fieldLabel.Description, \" \"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 470,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                  name: \"Description\",\n                                  id: \"Description\",\n                                  value: values.Description,\n                                  type: \"text\",\n                                  className: isError.Description.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                  placeholder: \"Please Enter Description\",\n                                  autoComplete: \"off\",\n                                  onChange: event => {\n                                    onChangeText({\n                                      event,\n                                      state,\n                                      setState\n                                    });\n                                    dispatch(BreadcrumbShow(event.target.value));\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 471,\n                                  columnNumber: 69\n                                }, this), isError.Description.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"invalid-feedback\",\n                                  children: isError.Description\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 485,\n                                  columnNumber: 73\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 469,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 468,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 467,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"col col-sm-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom21\",\n                                children: \"Division\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 493,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                value: divisionType_dropdown_Select,\n                                options: DivisionType_DropdownOptions,\n                                onChange: e => {\n                                  DivisionType_DropDown_handller(e);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 494,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 492,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Col, {\n                              sm: 1,\n                              style: {\n                                marginTop: '28px'\n                              },\n                              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"button\",\n                                className: \"btn btn-sm mt-1 mb-0 btn-light  btn-outline-primary\",\n                                onClick: () => AddDivisionHandler(),\n                                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"dripicons-plus \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 509,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 502,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 500,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Col, {\n                              sm: 3,\n                              style: {\n                                marginTop: '28px'\n                              },\n                              children: divisionData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"table-responsive\",\n                                children: /*#__PURE__*/_jsxDEV(Table, {\n                                  className: \"table table-bordered  text-center\",\n                                  children: [/*#__PURE__*/_jsxDEV(Thead, {\n                                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                        children: \"Division Type\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 519,\n                                        columnNumber: 85\n                                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                        children: \"Action\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 521,\n                                        columnNumber: 85\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 518,\n                                      columnNumber: 81\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 517,\n                                    columnNumber: 77\n                                  }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                                    children: divisionData.map(TableValue => /*#__PURE__*/_jsxDEV(\"tr\", {\n                                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                        children: TableValue.label\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 527,\n                                        columnNumber: 89\n                                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                          className: \"mdi mdi-trash-can d-block text-danger font-size-20\",\n                                          onClick: () => {\n                                            UserRoles_DeleteButton_Handller(TableValue.value);\n                                          }\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 531,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 530,\n                                        columnNumber: 89\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 526,\n                                      columnNumber: 85\n                                    }, this))\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 524,\n                                    columnNumber: 77\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 516,\n                                  columnNumber: 73\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 515,\n                                columnNumber: 69\n                              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 512,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 491,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: SaveButton({\n                                  pageMode,\n                                  userPageAccessState,\n                                  module: \"VehicleMaster\"\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 550,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 549,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 548,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 394,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(VehicleMaster, \"6AKo5jwxDvmnlF8/PYO6F+kAdHU=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = VehicleMaster;\nexport default VehicleMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"VehicleMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Label","Row","Table","Button","Input","AvField","AvForm","Select","MetaTags","BreadcrumbShow","commonPageField","commonPageFieldSuccess","useDispatch","useSelector","Tbody","Thead","AlertState","CommonGetRoleAccessFunction","PostMethodForVehicleMaster","getMethodForVehicleList","getMethod_DriverList_ForDropDown","getMethod_VehicleTypes_ForDropDown","PostMethod_ForVehicleMasterSuccess","getMethod_ForVehicleListSuccess","editVehicleTypeSuccess","updateVehicleTypeID","get_Division_ForDropDown","useHistory","SaveButton","VEHICLE_lIST","comAddPageFieldFunc","formValid","onChangeSelect","onChangeText","VehicleMaster","props","editDataGatingFromList","state","pageModeProps","pageMode","propsPageMode","dispatch","history","formRef","EditData","setEditData","modalCss","setModalCss","setPageMode","userPageAccessState","setUserPageAccessState","divisionData","setDivisionData","divisionType_dropdown_Select","setDivisionType_dropdown_Select","DriverList_dropdown_Select","setDriverList_dropdown_Select","VehicleType_dropdown_Select","setVehicleType_dropdown_Select","setState","values","id","VehicleNumber","Description","DriverName","Vehicletype","VehicleDivisions","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","PostAPIResponse","VehicleList","Divisions","VehicleTypes","pageField","DriverList_redux","userAccess","VehicleReducer","PostDataMessage","ItemMastersReducer","Division","DriverList","Login","RoleAccessUpdateData","CommonPageFieldReducer","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","value","Driver","label","VehicleType","VehicleTypeName","division","map","index","DivisionName","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","fieldArr","PageFieldMaster","DivisionType_DropdownOptions","data","Name","DivisionType_DropDown_handller","e","DriverList_DropdownOptions","DriverList_DropDown_handller","VehicleType_DropdownOptions","VehicleType_DropDown_handller","formSubmitHandler","event","preventDefault","i","jsonBody","AddDivisionHandler","element","length","undefined","UserRoles_DeleteButton_Handller","tableValue","filter","item","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","v","Vehicle","target","TableValue","module"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/VehiclePages/VehicleMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Label,\r\n    Row,\r\n    Table,\r\n    Button,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Tbody, Thead } from \"react-super-responsive-table\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport {\r\n    PostMethodForVehicleMaster,\r\n    getMethodForVehicleList,\r\n    getMethod_DriverList_ForDropDown,\r\n    getMethod_VehicleTypes_ForDropDown,\r\n    PostMethod_ForVehicleMasterSuccess,\r\n    getMethod_ForVehicleListSuccess,\r\n    editVehicleTypeSuccess,\r\n    updateVehicleTypeID\r\n} from \"../../../store/Administrator/VehicleRedux/action\";\r\nimport { get_Division_ForDropDown, } from \"../../../store/Administrator/ItemsRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { actionChannel } from \"redux-saga/effects\";\r\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\r\nimport { VEHICLE_lIST } from \"../../../routes/route_url\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    onChangeSelect,\r\n    onChangeText\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\n\r\n\r\nconst VehicleMaster = (props) => {\r\n    //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n    let editDataGatingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n    let propsPageMode = props.pageMode;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    const formRef = useRef(null);\r\n\r\n    //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n    const [EditData, setEditData] = useState({});\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(\"save\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n    const [divisionData, setDivisionData] = useState([]);\r\n    const [divisionType_dropdown_Select, setDivisionType_dropdown_Select] = useState(\"\");\r\n    const [DriverList_dropdown_Select, setDriverList_dropdown_Select] = useState(\"\");\r\n    const [VehicleType_dropdown_Select, setVehicleType_dropdown_Select] = useState(\"\");\r\n\r\n    const [state, setState] = useState({\r\n        values: {\r\n            id: \"\",\r\n            VehicleNumber: \"\",\r\n            Description: \"\",\r\n            DriverName: \"\",\r\n            Vehicletype: \"\",\r\n            VehicleDivisions: \"\"\r\n        },\r\n        fieldLabel: {\r\n            VehicleNumber: \"\",\r\n            Description: \"\",\r\n            DriverName: \"\",\r\n            Vehicletype: \"\",\r\n            VehicleDivisions: \"\"\r\n        },\r\n\r\n        isError: {\r\n            VehicleNumber: \"\",\r\n            Description: \"\",\r\n            DriverName: \"\",\r\n            Vehicletype: \"\",\r\n            VehicleDivisions: \"\"\r\n        },\r\n\r\n        hasValid: {\r\n            VehicleNumber: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            Description: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            DriverName: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            Vehicletype: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            VehicleDivisions: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            }\r\n        },\r\n        required: {\r\n\r\n        }\r\n    }\r\n    )\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse,\r\n        VehicleList,\r\n        Divisions,\r\n        VehicleTypes,\r\n        pageField,\r\n        DriverList_redux,\r\n        userAccess } = useSelector((state) => ({\r\n            PostAPIResponse: state.VehicleReducer.PostDataMessage,\r\n            VehicleList: state.VehicleReducer.VehicleList,\r\n            Divisions: state.ItemMastersReducer.Division,\r\n            VehicleTypes: state.VehicleReducer.VehicleTypes,\r\n            DriverList_redux: state.VehicleReducer.DriverList,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            pageField: state.CommonPageFieldReducer.pageField\r\n        }));\r\n\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(29))\r\n    }, []);   \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //  dispatch(PostMethodForVehicleMaster());\r\n        dispatch(getMethodForVehicleList());\r\n        dispatch(getMethod_DriverList_ForDropDown());\r\n        dispatch(getMethod_VehicleTypes_ForDropDown());\r\n        dispatch(get_Division_ForDropDown());\r\n    }, [dispatch]);\r\n\r\n\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n                setEditData(hasEditVal)\r\n                setDriverList_dropdown_Select({\r\n                    value: hasEditVal.Driver,\r\n                    label: hasEditVal.DriverName\r\n                });\r\n                setVehicleType_dropdown_Select({\r\n                    value: hasEditVal.VehicleType,\r\n                    label: hasEditVal.VehicleTypeName\r\n                });\r\n                let division = hasEditVal.VehicleDivisions.map((index) => {\r\n                    return {\r\n                        label: index.DivisionName,\r\n                        value: index.Division\r\n                    }\r\n                })\r\n                setDivisionData(division)\r\n                dispatch(editVehicleTypeSuccess({ Status: false }))\r\n                dispatch(BreadcrumbShow(hasEditVal.VehicleTypeName))\r\n\r\n            }\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n\r\n            dispatch(PostMethod_ForVehicleMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: VEHICLE_lIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForVehicleListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    const DivisionType_DropdownOptions = Divisions.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function DivisionType_DropDown_handller(e) {\r\n        setDivisionType_dropdown_Select(e)\r\n    }\r\n\r\n    const DriverList_DropdownOptions = DriverList_redux.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function DriverList_DropDown_handller(e) {\r\n        setDriverList_dropdown_Select(e)\r\n    }\r\n\r\n    const VehicleType_DropdownOptions = VehicleTypes.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function VehicleType_DropDown_handller(e) {\r\n        setVehicleType_dropdown_Select(e)\r\n    }\r\n\r\n    // const VehicleList_DropdownOptions = VehicleList_redux.map((data) => ({\r\n    //     value: data.id,\r\n    //     label: data.Name\r\n    // }));\r\n\r\n    // function VehicleList_DropDown_handller(e) {\r\n    //     setVehicleList_dropdown_Select(e)\r\n    // }\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            var division = divisionData.map(i => ({ Division: i.value }))\r\n            const jsonBody = JSON.stringify({\r\n                VehicleNumber: values.VehicleNumber,\r\n                Description: values.Description,\r\n                Driver: DriverList_dropdown_Select.value,\r\n                VehicleType: VehicleType_dropdown_Select.value,\r\n                Divisions: division,\r\n            });\r\n\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateVehicleTypeID(jsonBody, values.id));\r\n            }\r\n            else {\r\n                dispatch(PostMethodForVehicleMaster(jsonBody));\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    /// Role Table Validation\r\n    function AddDivisionHandler() {\r\n        const find = divisionData.find((element) => {\r\n            return element.value === divisionType_dropdown_Select.value\r\n        });\r\n\r\n        if (divisionType_dropdown_Select.length <= 0) {\r\n            dispatch(AlertState({\r\n                Type: 3, Status: true,\r\n                Message: \"Select One Role\",\r\n            }));\r\n        }\r\n        else if (find === undefined) {\r\n            setDivisionData([...divisionData, divisionType_dropdown_Select]);\r\n        }\r\n        else {\r\n            dispatch(AlertState({\r\n                Type: 4, Status: true,\r\n                Message: \"DivisionType already Exists \",\r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    // For Delete Button in table\r\n    function UserRoles_DeleteButton_Handller(tableValue) {\r\n        setDivisionData(divisionData.filter(\r\n            (item) => !(item.value === tableValue)\r\n        )\r\n        )\r\n    }\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading}  | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n\r\n                                                    <Row className=\"mt-3\">\r\n                                                        <Col md=\"3\">\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.DriverName} </Label>\r\n                                                                <Col sm={12}>\r\n                                                                    <Select\r\n                                                                        id=\"DriverDropDown \"\r\n                                                                        // disabled={true}\r\n                                                                        name=\"DriverName\"\r\n                                                                        value={values.Driver}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                        options={DriverList_DropdownOptions}\r\n                                                                        onChange={(v, e) => onChangeSelect({ e, v, state, setState })}\r\n                                                                    />\r\n                                                                    {isError.DriverName.length > 0 && (\r\n                                                                        <span className=\"text-danger f-8\"><small>{isError.DriverName}</small></span>\r\n                                                                    )}\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n\r\n                                                        <Col md=\"1\">  </Col>\r\n                                                        <Col md=\"3\">\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                                <Label htmlFor=\"validationCustom01\"> {fieldLabel.Vehicletype}</Label>\r\n                                                                <Col sm={12}>\r\n                                                                    <Select\r\n                                                                        id=\"VehicleDropDown \"\r\n                                                                        // disabled={true}\r\n                                                                        name=\"Vehicletype\"\r\n                                                                        value={values.Vehicle}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                        options={VehicleType_DropdownOptions}\r\n                                                                        onChange={(v, e) => onChangeSelect({ e, v, state, setState })}\r\n                                                                    />\r\n                                                                    {isError.Vehicletype.length > 0 && (\r\n                                                                        <span className=\"text-danger f-8\"><small>{isError.Vehicletype}</small></span>\r\n                                                                    )}\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n\r\n                                                        <Col md=\"1\">\r\n                                                        </Col>\r\n                                                        <Col md=\"4\">\r\n                                                            <FormGroup className=\"mb-2 col col-sm-8 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.VehicleNumber} </Label>\r\n                                                                <Input\r\n                                                                    name=\"VehicleNumber\"\r\n                                                                    id=\"VehicleNumber\"\r\n                                                                    value={values.VehicleNumber}\r\n                                                                    type=\"text\"\r\n                                                                    className={isError.VehicleNumber.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    placeholder=\"Please Enter VehicleNumber\"\r\n                                                                    autoComplete='off'\r\n                                                                    onChange={(event) => {\r\n                                                                        onChangeText({ event, state, setState })\r\n                                                                        dispatch(BreadcrumbShow(event.target.value))\r\n                                                                    }}\r\n                                                                />\r\n                                                                {isError.VehicleNumber.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.VehicleNumber}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n\r\n                                                        </Col>\r\n\r\n                                                        <Row>\r\n                                                            <Col md=\"3\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label htmlFor=\"validationCustom01\"> {fieldLabel.Description} </Label>\r\n                                                                    <Input\r\n                                                                        name=\"Description\"\r\n                                                                        id=\"Description\"\r\n                                                                        value={values.Description}\r\n                                                                        type=\"text\"\r\n                                                                        className={isError.Description.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                        placeholder=\"Please Enter Description\"\r\n                                                                        autoComplete='off'\r\n                                                                        onChange={(event) => {\r\n                                                                            onChangeText({ event, state, setState })\r\n                                                                            dispatch(BreadcrumbShow(event.target.value))\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    {isError.Description.length > 0 && (\r\n                                                                        <span className=\"invalid-feedback\">{isError.Description}</span>\r\n                                                                    )}\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"col col-sm-3\">\r\n                                                            <Label htmlFor=\"validationCustom21\">Division</Label>\r\n                                                                <Select\r\n                                                                    value={divisionType_dropdown_Select}\r\n                                                                    options={DivisionType_DropdownOptions}\r\n                                                                    onChange={(e) => { DivisionType_DropDown_handller(e) }}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                            <Col sm={1} style={{ marginTop: '28px' }} >\r\n                                                                {\" \"}\r\n                                                                <Button\r\n                                                                    type=\"button\"\r\n                                                                    className=\"btn btn-sm mt-1 mb-0 btn-light  btn-outline-primary\"\r\n                                                                    onClick={() =>\r\n                                                                        AddDivisionHandler()\r\n                                                                    }\r\n                                                                >\r\n                                                                    <i className=\"dripicons-plus \"></i>\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                            <Col sm={3} style={{ marginTop: '28px' }}>\r\n                                                                {divisionData.length > 0 ? (\r\n\r\n                                                                    <div className=\"table-responsive\">\r\n                                                                        <Table className=\"table table-bordered  text-center\">\r\n                                                                            <Thead >\r\n                                                                                <tr>\r\n                                                                                    <th>Division Type</th>\r\n\r\n                                                                                    <th>Action</th>\r\n                                                                                </tr>\r\n                                                                            </Thead>\r\n                                                                            <Tbody>\r\n                                                                                {divisionData.map((TableValue) => (\r\n                                                                                    <tr>\r\n                                                                                        <td>\r\n                                                                                            {TableValue.label}\r\n                                                                                        </td>\r\n                                                                                        <td>\r\n                                                                                            <i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                UserRoles_DeleteButton_Handller(TableValue.value)\r\n                                                                                            }} >\r\n                                                                                            </i>\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                ))}\r\n                                                                            </Tbody>\r\n                                                                        </Table>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                    <>\r\n                                                                    </>\r\n                                                                )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    {SaveButton({ pageMode, userPageAccessState, module: \"VehicleMaster\" })}\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default VehicleMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}