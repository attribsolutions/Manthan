{"ast":null,"code":"import firebase from \"firebase/app\"; // Add the Firebase products that you want to use\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig) {\n    this.registerUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.editProfileAPI = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.loginUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.forgetPassword = email => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().sendPasswordResetEmail(email, {\n          url: window.location.protocol + \"//\" + window.location.host + \"/login\"\n        }).then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.logout = () => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signOut().then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.socialLoginUser = (data, type) => {\n      let credential = {};\n\n      if (type === \"google\") {\n        credential = firebase.auth.GoogleAuthProvider.credential(data.idToken, data.token);\n      } else if (type === \"facebook\") {\n        credential = firebase.auth.FacebookAuthProvider.credential(data.token);\n      }\n\n      return new Promise((resolve, reject) => {\n        if (!!credential) {\n          firebase.auth().signInWithCredential(credential).then(user => {\n            resolve(this.addNewUserToFirestore(user));\n          }).catch(error => {\n            reject(this._handleError(error));\n          });\n        }\n      });\n    };\n\n    this.addNewUserToFirestore = user => {\n      const collection = firebase.firestore().collection(\"users\");\n      const {\n        profile\n      } = user.additionalUserInfo;\n      const details = {\n        firstName: profile.given_name ? profile.given_name : profile.first_name,\n        lastName: profile.family_name ? profile.family_name : profile.last_name,\n        fullName: profile.name,\n        email: profile.email,\n        picture: profile.picture,\n        createdDtm: firebase.firestore.FieldValue.serverTimestamp(),\n        lastLoginTime: firebase.firestore.FieldValue.serverTimestamp()\n      };\n      collection.doc(firebase.auth().currentUser.uid).set(details);\n      return {\n        user,\n        details\n      };\n    };\n\n    this.setLoggeedInUser = user => {\n      localStorage.setItem(\"authUser\", JSON.stringify(user));\n    };\n\n    this.getAuthenticatedUser = () => {\n      if (!localStorage.getItem(\"authUser\")) return null;\n      return JSON.parse(localStorage.getItem(\"authUser\"));\n    };\n\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          localStorage.setItem(\"authUser\", JSON.stringify(user));\n        } else {\n          localStorage.removeItem(\"authUser\");\n        }\n      });\n    }\n  }\n  /**\r\n   * Registers the user with given details\r\n   */\n\n\n  /**\r\n   * Handle the error\r\n   * @param {*} error\r\n   */\n  _handleError(error) {\n    // var errorCode = error.code;\n    var errorMessage = error.message;\n    return errorMessage;\n  }\n\n}\n\nlet _fireBaseBackend = null;\n/**\r\n * Initilize the backend\r\n * @param {*} config\r\n */\n\nconst initFirebaseBackend = config => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config);\n  }\n\n  return _fireBaseBackend;\n};\n/**\r\n * Returns the firebase backend\r\n */\n\n\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend;\n};\n\nexport { initFirebaseBackend, getFirebaseBackend };","map":{"version":3,"names":["firebase","FirebaseAuthBackend","constructor","firebaseConfig","registerUser","email","password","Promise","resolve","reject","auth","createUserWithEmailAndPassword","then","user","currentUser","error","_handleError","editProfileAPI","loginUser","signInWithEmailAndPassword","forgetPassword","sendPasswordResetEmail","url","window","location","protocol","host","catch","logout","signOut","socialLoginUser","data","type","credential","GoogleAuthProvider","idToken","token","FacebookAuthProvider","signInWithCredential","addNewUserToFirestore","collection","firestore","profile","additionalUserInfo","details","firstName","given_name","first_name","lastName","family_name","last_name","fullName","name","picture","createdDtm","FieldValue","serverTimestamp","lastLoginTime","doc","uid","set","setLoggeedInUser","localStorage","setItem","JSON","stringify","getAuthenticatedUser","getItem","parse","initializeApp","onAuthStateChanged","removeItem","errorMessage","message","_fireBaseBackend","initFirebaseBackend","config","getFirebaseBackend"],"sources":["D:/GitProjects/Manthan/src/helpers/firebase_helper.js"],"sourcesContent":["import firebase from \"firebase/app\"\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\n\r\nclass FirebaseAuthBackend {\r\n  \r\n  constructor(firebaseConfig) {\r\n    if (firebaseConfig) {\r\n      // Initialize Firebase\r\n      firebase.initializeApp(firebaseConfig)\r\n      firebase.auth().onAuthStateChanged(user => {\r\n        if (user) {\r\n          localStorage.setItem(\"authUser\", JSON.stringify(user))\r\n        } else {\r\n          localStorage.removeItem(\"authUser\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers the user with given details\r\n   */\r\n\r\n  registerUser = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(\r\n          user => {\r\n            resolve(firebase.auth().currentUser)\r\n          },\r\n          error => {\r\n            reject(this._handleError(error))\r\n          }\r\n        )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the user with given details\r\n   */\r\n\r\n  editProfileAPI = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(\r\n          user => {\r\n            resolve(firebase.auth().currentUser)\r\n          },\r\n          error => {\r\n            reject(this._handleError(error))\r\n          }\r\n        )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Login user with given details\r\n   */\r\n  loginUser = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(\r\n          user => {\r\n            resolve(firebase.auth().currentUser)\r\n          },\r\n          error => {\r\n            reject(this._handleError(error))\r\n          }\r\n        )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * forget Password user with given details\r\n   */\r\n  forgetPassword = email => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .sendPasswordResetEmail(email, {\r\n          url:\r\n            window.location.protocol + \"//\" + window.location.host + \"/login\",\r\n        })\r\n        .then(() => {\r\n          resolve(true)\r\n        })\r\n        .catch(error => {\r\n          reject(this._handleError(error))\r\n        })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Logout the user\r\n   */\r\n  logout = () => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          resolve(true)\r\n        })\r\n        .catch(error => {\r\n          reject(this._handleError(error))\r\n        })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Social Login user with given details\r\n   */\r\n  socialLoginUser = (data, type) => {\r\n    let credential = {}\r\n    if (type === \"google\") {\r\n      credential = firebase.auth.GoogleAuthProvider.credential(data.idToken, data.token)\r\n    } else if (type === \"facebook\") {\r\n      credential = firebase.auth.FacebookAuthProvider.credential(data.token)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      if (!!credential) {\r\n        firebase.auth().signInWithCredential(credential)\r\n          .then(user => {\r\n            resolve(this.addNewUserToFirestore(user))\r\n          })\r\n          .catch(error => {\r\n            reject(this._handleError(error))\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  addNewUserToFirestore = (user) => {\r\n    const collection = firebase.firestore().collection(\"users\")\r\n    const { profile } = user.additionalUserInfo\r\n    const details = {\r\n      firstName: profile.given_name ? profile.given_name : profile.first_name,\r\n      lastName: profile.family_name ? profile.family_name : profile.last_name,\r\n      fullName: profile.name,\r\n      email: profile.email,\r\n      picture: profile.picture,\r\n      createdDtm: firebase.firestore.FieldValue.serverTimestamp(),\r\n      lastLoginTime: firebase.firestore.FieldValue.serverTimestamp()\r\n    }\r\n    collection.doc(firebase.auth().currentUser.uid).set(details)\r\n    return { user, details }\r\n  }\r\n\r\n  setLoggeedInUser = user => {\r\n    localStorage.setItem(\"authUser\", JSON.stringify(user))\r\n  }\r\n\r\n  /**\r\n   * Returns the authenticated user\r\n   */\r\n  getAuthenticatedUser = () => {\r\n    if (!localStorage.getItem(\"authUser\")) return null\r\n    return JSON.parse(localStorage.getItem(\"authUser\"))\r\n  }\r\n\r\n  /**\r\n   * Handle the error\r\n   * @param {*} error\r\n   */\r\n  _handleError(error) {\r\n    // var errorCode = error.code;\r\n    var errorMessage = error.message\r\n    return errorMessage\r\n  }\r\n}\r\n\r\nlet _fireBaseBackend = null\r\n\r\n/**\r\n * Initilize the backend\r\n * @param {*} config\r\n */\r\nconst initFirebaseBackend = config => {\r\n  if (!_fireBaseBackend) {\r\n    _fireBaseBackend = new FirebaseAuthBackend(config)\r\n  }\r\n  return _fireBaseBackend\r\n}\r\n\r\n/**\r\n * Returns the firebase backend\r\n */\r\nconst getFirebaseBackend = () => {\r\n  return _fireBaseBackend\r\n}\r\n\r\nexport { initFirebaseBackend, getFirebaseBackend }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}