{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\RoleMasterPages\\\\RoleList.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from \"react\";\n// import {\n//   getRole,\n//   deleteRole,\n//   editRoleId,\n//   updateSuccess,\n//   deleteSuccess,\n//   PostSuccess,\n// } from \"../../../store/Administrator/RoleMasterRedux/action\";\n// import { useSelector, useDispatch } from \"react-redux\";\nimport RoleMaster from \"./RoleMaster\"; // import CommonListPage from \"../../../components/Common/CmponentRelatedCommonFile/commonListPage\";\n// import { commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\n// const RoleList = (props) => {\n// debugger\n//   const dispatch = useDispatch();\n// const reducers = useSelector(\n//   (state) => ({\n//     tableList: state.RoleMaster_Reducer.pages,\n//     editData: state.RoleMaster_Reducer.editData,\n//     updateMsg: state.RoleMaster_Reducer.updateMessage,\n//     deleteMsg: state.RoleMaster_Reducer.deleteMessage,\n//     postMsg: state.RoleMaster_Reducer.AddUserMessage,\n//     userAccess: state.Login.RoleAccessUpdateData,\n//     pageField: state.CommonPageFieldReducer.pageField\n//   })\n// );\n//   const action = {\n//     getList: getRole,\n//     editId: editRoleId,\n//     deleteId: deleteRole,\n//     postSucc: PostSuccess,\n//     updateSucc: updateSuccess,\n//     deleteSucc: deleteSuccess\n//   }\n//   //  This UseEffect => Featch Modules List data  First Rendering\n//   useEffect(() => {\n//     dispatch(commonPageFieldSuccess([]))\n//     dispatch(commonPageField(13))\n//     dispatch(getRole());\n//   }, []);\n//   const { pageField } = reducers\n//   return (\n//     <React.Fragment>\n//       {\n//         (pageField.length > 0) ?\n//           <CommonListPage\n//             action={action}\n//             reducers={reducers}\n//             MasterModal={RoleMaster}\n//             masterPath={\"/RoleMaster\"}\n//             ButtonMsgLable={\"Role\"}\n//             deleteName={\"Name\"}\n//           />\n//           : null\n//       }\n//     </React.Fragment>\n//   )\n// }\n// export default RoleList;\n\nimport { getRole, deleteRole, editRoleId, updateSuccess, deleteSuccess, PostSuccess } from \"../../../store/Administrator/RoleMasterRedux/action\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import DriverMaster from \"./DriverMaster\";\n\nimport { deleteDriverTypeIDSuccess, updateDriverTypeIDSuccess, getMethodForDriverList, editDriverTypeId, delete_DriverType_ID, PostMethod_ForDriverMasterSuccess } from \"../../../store/Administrator/DriverRedux/action\";\nimport CommonListPage from \"../../../components/Common/CmponentRelatedCommonFile/commonListPage\";\nimport { commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoleList = props => {\n  _s();\n\n  const dispatch = useDispatch(); // const reducers = useSelector(\n  //   (state) => ({\n  //     tableList: state.DriverReducer.DriverList,\n  //     editData: state.DriverReducer.editData,\n  //     updateMsg: state.DriverReducer.updateMessage,\n  //     deleteMsg: state.DriverReducer.deleteMessage,\n  //     postMsg: state.DriverReducer.PostDataMessage,\n  //     userAccess: state.Login.RoleAccessUpdateData,\n  //     pageField: state.CommonPageFieldReducer.pageField\n  //   })\n  // );\n\n  const reducers = useSelector(state => ({\n    tableList1: state.RoleMaster_Reducer.roleList,\n    tableList: state.DriverReducer.DriverList,\n    editData: state.RoleMaster_Reducer.editData,\n    updateMsg: state.RoleMaster_Reducer.updateMsg,\n    deleteMsg: state.RoleMaster_Reducer.deleteMsg,\n    postMsg: state.RoleMaster_Reducer.postMsg,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  console.log(\"tableList1\", reducers.tableList1); // const action = {\n  //   getList: getMethodForDriverList,\n  //   editId: editDriverTypeId,\n  //   deleteId: delete_DriverType_ID,\n  //   postSucc: PostMethod_ForDriverMasterSuccess,\n  //   updateSucc: updateDriverTypeIDSuccess,\n  //   deleteSucc: deleteDriverTypeIDSuccess\n  // }\n\n  const action = {\n    getList: getRole,\n    editId: editRoleId,\n    deleteId: deleteRole,\n    postSucc: PostSuccess,\n    updateSucc: updateSuccess,\n    deleteSucc: deleteSuccess\n  };\n  useEffect(() => {\n    dispatch(commonPageFieldSuccess([]));\n    dispatch(commonPageField(106));\n    dispatch(getMethodForDriverList());\n  }, []);\n  const {\n    pageField\n  } = reducers;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: pageField.length > 0 ? /*#__PURE__*/_jsxDEV(CommonListPage, {\n      action: action,\n      reducers: reducers,\n      MasterModal: RoleMaster,\n      masterPath: \"/DriverMaster\",\n      ButtonMsgLable: \"Driver\",\n      deleteName: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoleList, \"kd3GWwEf6SDGZrHGuQSw6itTdec=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RoleList;\nexport default RoleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleList\");","map":{"version":3,"names":["RoleMaster","getRole","deleteRole","editRoleId","updateSuccess","deleteSuccess","PostSuccess","React","useEffect","useDispatch","useSelector","deleteDriverTypeIDSuccess","updateDriverTypeIDSuccess","getMethodForDriverList","editDriverTypeId","delete_DriverType_ID","PostMethod_ForDriverMasterSuccess","CommonListPage","commonPageField","commonPageFieldSuccess","RoleList","props","dispatch","reducers","state","tableList1","RoleMaster_Reducer","roleList","tableList","DriverReducer","DriverList","editData","updateMsg","deleteMsg","postMsg","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","console","log","action","getList","editId","deleteId","postSucc","updateSucc","deleteSucc","length"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/RoleMasterPages/RoleList.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import {\r\n//   getRole,\r\n//   deleteRole,\r\n//   editRoleId,\r\n//   updateSuccess,\r\n//   deleteSuccess,\r\n//   PostSuccess,\r\n// } from \"../../../store/Administrator/RoleMasterRedux/action\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\nimport RoleMaster from \"./RoleMaster\";\r\n// import CommonListPage from \"../../../components/Common/CmponentRelatedCommonFile/commonListPage\";\r\n// import { commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\r\n\r\n// const RoleList = (props) => {\r\n// debugger\r\n//   const dispatch = useDispatch();\r\n  // const reducers = useSelector(\r\n  //   (state) => ({\r\n  //     tableList: state.RoleMaster_Reducer.pages,\r\n  //     editData: state.RoleMaster_Reducer.editData,\r\n  //     updateMsg: state.RoleMaster_Reducer.updateMessage,\r\n  //     deleteMsg: state.RoleMaster_Reducer.deleteMessage,\r\n  //     postMsg: state.RoleMaster_Reducer.AddUserMessage,\r\n  //     userAccess: state.Login.RoleAccessUpdateData,\r\n  //     pageField: state.CommonPageFieldReducer.pageField\r\n  //   })\r\n  // );\r\n\r\n//   const action = {\r\n//     getList: getRole,\r\n//     editId: editRoleId,\r\n//     deleteId: deleteRole,\r\n//     postSucc: PostSuccess,\r\n//     updateSucc: updateSuccess,\r\n//     deleteSucc: deleteSuccess\r\n//   }\r\n\r\n//   //  This UseEffect => Featch Modules List data  First Rendering\r\n//   useEffect(() => {\r\n//     dispatch(commonPageFieldSuccess([]))\r\n//     dispatch(commonPageField(13))\r\n//     dispatch(getRole());\r\n//   }, []);\r\n\r\n//   const { pageField } = reducers\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       {\r\n//         (pageField.length > 0) ?\r\n//           <CommonListPage\r\n//             action={action}\r\n//             reducers={reducers}\r\n//             MasterModal={RoleMaster}\r\n//             masterPath={\"/RoleMaster\"}\r\n//             ButtonMsgLable={\"Role\"}\r\n//             deleteName={\"Name\"}\r\n//           />\r\n//           : null\r\n//       }\r\n\r\n//     </React.Fragment>\r\n//   )\r\n// }\r\n\r\n// export default RoleList;\r\nimport {\r\n  getRole,\r\n  deleteRole,\r\n  editRoleId,\r\n  updateSuccess,\r\n  deleteSuccess,\r\n  PostSuccess,\r\n} from \"../../../store/Administrator/RoleMasterRedux/action\";\r\n\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import DriverMaster from \"./DriverMaster\";\r\nimport {\r\n  deleteDriverTypeIDSuccess,\r\n  updateDriverTypeIDSuccess,\r\n  getMethodForDriverList,\r\n  editDriverTypeId,\r\n  delete_DriverType_ID,\r\n  PostMethod_ForDriverMasterSuccess,\r\n} from \"../../../store/Administrator/DriverRedux/action\";\r\n\r\nimport CommonListPage from \"../../../components/Common/CmponentRelatedCommonFile/commonListPage\";\r\nimport { commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\r\n\r\nconst RoleList = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  // const reducers = useSelector(\r\n  //   (state) => ({\r\n  //     tableList: state.DriverReducer.DriverList,\r\n  //     editData: state.DriverReducer.editData,\r\n  //     updateMsg: state.DriverReducer.updateMessage,\r\n  //     deleteMsg: state.DriverReducer.deleteMessage,\r\n  //     postMsg: state.DriverReducer.PostDataMessage,\r\n  //     userAccess: state.Login.RoleAccessUpdateData,\r\n  //     pageField: state.CommonPageFieldReducer.pageField\r\n  //   })\r\n  // );\r\n  const reducers = useSelector(\r\n    (state) => ({\r\n      tableList1: state.RoleMaster_Reducer.roleList,\r\n      tableList: state.DriverReducer.DriverList,\r\n      editData: state.RoleMaster_Reducer.editData,\r\n      updateMsg: state.RoleMaster_Reducer.updateMsg,\r\n      deleteMsg: state.RoleMaster_Reducer.deleteMsg,\r\n      postMsg: state.RoleMaster_Reducer.postMsg,\r\n      userAccess: state.Login.RoleAccessUpdateData,\r\n      pageField: state.CommonPageFieldReducer.pageField\r\n    })\r\n  );\r\nconsole.log(\"tableList1\",reducers.tableList1)\r\n  // const action = {\r\n  //   getList: getMethodForDriverList,\r\n  //   editId: editDriverTypeId,\r\n  //   deleteId: delete_DriverType_ID,\r\n  //   postSucc: PostMethod_ForDriverMasterSuccess,\r\n  //   updateSucc: updateDriverTypeIDSuccess,\r\n  //   deleteSucc: deleteDriverTypeIDSuccess\r\n\r\n  // }\r\n\r\n  const action = {\r\n    getList: getRole,\r\n    editId: editRoleId,\r\n    deleteId: deleteRole,\r\n    postSucc: PostSuccess,\r\n    updateSucc: updateSuccess,\r\n    deleteSucc: deleteSuccess\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(commonPageFieldSuccess([]))\r\n    dispatch(commonPageField(106))\r\n    dispatch(getMethodForDriverList())\r\n\r\n  }, []);\r\n\r\n  const { pageField } = reducers\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        (pageField.length > 0) ?\r\n          <CommonListPage\r\n            action={action}\r\n            reducers={reducers}\r\n            MasterModal={RoleMaster}\r\n            masterPath={\"/DriverMaster\"}\r\n            ButtonMsgLable={\"Driver\"}\r\n            deleteName={\"Name\"}\r\n          />\r\n          : null\r\n      }\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RoleList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}