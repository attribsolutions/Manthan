{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\CompanyGroupPages\\\\CompanyGroupMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { AvField, AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow, commonPageField } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PostMethod_ForCompanyGroupMasterSuccess, editCompanyGroupTypeSuccess, updateCompanyGroupTypeID, PostMethodForCompanyGroupMaster, getMethodForCompanyGroupList } from \"../../../store/Administrator/CompanyGroupRedux/action\";\nimport { AlertState } from \"../../../store/actions\";\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\nimport { useHistory } from \"react-router-dom\";\nimport { comAddPageFieldFunc, formValChange, formValid, onChangeText } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyGroupMaster = props => {\n  _s();\n\n  //*** \"isEditdata get all data from ModuleID for Binding  Form controls\n  let editDataGetingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  const formRef = useRef(null);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [EditData, setEditData] = useState([]);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(123); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    pageField,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    PostAPIResponse: state.CompanyGroupReducer.PostDataMessage,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {\n    dispatch(commonPageField(32));\n  }, []);\n  {\n    /** Dyanamic Page access state and OnChange function */\n  }\n  {\n    /*start */\n  }\n  const [state, setState] = useState({\n    values: {\n      Name: \"\"\n    },\n    fieldLabel: {\n      Name: ''\n    },\n    isError: {\n      Name: \"\"\n    },\n    hasValid: {\n      Name: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  });\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  {\n    /*End */\n  }\n  useEffect(() => {\n    dispatch(getMethodForCompanyGroupList());\n  }, [dispatch]); //userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = undefined;\n\n    if (editDataGetingFromList === undefined) {\n      let locationPath = history.location.pathname;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === locationPath;\n      });\n    } else if (!(editDataGetingFromList === undefined)) {\n      let relatatedPage = props.relatatedPage;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === relatatedPage;\n      });\n    }\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (!(userPageAccessState === '')) {\n      document.getElementById(\"txtName\").focus();\n    }\n\n    if (!(editDataGetingFromList === undefined)) {\n      setEditData(editDataGetingFromList);\n      setPageMode(pageModeProps);\n      dispatch(editCompanyGroupTypeSuccess({\n        Status: false\n      }));\n      dispatch(BreadcrumbShow(editDataGetingFromList.Name));\n      return;\n    }\n  }, [editDataGetingFromList]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForCompanyGroupMasterSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/CompanyGroupList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(PostMethod_ForCompanyGroupMasterSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostAPIResponse.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n  useEffect(() => {\n    if (pageField.length > 0) {\n      comAddPageFieldFunc({\n        state,\n        setState,\n        pageField\n      });\n    }\n  }, [pageField]);\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        Name: values.Name,\n        IsSCM: values.IsSCM,\n        CreatedBy: 1,\n        UpdatedBy: 1\n      });\n\n      if (pageMode === \"edit\") {\n        dispatch(updateCompanyGroupTypeID(jsonBody, EditData.id));\n      } else {\n        dispatch(PostMethodForCompanyGroupMaster(jsonBody));\n      }\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: [userPageAccessState.PageHeading, \" | FoodERP-React FrontEnd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [\" \", fieldLabel.Name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 237,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"Name\",\n                              id: \"txtName\",\n                              className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              type: \"text\",\n                              value: EditData.Name,\n                              placeholder: \"Please Enter Name\",\n                              autoComplete: \"off\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                                dispatch(BreadcrumbShow(event.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 238,\n                              columnNumber: 61\n                            }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 253,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-5\",\n                              children: /*#__PURE__*/_jsxDEV(Row, {\n                                className: \"justify-content-md-left\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"horizontal-firstname-input\",\n                                  className: \"col-sm-3 col-form-label\",\n                                  children: \"IsSCM \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 260,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                  md: 2,\n                                  style: {\n                                    marginTop: '9px'\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"form-check form-switch form-switch-md mb-3\",\n                                    dir: \"ltr\",\n                                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                                      type: \"checkbox\",\n                                      className: \"form-check-input\",\n                                      id: \"customSwitchsizemd\",\n                                      defaultChecked: EditData.IsSCM,\n                                      name: \"IsSCM\" // defaultChecked\n\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 263,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                                      className: \"form-check-label\",\n                                      htmlFor: \"customSwitchsizemd\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 268,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 262,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 261,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 259,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 258,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 257,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: SaveButton({\n                                  pageMode,\n                                  userPageAccessState,\n                                  module: \"CompanyGroupMaster\"\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 277,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 276,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 275,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CompanyGroupMaster, \"UN0YMkke5Ryia5hM+AsOgG5aFaM=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = CompanyGroupMaster;\nexport default CompanyGroupMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyGroupMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","AvField","AvForm","AvInput","Select","MetaTags","BreadcrumbShow","commonPageField","useDispatch","useSelector","PostMethod_ForCompanyGroupMasterSuccess","editCompanyGroupTypeSuccess","updateCompanyGroupTypeID","PostMethodForCompanyGroupMaster","getMethodForCompanyGroupList","AlertState","CommonGetRoleAccessFunction","useHistory","comAddPageFieldFunc","formValChange","formValid","onChangeText","SaveButton","CompanyGroupMaster","props","editDataGetingFromList","state","pageModeProps","pageMode","formRef","dispatch","history","EditData","setEditData","setPageMode","userPageAccessState","setUserPageAccessState","PostAPIResponse","pageField","RoleAccessModifiedinSingleArray","CompanyGroupReducer","PostDataMessage","Login","RoleAccessUpdateData","CommonPageFieldReducer","setState","values","Name","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","document","getElementById","focus","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","length","formSubmitHandler","event","preventDefault","jsonBody","IsSCM","CreatedBy","UpdatedBy","id","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","target","value","module"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/CompanyGroupPages/CompanyGroupMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, AvInput, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageField } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    PostMethod_ForCompanyGroupMasterSuccess,\r\n    editCompanyGroupTypeSuccess,\r\n    updateCompanyGroupTypeID,\r\n    PostMethodForCompanyGroupMaster,\r\n    getMethodForCompanyGroupList\r\n} from \"../../../store/Administrator/CompanyGroupRedux/action\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValChange,\r\n    formValid,\r\n    onChangeText\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\r\n\r\n\r\nconst CompanyGroupMaster = (props) => {\r\n\r\n    //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n    let editDataGetingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    const formRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const [EditData, setEditData] = useState([]);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, pageField, RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n        PostAPIResponse: state.CompanyGroupReducer.PostDataMessage,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageField(32))\r\n    }, []);\r\n\r\n    {/** Dyanamic Page access state and OnChange function */ }\r\n    {/*start */ }\r\n    const [state, setState] = useState({\r\n        values: {\r\n            Name: \"\",\r\n           \r\n        },\r\n\r\n        fieldLabel: {\r\n            Name: '',\r\n         \r\n        },\r\n\r\n        isError: {\r\n            Name: \"\",\r\n            \r\n        },\r\n\r\n        hasValid: {\r\n            Name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            \r\n        },\r\n        required: {\r\n\r\n        }\r\n    })\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    {/*End */ }\r\n\r\n    useEffect(() => {\r\n        dispatch(getMethodForCompanyGroupList());\r\n    }, [dispatch]);\r\n\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n\r\n        let userAcc = undefined\r\n        if ((editDataGetingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname;\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGetingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGetingFromList === undefined)) {\r\n            setEditData(editDataGetingFromList);\r\n            setPageMode(pageModeProps);\r\n            dispatch(editCompanyGroupTypeSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGetingFromList.Name))\r\n            return\r\n        }\r\n    }, [editDataGetingFromList])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n\r\n            dispatch(PostMethod_ForCompanyGroupMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/CompanyGroupList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(PostMethod_ForCompanyGroupMasterSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostAPIResponse.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n    useEffect(() => {\r\n        if (pageField.length > 0) {\r\n            comAddPageFieldFunc({ state, setState, pageField })\r\n        }\r\n    }, [pageField])\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                IsSCM: values.IsSCM,\r\n                CreatedBy: 1,\r\n                UpdatedBy: 1\r\n            });\r\n\r\n            if (pageMode === \"edit\") {\r\n                dispatch(updateCompanyGroupTypeID(jsonBody, EditData.id));\r\n            }\r\n            else {\r\n                dispatch(PostMethodForCompanyGroupMaster(jsonBody));\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\"> {fieldLabel.Name}</Label>\r\n                                                            <Input\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                type=\"text\"\r\n                                                                value={EditData.Name}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete='off'\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-5\">\r\n                                                                <Row className=\"justify-content-md-left\">\r\n                                                                    <Label htmlFor=\"horizontal-firstname-input\" className=\"col-sm-3 col-form-label\" >IsSCM </Label>\r\n                                                                    <Col md={2} style={{ marginTop: '9px' }} >\r\n                                                                        <div className=\"form-check form-switch form-switch-md mb-3\" dir=\"ltr\">\r\n                                                                            <Input type=\"checkbox\" className=\"form-check-input\" id=\"customSwitchsizemd\"\r\n                                                                                defaultChecked={EditData.IsSCM}\r\n                                                                                name=\"IsSCM\"\r\n                                                                            // defaultChecked\r\n                                                                            />\r\n                                                                            <label className=\"form-check-label\" htmlFor=\"customSwitchsizemd\"></label>\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    {SaveButton({ pageMode, userPageAccessState, module: \"CompanyGroupMaster\" })}\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default CompanyGroupMaster\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAoD,OAApD;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,GAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,KARJ,EASIC,GATJ,QAUO,YAVP;AAWA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,QAA0C,gCAA1C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,wBAAhD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,uCADJ,EAEIC,2BAFJ,EAGIC,wBAHJ,EAIIC,+BAJJ,EAKIC,4BALJ,QAMO,uDANP;AAOA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,2BAAT,QAA4C,wDAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACIC,mBADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,YAJJ,QAKO,yEALP;AAMA,SAASC,UAAT,QAA2B,sCAA3B;;;AAGA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;EAAA;;EAElC;EACA,IAAIC,sBAAsB,GAAGD,KAAK,CAACE,KAAnC;EACA,IAAIC,aAAa,GAAGH,KAAK,CAACI,QAA1B;EAEA,MAAMC,OAAO,GAAGxC,MAAM,CAAC,IAAD,CAAtB;EACA,MAAMyC,QAAQ,GAAGtB,WAAW,EAA5B;EACA,MAAMuB,OAAO,GAAGd,UAAU,EAA1B;EAEA,MAAM,CAACe,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACsC,QAAD,EAAWM,WAAX,IAA0B5C,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAC6C,mBAAD,EAAsBC,sBAAtB,IAAgD9C,QAAQ,CAAC,GAAD,CAA9D,CAZkC,CAclC;;EACA,MAAM;IAAE+C,eAAF;IAAmBC,SAAnB;IAA8BC;EAA9B,IAAkE9B,WAAW,CAAEiB,KAAD,KAAY;IAC5FW,eAAe,EAAEX,KAAK,CAACc,mBAAN,CAA0BC,eADiD;IAE5FF,+BAA+B,EAAEb,KAAK,CAACgB,KAAN,CAAYC,oBAF+C;IAG5FL,SAAS,EAAEZ,KAAK,CAACkB,sBAAN,CAA6BN;EAHoD,CAAZ,CAAD,CAAnF;EAOAlD,SAAS,CAAC,MAAM;IACZ0C,QAAQ,CAACvB,eAAe,CAAC,EAAD,CAAhB,CAAR;EACH,CAFQ,EAEN,EAFM,CAAT;EAIA;IAAC;EAAyD;EAC1D;IAAC;EAAY;EACb,MAAM,CAACmB,KAAD,EAAQmB,QAAR,IAAoBvD,QAAQ,CAAC;IAC/BwD,MAAM,EAAE;MACJC,IAAI,EAAE;IADF,CADuB;IAM/BC,UAAU,EAAE;MACRD,IAAI,EAAE;IADE,CANmB;IAW/BE,OAAO,EAAE;MACLF,IAAI,EAAE;IADD,CAXsB;IAgB/BG,QAAQ,EAAE;MACNH,IAAI,EAAE;QACFI,MAAM,EAAE,EADN;QAEFC,UAAU,EAAE,EAFV;QAGFC,KAAK,EAAE;MAHL;IADA,CAhBqB;IAyB/BC,QAAQ,EAAE;EAzBqB,CAAD,CAAlC;EA6BA,MAAMR,MAAM,GAAG,EAAE,GAAGpB,KAAK,CAACoB;EAAX,CAAf;EACA,MAAM;IAAEG;EAAF,IAAcvB,KAApB;EACA,MAAM;IAAEsB;EAAF,IAAiBtB,KAAvB;EAEA;IAAC;EAAU;EAEXtC,SAAS,CAAC,MAAM;IACZ0C,QAAQ,CAAChB,4BAA4B,EAA7B,CAAR;EACH,CAFQ,EAEN,CAACgB,QAAD,CAFM,CAAT,CA/DkC,CAoElC;;EACA1C,SAAS,CAAC,MAAM;IAEZ,IAAImE,OAAO,GAAGC,SAAd;;IACA,IAAK/B,sBAAsB,KAAK+B,SAAhC,EAA4C;MAExC,IAAIC,YAAY,GAAG1B,OAAO,CAAC2B,QAAR,CAAiBC,QAApC;MACAJ,OAAO,GAAGhB,+BAA+B,CAACqB,IAAhC,CAAsCC,GAAD,IAAS;QACpD,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BL,YAArC;MACH,CAFS,CAAV;IAGH,CAND,MAOK,IAAI,EAAEhC,sBAAsB,KAAK+B,SAA7B,CAAJ,EAA6C;MAC9C,IAAIO,aAAa,GAAGvC,KAAK,CAACuC,aAA1B;MACAR,OAAO,GAAGhB,+BAA+B,CAACqB,IAAhC,CAAsCC,GAAD,IAAS;QACpD,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BC,aAArC;MACH,CAFS,CAAV;IAIH;;IACD,IAAI,EAAER,OAAO,KAAKC,SAAd,CAAJ,EAA8B;MAC1BpB,sBAAsB,CAACmB,OAAD,CAAtB;IACH;EAEJ,CArBQ,EAqBN,CAAChB,+BAAD,CArBM,CAAT,CArEkC,CA8FlC;;EACAnD,SAAS,CAAC,MAAM;IACZ,IAAI,EAAE+C,mBAAmB,KAAK,EAA1B,CAAJ,EAAmC;MAAE6B,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC;IAA6C;;IAClF,IAAI,EAAEzC,sBAAsB,KAAK+B,SAA7B,CAAJ,EAA6C;MACzCvB,WAAW,CAACR,sBAAD,CAAX;MACAS,WAAW,CAACP,aAAD,CAAX;MACAG,QAAQ,CAACnB,2BAA2B,CAAC;QAAEwD,MAAM,EAAE;MAAV,CAAD,CAA5B,CAAR;MACArC,QAAQ,CAACxB,cAAc,CAACmB,sBAAsB,CAACsB,IAAxB,CAAf,CAAR;MACA;IACH;EACJ,CATQ,EASN,CAACtB,sBAAD,CATM,CAAT;EAaArC,SAAS,CAAC,MAAM;IAEZ,IAAKiD,eAAe,CAAC8B,MAAhB,KAA2B,IAA5B,IAAsC9B,eAAe,CAAC+B,UAAhB,KAA+B,GAAzE,EAA+E;MAE3EtC,QAAQ,CAACpB,uCAAuC,CAAC;QAAEyD,MAAM,EAAE;MAAV,CAAD,CAAxC,CAAR;MACAtC,OAAO,CAACwC,OAAR,CAAgBC,KAAhB;;MACA,IAAI1C,QAAQ,KAAK,aAAjB,EAAgC;QAC5BE,QAAQ,CAACf,UAAU,CAAC;UAChBwD,IAAI,EAAE,CADU;UAEhBJ,MAAM,EAAE,IAFQ;UAGhBK,OAAO,EAAEnC,eAAe,CAACmC;QAHT,CAAD,CAAX,CAAR;MAKH,CAND,MAOK;QACD1C,QAAQ,CAACf,UAAU,CAAC;UAChBwD,IAAI,EAAE,CADU;UAEhBJ,MAAM,EAAE,IAFQ;UAGhBK,OAAO,EAAEnC,eAAe,CAACmC,OAHT;UAIhBC,YAAY,EAAE;QAJE,CAAD,CAAX,CAAR;MAMH;IACJ,CAnBD,MAoBK,IAAIpC,eAAe,CAAC8B,MAAhB,KAA2B,IAA/B,EAAqC;MACtCrC,QAAQ,CAACpB,uCAAuC,CAAC;QAAEyD,MAAM,EAAE;MAAV,CAAD,CAAxC,CAAR;MACArC,QAAQ,CAACf,UAAU,CAAC;QAChBwD,IAAI,EAAE,CADU;QAEhBJ,MAAM,EAAE,IAFQ;QAGhBK,OAAO,EAAEE,IAAI,CAACC,SAAL,CAAetC,eAAe,CAACmC,OAA/B,CAHO;QAIhBC,YAAY,EAAE,KAJE;QAKhBG,mBAAmB,EAAE;MALL,CAAD,CAAX,CAAR;IAOH;EACJ,CAhCQ,EAgCN,CAACvC,eAAD,CAhCM,CAAT;EAmCAjD,SAAS,CAAC,MAAM;IACZ,IAAIkD,SAAS,CAACuC,MAAV,GAAmB,CAAvB,EAA0B;MACtB3D,mBAAmB,CAAC;QAAEQ,KAAF;QAASmB,QAAT;QAAmBP;MAAnB,CAAD,CAAnB;IACH;EACJ,CAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;;EAMA,MAAMwC,iBAAiB,GAAIC,KAAD,IAAW;IACjCA,KAAK,CAACC,cAAN;;IACA,IAAI5D,SAAS,CAACM,KAAD,EAAQmB,QAAR,CAAb,EAAgC;MAC5B,MAAMoC,QAAQ,GAAGP,IAAI,CAACC,SAAL,CAAe;QAC5B5B,IAAI,EAAED,MAAM,CAACC,IADe;QAE5BmC,KAAK,EAAEpC,MAAM,CAACoC,KAFc;QAG5BC,SAAS,EAAE,CAHiB;QAI5BC,SAAS,EAAE;MAJiB,CAAf,CAAjB;;MAOA,IAAIxD,QAAQ,KAAK,MAAjB,EAAyB;QACrBE,QAAQ,CAAClB,wBAAwB,CAACqE,QAAD,EAAWjD,QAAQ,CAACqD,EAApB,CAAzB,CAAR;MACH,CAFD,MAGK;QACDvD,QAAQ,CAACjB,+BAA+B,CAACoE,QAAD,CAAhC,CAAR;MACH;IACJ;EACJ,CAjBD,CArJkC,CAyKlC;;;EACA,IAAIK,cAAc,GAAG,EAArB;;EACA,IAAK1D,QAAQ,KAAK,MAAd,IAA0BA,QAAQ,KAAK,MAAvC,IAAmDA,QAAQ,KAAK,aAApE,EAAoF;IAAE0D,cAAc,GAAG,OAAjB;EAA0B;;EAAA;;EAEhH,IAAI,EAAEnD,mBAAmB,KAAK,EAA1B,CAAJ,EAAmC;IAC/B,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,uBACI;QAAK,SAAS,EAAC,cAAf;QAA8B,KAAK,EAAE;UAAEoD,SAAS,EAAED;QAAb,CAArC;QAAA,uBACI,QAAC,SAAD;UAAW,KAAK,MAAhB;UAAA,wBACI,QAAC,QAAD;YAAA,uBACI;cAAA,WAAQnD,mBAAmB,CAACqD,WAA5B;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAII,QAAC,UAAD;YAAY,cAAc,EAAErD,mBAAmB,CAACqD;UAAhD;YAAA;YAAA;YAAA;UAAA,QAJJ,eAMI,QAAC,IAAD;YAAM,SAAS,EAAC,YAAhB;YAAA,wBACI,QAAC,UAAD;cAAY,SAAS,EAAC,0BAAtB;cAAiD,KAAK,EAAE;gBAAEC,eAAe,EAAE;cAAnB,CAAxD;cAAA,wBACI;gBAAI,SAAS,EAAC,uBAAd;gBAAA,UAAuCtD,mBAAmB,CAACuD;cAA3D;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAG,SAAS,EAAC,4BAAb;gBAAA,UAA2CvD,mBAAmB,CAACwD;cAA/D;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAMI,QAAC,QAAD;cAAU,SAAS,EAAC,qBAApB;cAA0C,KAAK,EAAE;gBAAEF,eAAe,EAAE;cAAnB,CAAjD;cAAA,uBAEI;gBAAM,QAAQ,EAAEX,iBAAhB;gBAAmC,GAAG,EAAEjD,OAAxC;gBAAiD,UAAU,MAA3D;gBAAA,uBAEI,QAAC,GAAD;kBAAK,SAAS,EAAC,EAAf;kBAAA,uBACI,QAAC,GAAD;oBAAK,EAAE,EAAE,EAAT;oBAAA,uBACI,QAAC,IAAD;sBAAA,uBACI,QAAC,QAAD;wBAAU,KAAK,EAAE;0BAAE4D,eAAe,EAAE;wBAAnB,CAAjB;wBAAA,uBACI,QAAC,GAAD;0BAAA,wBACI,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACI,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA,gBAAsCzC,UAAU,CAACD,IAAjD;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADJ,eAEI,QAAC,KAAD;8BACI,IAAI,EAAC,MADT;8BAEI,EAAE,EAAC,SAFP;8BAGI,SAAS,EAAEE,OAAO,CAACF,IAAR,CAAa8B,MAAb,GAAsB,CAAtB,GAA0B,yBAA1B,GAAsD,cAHrE;8BAII,IAAI,EAAC,MAJT;8BAKI,KAAK,EAAE7C,QAAQ,CAACe,IALpB;8BAMI,WAAW,EAAC,mBANhB;8BAOI,YAAY,EAAC,KAPjB;8BAQI,QAAQ,EAAGgC,KAAD,IAAW;gCACjB1D,YAAY,CAAC;kCAAE0D,KAAF;kCAASrD,KAAT;kCAAgBmB;gCAAhB,CAAD,CAAZ;gCACAf,QAAQ,CAACxB,cAAc,CAACyE,KAAK,CAACa,MAAN,CAAaC,KAAd,CAAf,CAAR;8BACH;4BAXL;8BAAA;8BAAA;8BAAA;4BAAA,QAFJ,EAgBK5C,OAAO,CAACF,IAAR,CAAa8B,MAAb,GAAsB,CAAtB,iBACG;8BAAM,SAAS,EAAC,kBAAhB;8BAAA,UAAoC5B,OAAO,CAACF;4BAA5C;8BAAA;8BAAA;8BAAA;4BAAA,QAjBR;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QADJ,eAsBI,QAAC,GAAD;4BAAA,uBACI,QAAC,SAAD;8BAAW,SAAS,EAAC,mBAArB;8BAAA,uBACI,QAAC,GAAD;gCAAK,SAAS,EAAC,yBAAf;gCAAA,wBACI,QAAC,KAAD;kCAAO,OAAO,EAAC,4BAAf;kCAA4C,SAAS,EAAC,yBAAtD;kCAAA;gCAAA;kCAAA;kCAAA;kCAAA;gCAAA,QADJ,eAEI,QAAC,GAAD;kCAAK,EAAE,EAAE,CAAT;kCAAY,KAAK,EAAE;oCAAEwC,SAAS,EAAE;kCAAb,CAAnB;kCAAA,uBACI;oCAAK,SAAS,EAAC,4CAAf;oCAA4D,GAAG,EAAC,KAAhE;oCAAA,wBACI,QAAC,KAAD;sCAAO,IAAI,EAAC,UAAZ;sCAAuB,SAAS,EAAC,kBAAjC;sCAAoD,EAAE,EAAC,oBAAvD;sCACI,cAAc,EAAEvD,QAAQ,CAACkD,KAD7B;sCAEI,IAAI,EAAC,OAFT,CAGA;;oCAHA;sCAAA;sCAAA;sCAAA;oCAAA,QADJ,eAMI;sCAAO,SAAS,EAAC,kBAAjB;sCAAoC,OAAO,EAAC;oCAA5C;sCAAA;sCAAA;sCAAA;oCAAA,QANJ;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA;gCADJ;kCAAA;kCAAA;kCAAA;gCAAA,QAFJ;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAtBJ,eAwCI,QAAC,SAAD;4BAAA,uBACI,QAAC,GAAD;8BAAA,uBACI,QAAC,GAAD;gCAAK,EAAE,EAAE,CAAT;gCAAA,UACK5D,UAAU,CAAC;kCAAEM,QAAF;kCAAYO,mBAAZ;kCAAiC2D,MAAM,EAAE;gCAAzC,CAAD;8BADf;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAxCJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA;oBADJ;sBAAA;sBAAA;sBAAA;oBAAA;kBADJ;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA;cAFJ;gBAAA;gBAAA;gBAAA;cAAA;YAFJ;cAAA;cAAA;cAAA;YAAA,QANJ;UAAA;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAqFH,CAtFD,MAuFK;IACD,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;AACJ,CAzQD;;GAAMvE,kB;UAOef,W,EACDS,U,EAOwDR,W;;;KAftEc,kB;AA2QN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}