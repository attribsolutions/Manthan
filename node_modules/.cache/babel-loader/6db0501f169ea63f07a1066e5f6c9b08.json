{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\DriverPage\\\\DriverMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertState, commonPageField } from \"../../../store/actions\";\nimport { PostMethodForDriverMaster, PostMethod_ForDriverMasterSuccess, getMethod_ForDriverListSuccess, editDriverTypeSuccess, updateDriverTypeID } from \"../../../store/Administrator/DriverRedux/action\";\nimport { useHistory } from \"react-router-dom\";\nimport Flatpickr from \"react-flatpickr\";\nimport { comAddPageFieldFunc, formValid, onChangeText, onChangeDate } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\"; // import { pageField } from './validfiles'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DriverMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const formRef = useRef(null);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(\"\");\n  const [modalCss, setModalCss] = useState(false); // new change\n  // ////////////////////////////////////\n\n  const [state, setState] = useState({\n    values: {\n      id: \"\",\n      // new change\n      Name: \"\",\n      Address: \"\",\n      UID: \"\",\n      DOB: ''\n    },\n    fieldLabel: {\n      Name: \"\",\n      Address: \"\",\n      UID: \"\",\n      DOB: ''\n    },\n    isError: {\n      Name: \"\",\n      Address: \"\",\n      UID: \"\",\n      DOB: ''\n    },\n    hasValid: {\n      Name: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      Address: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      UID: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      DOB: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  }); //////////////////////////\n  //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    pageField,\n    userAccess\n  } = useSelector(state => ({\n    PostAPIResponse: state.DriverReducer.PostDataMessage,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  })); // new change\n\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\");\n  useEffect(() => {\n    dispatch(commonPageFieldSuccess(null)); // new change\n\n    dispatch(commonPageField(91));\n  }, []); // new change\n  // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]); // new change\n  // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (!(userPageAccessState === '')) {\n      document.getElementById(\"txtName\").focus();\n    } // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n\n\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        const {\n          id,\n          Name,\n          DOB,\n          UID,\n          Address\n        } = hasEditVal; // new change\n\n        const {\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        } = { ...state\n        };\n        hasValid.Name.valid = true;\n        hasValid.DOB.valid = true;\n        hasValid.UID.valid = true;\n        hasValid.Address.valid = true;\n        values.Name = Name;\n        values.DOB = DOB;\n        values.UID = UID;\n        values.Address = Address;\n        values.id = id;\n        setState({\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        });\n        dispatch(BreadcrumbShow(hasEditVal.DriverMaster));\n      }\n\n      dispatch(editDriverTypeSuccess({\n        Status: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForDriverMasterSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/DriverList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getMethod_ForDriverListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]); // new change\n  // ////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      }); // new change\n    }\n  }, [pageField]);\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        Name: values.Name,\n        Address: values.Address,\n        DOB: values.DOB,\n        UID: values.UID\n      });\n\n      if (pageMode === 'edit') {\n        dispatch(updateDriverTypeID(jsonBody, values.id)); // new change\n      } else {\n        dispatch(PostMethodForDriverMaster(jsonBody));\n      }\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ; // new change\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"DriverMaster | FoodERP-React FrontEnd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.Name, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 291,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              id: \"txtName\",\n                              name: \"Name\",\n                              type: \"text\",\n                              value: values.Name,\n                              className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter Name\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                                dispatch(BreadcrumbShow(event.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 292,\n                              columnNumber: 61\n                            }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 306,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 290,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"4\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  children: \"Date of Birth\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 312,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                                  name: \"DOB\",\n                                  value: values.DOB,\n                                  className: \"form-control d-block p-2 bg-white text-dark\",\n                                  placeholder: \"YYYY-MM-DD\",\n                                  autoComplete: \"0,''\",\n                                  options: {\n                                    altInput: true,\n                                    altFormat: \"F j, Y\",\n                                    dateFormat: \"Y-m-d\",\n                                    minDate: new Date().fp_incr(\"n\"),\n                                    maxDate: new Date().fp_incr(0) // 14 days from now\"0,''\"\n\n                                  },\n                                  onChange: (y, v, e) => {\n                                    onChangeDate({\n                                      e,\n                                      v,\n                                      state,\n                                      setState\n                                    });\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 313,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 311,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 310,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 309,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [fieldLabel.Address, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 363,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"Address\",\n                                value: values.Address,\n                                type: \"text\",\n                                className: isError.Address.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                placeholder: \"Please Enter Address\",\n                                autoComplete: \"off\",\n                                onChange: event => onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 364,\n                                columnNumber: 65\n                              }, this), isError.Address.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.Address\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 374,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 362,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 361,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: fieldLabel.UID\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 381,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"UID\",\n                                value: values.UID,\n                                type: \"text\",\n                                placeholder: \"Please Enter UID\",\n                                autoComplete: \"off\",\n                                className: isError.UID.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                onChange: event => onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 382,\n                                columnNumber: 65\n                              }, this), isError.UID.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.UID\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 392,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 380,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 379,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Update Party Type\",\n                                    className: \"btn btn-success w-md mt-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fas fa-edit me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 409,\n                                      columnNumber: 89\n                                    }, this), \"Update\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 404,\n                                    columnNumber: 85\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Save Party Type\",\n                                    className: \"btn btn-primary w-md mt-3 \",\n                                    children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"fas fa-save me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 420,\n                                      columnNumber: 91\n                                    }, this), \" Save\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 416,\n                                    columnNumber: 89\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 400,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 399,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 398,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 397,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 289,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(DriverMaster, \"QLztWXVOrPzZWyQKwGg7Ks2h6to=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = DriverMaster;\nexport default DriverMaster;\nconst Email = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst Mobile = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst NotNull = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","MetaTags","BreadcrumbShow","commonPageFieldSuccess","useDispatch","useSelector","AlertState","commonPageField","PostMethodForDriverMaster","PostMethod_ForDriverMasterSuccess","getMethod_ForDriverListSuccess","editDriverTypeSuccess","updateDriverTypeID","useHistory","Flatpickr","comAddPageFieldFunc","formValid","onChangeText","onChangeDate","DriverMaster","props","dispatch","history","formRef","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","modalCss","setModalCss","state","setState","values","id","Name","Address","UID","DOB","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","PostAPIResponse","pageField","userAccess","DriverReducer","PostDataMessage","Login","RoleAccessUpdateData","CommonPageFieldReducer","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","document","getElementById","focus","hasEditVal","editValue","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","value","altInput","altFormat","dateFormat","minDate","Date","fp_incr","maxDate","y","v","e","RoleAccess_IsEdit","RoleAccess_IsSave","Email","RegExp","Mobile","NotNull"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/DriverMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\n\r\nimport {\r\n    PostMethodForDriverMaster,\r\n    PostMethod_ForDriverMasterSuccess,\r\n    getMethod_ForDriverListSuccess,\r\n    editDriverTypeSuccess,\r\n    updateDriverTypeID\r\n} from \"../../../store/Administrator/DriverRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    onChangeText,\r\n    onChangeDate\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\n\r\n// import { pageField } from './validfiles'\r\n\r\n\r\nconst DriverMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const formRef = useRef(null);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(\"\");\r\n    const [modalCss, setModalCss] = useState(false);// new change\r\n\r\n    // ////////////////////////////////////\r\n    const [state, setState] = useState({\r\n        values: {\r\n            id: \"\",// new change\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n        fieldLabel: {\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n\r\n        isError: {\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n\r\n        hasValid: {\r\n            Name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            Address: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            UID: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            DOB: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            }\r\n        },\r\n        required: {\r\n\r\n        }\r\n    }\r\n    )\r\n    //////////////////////////\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        PostAPIResponse,\r\n        pageField,\r\n        userAccess,\r\n    } = useSelector((state) => ({\r\n        PostAPIResponse: state.DriverReducer.PostDataMessage,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n    // new change\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));// new change\r\n        dispatch(commonPageField(91))\r\n    }, []);\r\n\r\n    // new change\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n       \r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n// new change\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n                const { id, Name, DOB, UID, Address } = hasEditVal// new change\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n\r\n                hasValid.Name.valid = true;\r\n                hasValid.DOB.valid = true;\r\n                hasValid.UID.valid = true;\r\n                hasValid.Address.valid = true;\r\n\r\n                values.Name = Name;\r\n                values.DOB = DOB;\r\n                values.UID = UID;\r\n                values.Address = Address;\r\n                values.id = id\r\n\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(BreadcrumbShow(hasEditVal.DriverMaster))\r\n            }\r\n            dispatch(editDriverTypeSuccess({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/DriverList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForDriverListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n// new change\r\n    // ////////////////////////////////////////////////////////////\r\n    useEffect(() => {\r\n     \r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })// new change\r\n        }\r\n    }, [pageField])\r\n\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n\r\n    const formSubmitHandler = (event) => {\r\n        \r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                Address: values.Address,\r\n                DOB: values.DOB,\r\n                UID: values.UID\r\n            });\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateDriverTypeID(jsonBody, values.id));// new change\r\n            }\r\n\r\n            else {\r\n                dispatch(PostMethodForDriverMaster(jsonBody));\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };// new change\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>DriverMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n                                                            <Input\r\n                                                                id=\"txtName\"\r\n                                                                name=\"Name\"\r\n                                                                type=\"text\"\r\n                                                                value={values.Name}\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label>Date of Birth</Label>\r\n                                                                    <Flatpickr\r\n                                                                        name=\"DOB\"\r\n                                                                        value={values.DOB}\r\n                                                                        className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                                        placeholder=\"YYYY-MM-DD\"\r\n                                                                        autoComplete=\"0,''\"\r\n                                                                        options={{\r\n                                                                            altInput: true,\r\n                                                                            altFormat: \"F j, Y\",\r\n                                                                            dateFormat: \"Y-m-d\",\r\n                                                                            minDate: new Date().fp_incr(\"n\"),\r\n                                                                            maxDate: new Date().fp_incr(0) // 14 days from now\"0,''\"\r\n                                                                        }}\r\n                                                                        onChange={(y, v, e) => { onChangeDate({ e, v, state, setState }) }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        {/* <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label htmlFor=\"validationCustom01\">{fieldLabel.Address} </Label>\r\n                                                                    <Select\r\n                                                                        defaultValue={options[0]}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        onChange={(v, e) => onChangeSelect({ e, v, state, setState })}\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                        options={options}\r\n                                                                        name=\"Address\"\r\n                                                                        styles={{\r\n                                                                            control: base => ({\r\n                                                                                ...base,\r\n                                                                                border: isError.Address.length > 0 ? '1px solid red' : '',\r\n\r\n                                                                            })\r\n                                                                        }}\r\n                                                                    />\r\n                                                                     {isError.Name.length > 0 && (\r\n                                                                <span className=\"tex\">{isError.Name}</span>\r\n                                                            )}\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row> */}\r\n\r\n\r\n\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.Address} </Label>\r\n                                                                <Input\r\n                                                                    name=\"Address\"\r\n                                                                    value={values.Address}\r\n                                                                    type=\"text\"\r\n                                                                    className={isError.Address.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    placeholder=\"Please Enter Address\"\r\n                                                                    autoComplete='off'\r\n                                                                    onChange={(event) => onChangeText({ event, state, setState })}\r\n                                                                />\r\n                                                                {isError.Address.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.Address}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.UID}</Label>\r\n                                                                <Input\r\n                                                                    name=\"UID\"\r\n                                                                    value={values.UID}\r\n                                                                    type=\"text\"\r\n                                                                    placeholder=\"Please Enter UID\"\r\n                                                                    autoComplete='off'\r\n                                                                    className={isError.UID.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    onChange={(event) => onChangeText({ event, state, setState })}\r\n                                                                />\r\n                                                                {isError.UID.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.UID}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n\r\n                                                        </Row>\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DriverMaster\r\n\r\n\r\n\r\n\r\nconst Email = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\n\r\nconst Mobile = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\nconst NotNull = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)"],"mappings":"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"},"metadata":{},"sourceType":"module"}