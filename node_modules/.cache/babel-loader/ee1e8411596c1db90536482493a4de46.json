{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\CategoryPages\\\\CategoryMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Label, Row } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editProductTypesIDSuccess, getMethodForProductTypes, PostMethodForProductTypes, PostMethod_ForProductTypesAPISuccess, updateProductTypesID } from \"../../../store/Administrator/CategoryRedux/action\";\nimport { AlertState } from \"../../../store/actions\";\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CategoryMaster = props => {\n  _s();\n\n  let editDataGatingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  const formRef = useRef(null);\n  const [EditData, setEditData] = useState([]);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [ProductCategoryTypes_dropdown_Select, setProductCategoryTypes_dropdown_Select] = useState(\"\");\n  const dispatch = useDispatch();\n  const [userPageAccessState, setUserPageAccessState] = useState(123);\n  const [ProductCategoryTypes, setProductCategoryTypes] = useState(\"\");\n  const history = useHistory(); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    ProductTypeAPI,\n    ProductTypes,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    PostAPIResponse: state.CategoryMasterReducer.PostDataMessage,\n    ProductTypeAPI: state.CategoryMasterReducer.ProductTypeAPI,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData\n  })); //userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = undefined;\n\n    if (editDataGatingFromList === undefined) {\n      let locationPath = history.location.pathname;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === locationPath;\n      });\n    } else if (!(editDataGatingFromList === undefined)) {\n      let relatatedPage = props.relatatedPage;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === relatatedPage;\n      });\n    }\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (!(userPageAccessState === '')) {\n      document.getElementById(\"txtName\").focus();\n    }\n\n    if (!(editDataGatingFromList === undefined)) {\n      setEditData(editDataGatingFromList);\n      setPageMode(pageModeProps);\n      setProductCategoryTypes_dropdown_Select({\n        value: editDataGatingFromList.ProductCategoryType_id,\n        label: editDataGatingFromList.ProductCategoryTypeName\n      });\n      dispatch(editProductTypesIDSuccess({\n        Status: false\n      }));\n      dispatch(BreadcrumbShow(editDataGatingFromList.Name));\n      return;\n    }\n  }, [editDataGatingFromList]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      setProductCategoryTypes_dropdown_Select('');\n      dispatch(PostMethod_ForProductTypesAPISuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"other\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/CategoryList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(PostMethod_ForProductTypesAPISuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]); //get method for dropdown\n\n  useEffect(() => {\n    dispatch(getMethodForProductTypes());\n  }, [dispatch]);\n\n  function handllerProductCategoryTypes(e) {\n    setProductCategoryTypes_dropdown_Select(e);\n  }\n\n  const ProductCategoryTypesValues = ProductTypeAPI.map(Data => ({\n    value: Data.id,\n    label: Data.Name\n  }));\n\n  const FormSubmitButton_Handler = (event, values) => {\n    const jsonBody = JSON.stringify({\n      Name: values.Name,\n      ProductCategoryType: ProductCategoryTypes_dropdown_Select.value\n    });\n\n    if (pageMode === \"edit\") {\n      dispatch(updateProductTypesID(jsonBody, EditData.id));\n    } else {\n      dispatch(PostMethodForProductTypes(jsonBody));\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"CategoryMaster | FoodERP-React FrontEnd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: \"Category Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(AvForm, {\n                onValidSubmit: (e, v) => {\n                  FormSubmitButton_Handler(e, v);\n                },\n                ref: formRef,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: \"Name \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 185,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                              name: \"Name\",\n                              id: \"txtName\",\n                              value: EditData.Name,\n                              type: \"text\",\n                              placeholder: \"Please Enter Name\",\n                              autoComplete: \"off\",\n                              validate: {\n                                required: {\n                                  value: true,\n                                  errorMessage: 'Please Enter Name'\n                                }\n                              },\n                              onChange: e => {\n                                dispatch(BreadcrumbShow(e.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 186,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 184,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"4\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \" Category Type \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 203,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                  sm: 12,\n                                  children: /*#__PURE__*/_jsxDEV(Select, {\n                                    value: ProductCategoryTypes_dropdown_Select,\n                                    options: ProductCategoryTypesValues,\n                                    onChange: e => {\n                                      handllerProductCategoryTypes(e);\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 205,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 204,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 202,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 201,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 200,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Update Category\",\n                                    className: \"btn btn-success w-md\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fas fa-edit me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 227,\n                                      columnNumber: 89\n                                    }, this), \"Update\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 222,\n                                    columnNumber: 85\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Save Category\",\n                                    className: \"btn btn-primary w-sm\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"fas fa-save me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 237,\n                                      columnNumber: 93\n                                    }, this), \"Save\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 233,\n                                    columnNumber: 89\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 218,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 217,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 216,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 215,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CategoryMaster, \"t8LZ1jBGwvRP4XLpBHeLViNlx5M=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = CategoryMaster;\nexport default CategoryMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","useDispatch","useSelector","editProductTypesIDSuccess","getMethodForProductTypes","PostMethodForProductTypes","PostMethod_ForProductTypesAPISuccess","updateProductTypesID","AlertState","CommonGetRoleAccessFunction","useHistory","CategoryMaster","props","editDataGatingFromList","state","pageModeProps","pageMode","formRef","EditData","setEditData","setPageMode","ProductCategoryTypes_dropdown_Select","setProductCategoryTypes_dropdown_Select","dispatch","userPageAccessState","setUserPageAccessState","ProductCategoryTypes","setProductCategoryTypes","history","PostAPIResponse","ProductTypeAPI","ProductTypes","RoleAccessModifiedinSingleArray","CategoryMasterReducer","PostDataMessage","Login","RoleAccessUpdateData","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","document","getElementById","focus","value","ProductCategoryType_id","label","ProductCategoryTypeName","Status","Name","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","handllerProductCategoryTypes","e","ProductCategoryTypesValues","map","Data","id","FormSubmitButton_Handler","event","values","jsonBody","ProductCategoryType","IsEditMode_Css","marginTop","backgroundColor","PageDescription","PageDescriptionDetails","v","required","errorMessage","target","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/CategoryPages/CategoryMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    editProductTypesIDSuccess, getMethodForProductTypes,\r\n    PostMethodForProductTypes,\r\n    PostMethod_ForProductTypesAPISuccess,\r\n    updateProductTypesID\r\n} from \"../../../store/Administrator/CategoryRedux/action\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CategoryMaster = (props) => {\r\n\r\n    let editDataGatingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    const formRef = useRef(null);\r\n    const [EditData, setEditData] = useState([]);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [ProductCategoryTypes_dropdown_Select, setProductCategoryTypes_dropdown_Select] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n    const [ProductCategoryTypes, setProductCategoryTypes] = useState(\"\");\r\n    const history = useHistory()\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, ProductTypeAPI, ProductTypes, RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n        PostAPIResponse: state.CategoryMasterReducer.PostDataMessage,\r\n        ProductTypeAPI: state.CategoryMasterReducer.ProductTypeAPI,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n    }));\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n\r\n        let userAcc = undefined\r\n        if ((editDataGatingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGatingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n  \r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGatingFromList === undefined)) {\r\n            setEditData(editDataGatingFromList);\r\n            setPageMode(pageModeProps);\r\n            setProductCategoryTypes_dropdown_Select({\r\n\r\n                value: editDataGatingFromList.ProductCategoryType_id,\r\n                label: editDataGatingFromList.ProductCategoryTypeName\r\n            })\r\n            dispatch(editProductTypesIDSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGatingFromList.Name))\r\n            return\r\n        }\r\n    }, [editDataGatingFromList])\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            setProductCategoryTypes_dropdown_Select('')\r\n            dispatch(PostMethod_ForProductTypesAPISuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/CategoryList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(PostMethod_ForProductTypesAPISuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n    //get method for dropdown\r\n    useEffect(() => {\r\n        dispatch(getMethodForProductTypes());\r\n    }, [dispatch]);\r\n\r\n\r\n    function handllerProductCategoryTypes(e) {\r\n        setProductCategoryTypes_dropdown_Select(e)\r\n    }\r\n\r\n    const ProductCategoryTypesValues = ProductTypeAPI.map((Data) => ({\r\n        value: Data.id,\r\n        label: Data.Name\r\n    }));\r\n\r\n    const FormSubmitButton_Handler = (event, values) => {\r\n        const jsonBody = JSON.stringify({\r\n            Name: values.Name,\r\n            ProductCategoryType: ProductCategoryTypes_dropdown_Select.value,\r\n        });\r\n\r\n        if (pageMode === \"edit\") {\r\n            dispatch(updateProductTypesID(jsonBody, EditData.id));\r\n        }\r\n        else {\r\n            dispatch(PostMethodForProductTypes(jsonBody));\r\n        }\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\")||(pageMode===\"copy\")||(pageMode===\"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>CategoryMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={\"Category Master\"} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <AvForm onValidSubmit={(e, v) => { FormSubmitButton_Handler(e, v) }}\r\n                                    ref={formRef}\r\n                                >\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">Name </Label>\r\n                                                            <AvField\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={EditData.Name}\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete='off'\r\n                                                                validate={{\r\n                                                                    required: { value: true, errorMessage: 'Please Enter Name' },\r\n                                                                }}\r\n                                                                onChange={(e) => { dispatch(BreadcrumbShow(e.target.value)) }}\r\n                                                            />\r\n                                                        </FormGroup>\r\n\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label htmlFor=\"validationCustom01\"> Category Type </Label>\r\n                                                                    <Col sm={12}>\r\n                                                                        <Select\r\n                                                                            value={ProductCategoryTypes_dropdown_Select}\r\n                                                                            options={ProductCategoryTypesValues}\r\n                                                                            onChange={(e) => { handllerProductCategoryTypes(e) }}\r\n                                                                        />\r\n                                                                    </Col>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Category\"\r\n                                                                                        className=\"btn btn-success w-md\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Category\"\r\n                                                                                            className=\"btn btn-primary w-sm\">\r\n                                                                                            <i className=\"fas fa-save me-2\"></i>\r\n                                                                                            Save\r\n\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </AvForm>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default CategoryMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}