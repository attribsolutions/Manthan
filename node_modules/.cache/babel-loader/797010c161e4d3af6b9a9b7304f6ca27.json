{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { delete_MarginList_API, edit_MarginList, GetMarginList_For_Listpage, GoButton_Post_API_For_MarginMaster, Post_MarginMaster_API, update_MarginList } from \"../../../helpers/backend_helper\";\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { delete_MarginListSuccess, editMarginListSuccess, getMarginListPageSuccess, postGoButtonDataSuccess, postMarginMasterDataSuccess, updateMarginListSuccess } from \"./action\";\nimport { DELETE_MARGIN_LIST_PAGE, EDIT_MARGIN_LIST_PAGE, GET_MARGIN_LIST_PAGE, POST_GO_BUTTON_DATA, POST_MARGIN_MASTER_DATA, UPDATE_MARGIN_LIST_PAGE } from \"./actionType\";\n\nfunction* Post_MarginMaster_GenratorFunction(_ref) {\n  let {\n    Data\n  } = _ref;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(Post_MarginMaster_API, Data);\n    yield put(SpinnerState(false));\n    yield put(postMarginMasterDataSuccess(response));\n    console.log(\"response\", response);\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} //listpage\n\n\n_c = Post_MarginMaster_GenratorFunction;\n\nfunction* get_MarginListPage_GenratorFunction() {\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(GetMarginList_For_Listpage);\n    yield put(SpinnerState(false));\n    yield put(getMarginListPageSuccess(response.Data));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} //delete\n\n\nfunction* delete_MarginListPage_GenratorFunction(_ref2) {\n  let {\n    id\n  } = _ref2;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(delete_MarginList_API, id);\n    yield put(SpinnerState(false));\n    yield put(delete_MarginListSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // edit api\n\n\nfunction* Edit_MarginListPage_GenratorFunction(_ref3) {\n  let {\n    id,\n    pageMode\n  } = _ref3;\n\n  try {\n    const response = yield call(edit_MarginList, id);\n    response.pageMode = pageMode;\n    yield put(editMarginListSuccess(response));\n    console.log(\"response in saga\", response);\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // update api\n\n\n_c2 = Edit_MarginListPage_GenratorFunction;\n\nfunction* Update_MarginListPage_GenratorFunction(_ref4) {\n  let {\n    updateData,\n    ID\n  } = _ref4;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(update_MarginList, updateData, ID);\n    yield put(SpinnerState(false));\n    yield put(updateMarginListSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\n_c3 = Update_MarginListPage_GenratorFunction;\n\nfunction* GoButton_post_GenratorFunction(_ref5) {\n  let {\n    data\n  } = _ref5;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(GoButton_Post_API_For_MarginMaster, data);\n    yield put(SpinnerState(false));\n    yield put(postGoButtonDataSuccess(response.Data));\n    console.log(\"response\", response);\n  } catch (error) {\n    console.log(\"error\");\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\n_c4 = GoButton_post_GenratorFunction;\n\nfunction* MarginMasterSaga() {\n  yield takeEvery(POST_MARGIN_MASTER_DATA, Post_MarginMaster_GenratorFunction);\n  yield takeEvery(GET_MARGIN_LIST_PAGE, get_MarginListPage_GenratorFunction);\n  yield takeEvery(DELETE_MARGIN_LIST_PAGE, delete_MarginListPage_GenratorFunction);\n  yield takeEvery(EDIT_MARGIN_LIST_PAGE, Edit_MarginListPage_GenratorFunction);\n  yield takeEvery(UPDATE_MARGIN_LIST_PAGE, Update_MarginListPage_GenratorFunction);\n  yield takeEvery(POST_GO_BUTTON_DATA, GoButton_post_GenratorFunction);\n}\n\n_c5 = MarginMasterSaga;\nexport default MarginMasterSaga;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Post_MarginMaster_GenratorFunction\");\n$RefreshReg$(_c2, \"Edit_MarginListPage_GenratorFunction\");\n$RefreshReg$(_c3, \"Update_MarginListPage_GenratorFunction\");\n$RefreshReg$(_c4, \"GoButton_post_GenratorFunction\");\n$RefreshReg$(_c5, \"MarginMasterSaga\");","map":{"version":3,"names":["call","put","takeEvery","delete_MarginList_API","edit_MarginList","GetMarginList_For_Listpage","GoButton_Post_API_For_MarginMaster","Post_MarginMaster_API","update_MarginList","AlertState","SpinnerState","delete_MarginListSuccess","editMarginListSuccess","getMarginListPageSuccess","postGoButtonDataSuccess","postMarginMasterDataSuccess","updateMarginListSuccess","DELETE_MARGIN_LIST_PAGE","EDIT_MARGIN_LIST_PAGE","GET_MARGIN_LIST_PAGE","POST_GO_BUTTON_DATA","POST_MARGIN_MASTER_DATA","UPDATE_MARGIN_LIST_PAGE","Post_MarginMaster_GenratorFunction","Data","response","console","log","error","Type","Status","Message","get_MarginListPage_GenratorFunction","delete_MarginListPage_GenratorFunction","id","Edit_MarginListPage_GenratorFunction","pageMode","Update_MarginListPage_GenratorFunction","updateData","ID","GoButton_post_GenratorFunction","data","MarginMasterSaga"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/MarginMasterRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { delete_MarginList_API,\r\n       edit_MarginList, \r\n      GetMarginList_For_Listpage,\r\n      GoButton_Post_API_For_MarginMaster,\r\n      Post_MarginMaster_API,\r\n       update_MarginList\r\n     } from \"../../../helpers/backend_helper\";\r\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\nimport {delete_MarginListSuccess, \r\n        editMarginListSuccess,\r\n        getMarginListPageSuccess,\r\n        postGoButtonDataSuccess,\r\n        postMarginMasterDataSuccess,\r\n         updateMarginListSuccess,\r\n} from \"./action\";\r\nimport { DELETE_MARGIN_LIST_PAGE,\r\n       EDIT_MARGIN_LIST_PAGE,\r\n       GET_MARGIN_LIST_PAGE,\r\n       POST_GO_BUTTON_DATA,\r\n       POST_MARGIN_MASTER_DATA,\r\n        UPDATE_MARGIN_LIST_PAGE \r\n      \r\n       } from \"./actionType\";\r\n\r\n\r\nfunction* Post_MarginMaster_GenratorFunction({ Data }) {\r\n  \r\n    yield put(SpinnerState(true))\r\n    try {\r\n      const response = yield call(Post_MarginMaster_API, Data);\r\n      yield put(SpinnerState(false))\r\n      yield put(postMarginMasterDataSuccess(response));\r\n      console.log(\"response\",response)\r\n    } catch (error) {\r\n      yield put(SpinnerState(false))\r\n      yield put(AlertState({ Type: 4, \r\n        Status: true, Message: \"500 Error Message\",\r\n      }));\r\n    }\r\n  }\r\n\r\n\r\n//listpage\r\nfunction* get_MarginListPage_GenratorFunction() {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(GetMarginList_For_Listpage);\r\n    yield put(SpinnerState(false))\r\n    yield put(getMarginListPageSuccess(response.Data));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n//delete\r\nfunction* delete_MarginListPage_GenratorFunction({ id }) {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(delete_MarginList_API, id);\r\n    yield put(SpinnerState(false))\r\n    yield put(delete_MarginListSuccess(response));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n\r\n\r\n// edit api\r\nfunction* Edit_MarginListPage_GenratorFunction({ id, pageMode }) {\r\n  try {\r\n    const response = yield call(edit_MarginList, id);\r\n    response.pageMode = pageMode\r\n    yield put(editMarginListSuccess(response));\r\n    console.log(\"response in saga\", response)\r\n\r\n  } catch (error) {\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// update api\r\nfunction* Update_MarginListPage_GenratorFunction({ updateData, ID }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(update_MarginList, updateData, ID);\r\n    yield put(SpinnerState(false))\r\n    yield put(updateMarginListSuccess(response))\r\n  }\r\n  catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* GoButton_post_GenratorFunction({ data }) {\r\n\r\n\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(GoButton_Post_API_For_MarginMaster, data);\r\n    yield put(SpinnerState(false))\r\n    yield put(postGoButtonDataSuccess(response.Data));\r\n    console.log(\"response\", response)\r\n  } catch (error) {\r\n    console.log(\"error\")\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n\r\n  }\r\n}\r\n\r\n\r\n  \r\n  function* MarginMasterSaga() {\r\n    yield takeEvery(POST_MARGIN_MASTER_DATA, Post_MarginMaster_GenratorFunction);\r\n    yield takeEvery(GET_MARGIN_LIST_PAGE,   get_MarginListPage_GenratorFunction);\r\n    yield takeEvery(DELETE_MARGIN_LIST_PAGE, delete_MarginListPage_GenratorFunction);\r\n    yield takeEvery(EDIT_MARGIN_LIST_PAGE, Edit_MarginListPage_GenratorFunction);\r\n    yield takeEvery(UPDATE_MARGIN_LIST_PAGE, Update_MarginListPage_GenratorFunction);\r\n    yield takeEvery(POST_GO_BUTTON_DATA, GoButton_post_GenratorFunction);\r\n  }\r\n  export default MarginMasterSaga;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}