{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\GroupTypePage\\\\GroupTypeMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertState, commonPageField } from \"../../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { comAddPageFieldFunc, formValid, onChangeText } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\nimport { editGroupTypeIdSuccess, getGroupTypeslistSuccess, PostGroupTypeSubmit, PostGroupTypeSubmitSuccess, updateGroupTypeID } from \"../../../store/Administrator/GroupTypeRedux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GroupTypeMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let editDataGetingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  console.log(\"editDataGetingFromList\", editDataGetingFromList);\n  const formRef = useRef(null);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(\"\");\n  const [EditData, setEditData] = useState([]);\n  const [state, setState] = useState({\n    values: {\n      Name: \"\"\n    },\n    fieldLabel: {\n      Name: \"\"\n    },\n    isError: {\n      Name: \"\"\n    },\n    hasValid: {\n      Name: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  }); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    pageField,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    PostAPIResponse: state.GroupTypeReducer.PostData,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {\n    // dispatch(commonPageFieldSuccess([]));\n    dispatch(commonPageField(105));\n  }, []); //userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = undefined;\n\n    if (editDataGetingFromList === undefined) {\n      let locationPath = history.location.pathname;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === locationPath;\n      });\n    } else if (!(editDataGetingFromList === undefined)) {\n      let relatatedPage = props.relatatedPage;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === relatatedPage;\n      });\n    }\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    debugger;\n\n    if (!(userPageAccessState === '')) {\n      document.getElementById(\"txtName\").focus();\n    }\n\n    if (!(editDataGetingFromList === undefined)) {\n      const {\n        Name\n      } = editDataGetingFromList;\n      const {\n        values,\n        fieldLabel,\n        hasValid,\n        required,\n        isError\n      } = { ...state\n      };\n      values.Name = Name;\n      setState({\n        values,\n        fieldLabel,\n        hasValid,\n        required,\n        isError\n      });\n      setEditData(editDataGetingFromList);\n      setPageMode(pageModeProps);\n      dispatch(editGroupTypeIdSuccess({\n        Status: false\n      }));\n      dispatch(BreadcrumbShow(editDataGetingFromList.GroupTypeMaster));\n      return;\n    }\n  }, [editDataGetingFromList]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostGroupTypeSubmitSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/GroupTypeList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getGroupTypeslistSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n  useEffect(() => {\n    if (pageField.length > 0) {\n      comAddPageFieldFunc({\n        state,\n        setState,\n        pageField\n      });\n    }\n  }, [pageField]);\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n\n  const formSubmitHandler = event => {\n    debugger;\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        Name: values.Name,\n        CreatedBy: 1,\n        CreatedOn: \"0002-10-03T12:48:14.910491\",\n        UpdatedBy: 1,\n        UpdatedOn: \"0002-10-03T12:48:14.910491\"\n      });\n\n      if (pageMode === 'edit') {\n        dispatch(updateGroupTypeID(jsonBody, EditData.id));\n      } else {\n        dispatch(PostGroupTypeSubmit(jsonBody));\n        console.log(\"jsonBody\", jsonBody);\n      }\n    }\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"GroupTypeMaster | FoodERP-React FrontEnd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.Name, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 223,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              id: \"txtName\",\n                              name: \"Name\",\n                              type: \"text\",\n                              value: values.Name,\n                              className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter Name\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                                dispatch(BreadcrumbShow(event.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 224,\n                              columnNumber: 61\n                            }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 238,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 222,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Update Party Type\",\n                                    className: \"btn btn-success w-md mt-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fas fa-edit me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 254,\n                                      columnNumber: 89\n                                    }, this), \"Update\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 249,\n                                    columnNumber: 85\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Save Party Type\",\n                                    className: \"btn btn-primary w-md mt-3 \",\n                                    children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"fas fa-save me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 265,\n                                      columnNumber: 91\n                                    }, this), \" Save\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 261,\n                                    columnNumber: 89\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 245,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 244,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 243,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 242,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 221,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(GroupTypeMaster, \"0tt8csc1JZ3XBHg0td7nLhgZfFc=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = GroupTypeMaster;\nexport default GroupTypeMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupTypeMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","useDispatch","useSelector","AlertState","commonPageField","useHistory","comAddPageFieldFunc","formValid","onChangeText","editGroupTypeIdSuccess","getGroupTypeslistSuccess","PostGroupTypeSubmit","PostGroupTypeSubmitSuccess","updateGroupTypeID","GroupTypeMaster","props","dispatch","history","editDataGetingFromList","state","pageModeProps","pageMode","console","log","formRef","setPageMode","userPageAccessState","setUserPageAccessState","EditData","setEditData","setState","values","Name","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","PostAPIResponse","pageField","RoleAccessModifiedinSingleArray","GroupTypeReducer","PostData","Login","RoleAccessUpdateData","CommonPageFieldReducer","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","document","getElementById","focus","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","length","formSubmitHandler","event","preventDefault","jsonBody","CreatedBy","CreatedOn","UpdatedBy","UpdatedOn","id","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","target","value","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/GroupTypePage/GroupTypeMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    onChangeText,\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\nimport {\r\n    editGroupTypeIdSuccess,\r\n    getGroupTypeslistSuccess,\r\n    PostGroupTypeSubmit,\r\n    PostGroupTypeSubmitSuccess,\r\n    updateGroupTypeID\r\n} from \"../../../store/Administrator/GroupTypeRedux/action\";\r\n\r\nconst GroupTypeMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    let editDataGetingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n    console.log(\"editDataGetingFromList\", editDataGetingFromList)\r\n\r\n    const formRef = useRef(null);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(\"\");\r\n    const [EditData, setEditData] = useState([]);\r\n\r\n    const [state, setState] = useState({\r\n        values: {\r\n            Name: \"\",\r\n        },\r\n        fieldLabel: {\r\n            Name: \"\",\r\n        },\r\n\r\n        isError: {\r\n            Name: \"\",\r\n        },\r\n\r\n        hasValid: {\r\n            Name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n        },\r\n        required: {\r\n\r\n        }\r\n    }\r\n    )\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        PostAPIResponse,\r\n        pageField,\r\n        RoleAccessModifiedinSingleArray\r\n    } = useSelector((state) => ({\r\n        PostAPIResponse: state.GroupTypeReducer.PostData,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n    useEffect(() => {\r\n        // dispatch(commonPageFieldSuccess([]));\r\n        dispatch(commonPageField(105))\r\n    }, []);\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = undefined\r\n        if ((editDataGetingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGetingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\ndebugger\r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGetingFromList === undefined)) {\r\n            const { Name } = editDataGetingFromList\r\n            const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n            values.Name = Name;\r\n            setState({ values, fieldLabel, hasValid, required, isError })\r\n            setEditData(editDataGetingFromList);\r\n            setPageMode(pageModeProps);\r\n            dispatch(editGroupTypeIdSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGetingFromList.GroupTypeMaster))\r\n            return\r\n        }\r\n    }, [editDataGetingFromList])\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostGroupTypeSubmitSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/GroupTypeList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getGroupTypeslistSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n    useEffect(() => {\r\n        if (pageField.length > 0) {\r\n            comAddPageFieldFunc({ state, setState, pageField })\r\n        }\r\n    }, [pageField])\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    const formSubmitHandler = (event) => {\r\n        debugger\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                CreatedBy: 1,\r\n                CreatedOn: \"0002-10-03T12:48:14.910491\",\r\n                UpdatedBy: 1,\r\n                UpdatedOn: \"0002-10-03T12:48:14.910491\"\r\n\r\n            });\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateGroupTypeID(jsonBody, EditData.id));\r\n            }\r\n\r\n            else {\r\n                dispatch(PostGroupTypeSubmit(jsonBody));\r\n                console.log(\"jsonBody\", jsonBody)\r\n            }\r\n        }\r\n    };\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>GroupTypeMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n                                                            <Input\r\n                                                                id=\"txtName\"\r\n                                                                name=\"Name\"\r\n                                                                type=\"text\"\r\n                                                                value={values.Name}\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default GroupTypeMaster\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}