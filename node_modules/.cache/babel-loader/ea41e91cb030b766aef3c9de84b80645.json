{"ast":null,"code":"import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import{Card,CardBody,CardHeader,Col,Container,FormGroup,Label,Row}from\"reactstrap\";import{AvField,AvForm}from\"availity-reactstrap-validation\";import{MetaTags}from\"react-meta-tags\";import{AlertState}from\"../../../store/actions\";import{useHistory}from\"react-router-dom\";import{BreadcrumbShow}from\"../../../store/Utilites/Breadcrumb/actions\";import{useDispatch,useSelector}from\"react-redux\";import{PostMethod_ForTermsAndCondtionsMaster,PostMethod_ForTermsAndCondtionsMaster_Success,EditTermsAndCondtions}from\"../../../store/Administrator/TermsAndCondtionsRedux/actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TermsAndCondtionsMaster=function TermsAndCondtionsMaster(props){var formRef=useRef(null);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),EditData=_useState2[0],setEditData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),pageMode=_useState4[0],setPageMode=_useState4[1];var history=useHistory();var dispatch=useDispatch();var _useState5=useState(123),_useState6=_slicedToArray(_useState5,2),userPageAccessState=_useState6[0],setUserPageAccessState=_useState6[1];//*** \"isEditdata get all data from ModuleID for Binding  Form controls\nvar editDataGatingFromList=props.state;var pageModeProps=props.pageMode;//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{PostAPIResponse:state.TermsAndCondtionsReducer.PostData,RoleAccessModifiedinSingleArray:state.Login.RoleAccessUpdateData};}),PostAPIResponse=_useSelector.PostAPIResponse,RoleAccessModifiedinSingleArray=_useSelector.RoleAccessModifiedinSingleArray;//userAccess useEffect\nuseEffect(function(){var userAcc=undefined;if(editDataGatingFromList===undefined){var locationPath=history.location.pathname;userAcc=RoleAccessModifiedinSingleArray.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});}else if(!(editDataGatingFromList===undefined)){var relatatedPage=props.relatatedPage;userAcc=RoleAccessModifiedinSingleArray.find(function(inx){return\"/\".concat(inx.ActualPagePath)===relatatedPage;});}if(!(userAcc===undefined)){setUserPageAccessState(userAcc);}},[RoleAccessModifiedinSingleArray]);//This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\nuseEffect(function(){if(!(userPageAccessState==='')){document.getElementById(\"txtName\").focus();}if(!(editDataGatingFromList===undefined)){// setEditData(editDataGatingFromList);\nsetPageMode(pageModeProps);//dispatch(editCategoryTypeIDSuccess({ Status: false }))\ndispatch(BreadcrumbShow(editDataGatingFromList.Name));return;}},[editDataGatingFromList]);useEffect(function(){if(PostAPIResponse.Status===true&&PostAPIResponse.StatusCode===200){dispatch(PostMethod_ForTermsAndCondtionsMaster_Success({Status:false}));if(pageMode===\"other\"){dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message,RedirectPath:'/TermsAndCondtionsMaster'}));}}else if(PostAPIResponse.Status===true){dispatch(PostMethod_ForTermsAndCondtionsMaster_Success({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(postMessage.Message),RedirectPath:false,AfterResponseAction:false}));}},[PostAPIResponse]);var FormSubmitButton_Handler=function FormSubmitButton_Handler(event,values){alert(\"aaaa\");var jsonBody=JSON.stringify({Name:values.Name});if(pageMode===\"edit\"){dispatch(EditTermsAndCondtions(jsonBody,EditData.id));}else{alert(jsonBody);dispatch(PostMethod_ForTermsAndCondtionsMaster(jsonBody));}};// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(pageMode===\"edit\"||pageMode===\"copy\"||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsx(\"title\",{children:\"CategoryTypeMaster| FoodERP-React FrontEnd\"})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(AvForm,{onValidSubmit:function onValidSubmit(e,v){FormSubmitButton_Handler(e,v);},ref:formRef,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"validationCustom01\",children:\"Name \"}),/*#__PURE__*/_jsx(AvField,{name:\"Name\",id:\"txtName\",value:EditData.Name,type:\"text\",placeholder:\"Please Enter Name\",autoComplete:\"off\",validate:{required:{value:true,errorMessage:'Please Enter Name'}},onChange:function onChange(e){dispatch(BreadcrumbShow(e.target.value));}})]}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:/*#__PURE__*/_jsx(\"div\",{children:pageMode===\"edit\"?userPageAccessState.RoleAccess_IsEdit?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Update Party Type\",className:\"btn btn-success w-md\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-edit me-2\"}),\"Update\"]}):/*#__PURE__*/_jsx(_Fragment,{}):userPageAccessState.RoleAccess_IsSave?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Save ProductCategory Type\",className:\"btn btn-primary w-sm\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save me-2\"}),\"Save\"]}):/*#__PURE__*/_jsx(_Fragment,{})})})})})]})})})})})})})]})]})})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default TermsAndCondtionsMaster;","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Label","Row","AvField","AvForm","MetaTags","AlertState","useHistory","BreadcrumbShow","useDispatch","useSelector","PostMethod_ForTermsAndCondtionsMaster","PostMethod_ForTermsAndCondtionsMaster_Success","EditTermsAndCondtions","TermsAndCondtionsMaster","props","formRef","EditData","setEditData","pageMode","setPageMode","history","dispatch","userPageAccessState","setUserPageAccessState","editDataGatingFromList","state","pageModeProps","PostAPIResponse","TermsAndCondtionsReducer","PostData","RoleAccessModifiedinSingleArray","Login","RoleAccessUpdateData","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","document","getElementById","focus","Name","Status","StatusCode","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","FormSubmitButton_Handler","event","values","alert","jsonBody","id","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","e","v","required","value","errorMessage","target","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/TermsAndCondtions/TermsAndCondtionsMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n   \r\n    PostMethod_ForTermsAndCondtionsMaster,\r\n    PostMethod_ForTermsAndCondtionsMaster_Success,\r\n    \r\n    EditTermsAndCondtions,\r\n  \r\n} from \"../../../store/Administrator/TermsAndCondtionsRedux/actions\";\r\n\r\nconst TermsAndCondtionsMaster = (props) => {\r\n    const formRef = useRef(null);\r\n    const [EditData, setEditData] = useState([]);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n\r\n    //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n    let editDataGatingFromList = props.state;\r\n    let pageModeProps=props.pageMode;\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n        \r\n        PostAPIResponse: state.TermsAndCondtionsReducer.PostData,\r\n        \r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n    }));\r\n\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = undefined\r\n        if ((editDataGatingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGatingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n\r\n    //This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGatingFromList === undefined)) {\r\n           // setEditData(editDataGatingFromList);\r\n            setPageMode(pageModeProps);\r\n            //dispatch(editCategoryTypeIDSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGatingFromList.Name))\r\n            return\r\n        }\r\n    }, [editDataGatingFromList])\r\n\r\n    useEffect(() => {\r\n\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForTermsAndCondtionsMaster_Success({ Status: false }))\r\n\r\n\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/TermsAndCondtionsMaster',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(PostMethod_ForTermsAndCondtionsMaster_Success({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n\r\n    const FormSubmitButton_Handler = (event, values) => {\r\n        alert(\"aaaa\")\r\n        const jsonBody = JSON.stringify({\r\n            \r\n            Name: values.Name,\r\n\r\n        });\r\n       \r\n        if (pageMode === \"edit\") {\r\n            dispatch(EditTermsAndCondtions(jsonBody, EditData.id));\r\n        }\r\n        else {\r\n            alert(jsonBody)\r\n            dispatch(PostMethod_ForTermsAndCondtionsMaster(jsonBody))\r\n        }\r\n\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\")||(pageMode===\"copy\")||(pageMode===\"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>CategoryTypeMaster| FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <AvForm onValidSubmit={(e, v) => { FormSubmitButton_Handler(e, v) }}\r\n                                    ref={formRef}\r\n                                >\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">Name </Label>\r\n                                                            <AvField\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={EditData.Name}\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete='off'\r\n                                                                validate={{\r\n                                                                    required: { value: true, errorMessage: 'Please Enter Name' },\r\n                                                                }}\r\n                                                                onChange={(e) => { dispatch(BreadcrumbShow(e.target.value)) }}\r\n                                                            />\r\n\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save ProductCategory Type\"\r\n                                                                                            className=\"btn btn-primary w-sm\">\r\n                                                                                            <i className=\"fas fa-save me-2\"></i>\r\n                                                                                            Save\r\n\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n\r\n                                                    </Row>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </AvForm>\r\n                            </CardBody>\r\n\r\n\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default TermsAndCondtionsMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}