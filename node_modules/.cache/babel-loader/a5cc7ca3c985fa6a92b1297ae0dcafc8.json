{"ast":null,"code":"export const formValid = (_ref, setState) => {\n  let {\n    isError,\n    required,\n    hasValid,\n    fieldLabel,\n    values\n  } = _ref;\n  debugger;\n  let isValid = false;\n  Object.values(isError).forEach(val => {\n    if (val.length >= 0) {\n      isValid = false;\n    } else {\n      isValid = true;\n    }\n  });\n  Object.keys(required).forEach(lab => {\n    if (isError[lab].length >= 0) {\n      isError[lab] = hasValid[lab].inValidMsg;\n      isValid = false;\n      setState({\n        isError,\n        hasValid,\n        required,\n        fieldLabel,\n        values\n      });\n    } else {\n      isValid = true;\n    }\n  });\n  return isValid;\n};\nexport const formValChange = _ref2 => {\n  let {\n    event,\n    state,\n    setState\n  } = _ref2;\n  event.preventDefault();\n  const {\n    name,\n    value\n  } = event.target;\n  let isError = { ...state.isError\n  };\n  let hasValid = { ...state.hasValid\n  };\n  let required = { ...state.required\n  };\n  let fieldLabel = { ...state.fieldLabel\n  };\n  let values = { ...state.values\n  };\n  const regExp = RegExp(hasValid[name].regExp);\n  isError[name] = regExp.test(value) ? \"\" : hasValid[name].inValidMsg;\n  values[name] = value;\n  setState({\n    isError,\n    hasValid,\n    required,\n    fieldLabel,\n    values\n  });\n};\nexport function comAddPageFieldFunc(_ref3) {\n  let {\n    state,\n    setState\n  } = _ref3;\n  var isState = { ...state\n  };\n  const values = { ...state.values\n  };\n  PageFieldMaster.forEach(ele => {\n    Object.keys(values).forEach(lab => {\n      if (lab === ele.controlId) {\n        isState.fieldLabel[lab] = ele.fieldLabel;\n        isState.hasValid[lab].regExp = ele.regExp;\n        isState.hasValid[lab].inValidMsg = ele.inValidMsg;\n\n        if (ele.isCompulsory) {\n          isState.required[lab] = true;\n        }\n      }\n    });\n  });\n  setState(isState);\n}\nexport const PageFieldMaster = [{\n  controlId: 'name',\n  ControlType: 2,\n  ControlTypeName: \"Dropdown\",\n  fieldLabel: \"Name \",\n  isCompulsory: true,\n  defaultSort: true,\n  showInListPage: true,\n  showInDownload: true,\n  downloadDefaultSelect: false,\n  regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n  inValidMsg: \"Email is invalid\"\n}, {\n  controlId: 'address',\n  ControlType: 2,\n  ControlTypeName: \"text\",\n  fieldLabel: \"Address \",\n  isCompulsory: true,\n  defaultSort: true,\n  showInListPage: true,\n  showInDownload: true,\n  downloadDefaultSelect: false,\n  regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n  inValidMsg: \"Address  is invalid\"\n}, {\n  controlId: 'uid',\n  ControlType: 2,\n  ControlTypeName: \"text\",\n  fieldLabel: \"UID \",\n  isCompulsory: true,\n  defaultSort: true,\n  showInListPage: true,\n  showInDownload: true,\n  downloadDefaultSelect: false,\n  regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n  inValidMsg: \"UID  is invalid\"\n}]; // const [state1, setState1] = useState(\n//     {\n//         value: {\n//             name: '',\n//             address: '',\n//             uid: '',\n//         },\n//         fieldLabel: {\n//             name: '',\n//             address: '',\n//             uid: '',\n//         },\n//         isError: {\n//             name: '',\n//             address: '',\n//             uid: '',\n//         },\n//         hasValid: {\n//             name: {\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n//                 inValidMsg: \"Name  is invalid\",\n//             },\n//             address: {\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n//                 inValidMsg: \"Email address is invalid\",\n//             },\n//             uid: {\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n//                 inValidMsg: \"UID  is invalid\",\n//             },\n//         },\n//         required: {\n//             name: true,\n//             address: true,\n//             uid: false,\n//         }\n//     }\n// )","map":{"version":3,"names":["formValid","setState","isError","required","hasValid","fieldLabel","values","isValid","Object","forEach","val","length","keys","lab","inValidMsg","formValChange","event","state","preventDefault","name","value","target","regExp","RegExp","test","comAddPageFieldFunc","isState","PageFieldMaster","ele","controlId","isCompulsory","ControlType","ControlTypeName","defaultSort","showInListPage","showInDownload","downloadDefaultSelect"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/validfiles.js"],"sourcesContent":["export const formValid = ({ isError, required, hasValid, fieldLabel,values }, setState) => {\r\ndebugger\r\n    let isValid = false;\r\n    Object.values(isError).forEach(val => {\r\n        if ((val.length >= 0)) {\r\n            isValid = false\r\n        } else {\r\n            isValid = true\r\n        }\r\n    });\r\n\r\n    Object.keys(required).forEach((lab) => {\r\n\r\n        if ((isError[lab].length >= 0)) {\r\n            isError[lab] = hasValid[lab].inValidMsg\r\n            isValid = false\r\n            setState({ isError, hasValid, required, fieldLabel, values })\r\n        } else {\r\n            isValid = true\r\n        }\r\n    });\r\n    return isValid\r\n};\r\n\r\n\r\nexport const formValChange = ({ event, state, setState }) => {\r\n\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let isError = { ...state.isError };\r\n    let hasValid = { ...state.hasValid };\r\n    let required = { ...state.required };\r\n    let fieldLabel = { ...state.fieldLabel };\r\n    let values = { ...state.values };\r\n\r\n    const regExp = RegExp(hasValid[name].regExp)\r\n    isError[name] = regExp.test(value)\r\n        ? \"\"\r\n        : hasValid[name].inValidMsg;\r\n    values[name]=value\r\n\r\n    setState({ isError, hasValid, required, fieldLabel, values })\r\n};\r\n\r\n\r\nexport function comAddPageFieldFunc({ state, setState }) {\r\n\r\n    var isState = { ...state }\r\n    const values = { ...state.values }\r\n    PageFieldMaster.forEach(ele => {\r\n\r\n        Object.keys(values).forEach(lab => {\r\n            if (lab === ele.controlId) {\r\n                isState.fieldLabel[lab] = ele.fieldLabel\r\n                isState.hasValid[lab].regExp = ele.regExp\r\n                isState.hasValid[lab].inValidMsg = ele.inValidMsg\r\n                if (ele.isCompulsory) {\r\n                    isState.required[lab] = true\r\n                }\r\n            }\r\n        });\r\n    });\r\n    setState(isState)\r\n\r\n}\r\n\r\nexport const PageFieldMaster = [\r\n    {\r\n        controlId: 'name',\r\n        ControlType: 2,\r\n        ControlTypeName: \"Dropdown\",\r\n        fieldLabel: \"Name \",\r\n        isCompulsory: true,\r\n        defaultSort: true,\r\n        showInListPage: true,\r\n        showInDownload: true,\r\n        downloadDefaultSelect: false,\r\n        regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n        inValidMsg: \"Email is invalid\",\r\n    },\r\n    {\r\n        controlId: 'address',\r\n        ControlType: 2,\r\n        ControlTypeName: \"text\",\r\n        fieldLabel: \"Address \",\r\n        isCompulsory: true,\r\n        defaultSort: true,\r\n        showInListPage: true,\r\n        showInDownload: true,\r\n        downloadDefaultSelect: false,\r\n        regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n        inValidMsg: \"Address  is invalid\",\r\n    },\r\n\r\n    {\r\n        controlId: 'uid',\r\n        ControlType: 2,\r\n        ControlTypeName: \"text\",\r\n        fieldLabel: \"UID \",\r\n        isCompulsory: true,\r\n        defaultSort: true,\r\n        showInListPage: true,\r\n        showInDownload: true,\r\n        downloadDefaultSelect: false,\r\n        regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n        inValidMsg: \"UID  is invalid\",\r\n    },\r\n\r\n]\r\n\r\n\r\n// const [state1, setState1] = useState(\r\n//     {\r\n//         value: {\r\n//             name: '',\r\n//             address: '',\r\n//             uid: '',\r\n//         },\r\n//         fieldLabel: {\r\n//             name: '',\r\n//             address: '',\r\n//             uid: '',\r\n//         },\r\n//         isError: {\r\n//             name: '',\r\n//             address: '',\r\n//             uid: '',\r\n//         },\r\n//         hasValid: {\r\n//             name: {\r\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n//                 inValidMsg: \"Name  is invalid\",\r\n//             },\r\n//             address: {\r\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n//                 inValidMsg: \"Email address is invalid\",\r\n//             },\r\n\r\n//             uid: {\r\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n//                 inValidMsg: \"UID  is invalid\",\r\n//             },\r\n//         },\r\n//         required: {\r\n//             name: true,\r\n//             address: true,\r\n//             uid: false,\r\n//         }\r\n//     }\r\n// )"],"mappings":"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"},"metadata":{},"sourceType":"module"}