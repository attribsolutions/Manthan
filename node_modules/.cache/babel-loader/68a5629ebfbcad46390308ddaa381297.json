{"ast":null,"code":"import _objectSpread from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import{Card,CardBody,CardHeader,Col,Container,FormGroup,Input,Label,Row}from\"reactstrap\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import{MetaTags}from\"react-meta-tags\";import{editEmployeeTypeSuccess,PostEmployeeTypeSubmit,PostEmployeeTypeSubmitSuccess,updateEmployeeTypeID}from\"../../../store/Administrator/EmployeeTypeRedux/action\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{AlertState,commonPageField,commonPageFieldSuccess}from\"../../../store/actions\";import{BreadcrumbShow}from\"../../../store/actions\";import{SaveButton}from\"../../../components/CommonSaveButton\";import{comAddPageFieldFunc,formValid,onChangeText}from\"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";import{EMPLOYEETYPE_lIST}from\"../../../routes/route_url\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var EmployeeTypesMaster=function EmployeeTypesMaster(props){var formRef=useRef(null);var dispatch=useDispatch();var history=useHistory();var _useState=useState(),_useState2=_slicedToArray(_useState,2),pageMode=_useState2[0],setPageMode=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),userPageAccessState=_useState4[0],setUserPageAccessState=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modalCss=_useState6[0],setModalCss=_useState6[1];var _useState7=useState({values:{id:\"\",Name:\"\",IsPartyConnection:false,IsSCM:false},fieldLabel:{Name:\"\",IsPartyConnection:false,IsSCM:false},isError:{Name:\"\",IsPartyConnection:false,IsSCM:false},hasValid:{Name:{regExp:'',inValidMsg:\"\",valid:false},IsPartyConnection:{regExp:'',inValidMsg:\"\",valid:false},IsSCM:{regExp:'',inValidMsg:\"\",valid:false}},required:{}}),_useState8=_slicedToArray(_useState7,2),state=_useState8[0],setState=_useState8[1];//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{PostAPIResponse:state.EmployeeTypeReducer.PostEmployeeType,userAccess:state.Login.RoleAccessUpdateData,pageField:state.CommonPageFieldReducer.pageField};}),PostAPIResponse=_useSelector.PostAPIResponse,pageField=_useSelector.pageField,userAccess=_useSelector.userAccess;var location=_objectSpread({},history.location);var hasShowloction=location.hasOwnProperty(\"editValue\");var hasShowModal=props.hasOwnProperty(\"editValue\");useEffect(function(){dispatch(commonPageFieldSuccess(null));dispatch(commonPageField(115));},[]);// userAccess useEffect\nuseEffect(function(){var userAcc=null;var locationPath=location.pathname;if(hasShowModal){locationPath=props.masterPath;};userAcc=userAccess.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(userAcc){setUserPageAccessState(userAcc);};},[userAccess]);useEffect(function(){// if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\nif(hasShowloction||hasShowModal){var hasEditVal=null;if(hasShowloction){setPageMode(location.pageMode);hasEditVal=location.editValue;}else if(hasShowModal){hasEditVal=props.editValue;setPageMode(props.pageMode);setModalCss(true);}if(hasEditVal){var _hasEditVal=hasEditVal,id=_hasEditVal.id,Name=_hasEditVal.Name,IsPartyConnection=_hasEditVal.IsPartyConnection,IsSCM=_hasEditVal.IsSCM;var _state=_objectSpread({},state),_values=_state.values,_fieldLabel=_state.fieldLabel,hasValid=_state.hasValid,required=_state.required,_isError=_state.isError;_values.Name=Name;_values.IsPartyConnection=IsPartyConnection;_values.IsSCM=IsSCM;_values.id=id;hasValid.Name.valid=true;hasValid.IsSCM.valid=true;hasValid.IsPartyConnection.valid=true;setState({values:_values,fieldLabel:_fieldLabel,hasValid:hasValid,required:required,isError:_isError});dispatch(BreadcrumbShow(hasEditVal.Name));}dispatch(editEmployeeTypeSuccess({Status:false}));}},[]);useEffect(function(){if(PostAPIResponse.Status===true&&PostAPIResponse.StatusCode===200&&!(pageMode===\"dropdownAdd\")){dispatch(PostEmployeeTypeSubmitSuccess({Status:false}));formRef.current.reset();if(pageMode===\"dropdownAdd\"){dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message,RedirectPath:EMPLOYEETYPE_lIST}));}}else if(PostAPIResponse.Status===true&&!(pageMode===\"dropdownAdd\")){dispatch(PostEmployeeTypeSubmitSuccess({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(PostAPIResponse.Message),RedirectPath:false,AfterResponseAction:false}));}},[PostAPIResponse]);useEffect(function(){if(pageField){var fieldArr=pageField.PageFieldMaster;comAddPageFieldFunc({state:state,setState:setState,fieldArr:fieldArr});}},[pageField]);var values=_objectSpread({},state.values);var isError=state.isError;var fieldLabel=state.fieldLabel;var formSubmitHandler=function formSubmitHandler(event){event.preventDefault();if(formValid(state,setState)){var jsonBody=JSON.stringify({Name:values.Name,IsPartyConnection:values.IsPartyConnection,IsSCM:values.IsSCM,Description:\"sfasfgasd\",CreatedBy:1,CreatedOn:\"2022-07-18T00:00:00\",UpdatedBy:1,UpdatedOn:\"2022-07-18T00:00:00\"});if(pageMode===\"edit\"){dispatch(updateEmployeeTypeID(jsonBody,values.id));}else{dispatch(PostEmployeeTypeSubmit(jsonBody));}}};// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(modalCss||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsxs(\"title\",{children:[userPageAccessState.PageHeading,\"| FoodERP-React FrontEnd\"]})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsx(Container,{fluid:true,children:/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formSubmitHandler,ref:formRef,noValidate:true,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[fieldLabel.Name,\" \"]}),/*#__PURE__*/_jsx(Input,{name:\"Name\",id:\"txtName\",value:values.Name,type:\"text\",className:isError.Name.length>0?\"is-invalid form-control\":\"form-control\",placeholder:\"Please Enter Name\",autoComplete:\"off\",onChange:function onChange(event){onChangeText({event:event,state:state,setState:setState});dispatch(BreadcrumbShow(event.target.value));}}),isError.Name.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"invalid-feedback\",children:isError.Name})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(FormGroup,{className:\"mb-2 col col-sm-5\",children:/*#__PURE__*/_jsxs(Row,{className:\"justify-content-md-left\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"horizontal-firstname-input\",className:\"col-sm-5 col-form-label\",children:fieldLabel.IsPartyConnection}),/*#__PURE__*/_jsx(Col,{md:2,style:{marginTop:'9px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"form-check form-switch form-switch-md mb-3\",children:/*#__PURE__*/_jsx(Input,{type:\"checkbox\",className:\"form-check-input\",checked:values.IsPartyConnection,name:\"IsPartyConnection\",onChange:function onChange(event){return onChangeText({event:event,state:state,setState:setState});}})})})]})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(FormGroup,{className:\"mb-2 col col-sm-5\",children:/*#__PURE__*/_jsxs(Row,{className:\"justify-content-md-left\",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"horizontal-firstname-input\",className:\"col-sm-5 col-form-label\",children:[fieldLabel.IsSCM,\" \"]}),/*#__PURE__*/_jsx(Col,{md:2,style:{marginTop:'9px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"form-check form-switch form-switch-md mb-3\",children:/*#__PURE__*/_jsx(Input,{type:\"checkbox\",className:\"form-check-input\",checked:values.IsSCM,name:\"IsSCM\",onChange:function onChange(event){return onChangeText({event:event,state:state,setState:setState});}})})})]})})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:SaveButton({pageMode:pageMode,userPageAccessState:userPageAccessState,module:\"EmployeeTypesMaster\"})})})})]})})})})})})})]})})]})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default EmployeeTypesMaster;","map":{"version":3,"names":["React","useEffect","useRef","useState","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","Breadcrumb","MetaTags","editEmployeeTypeSuccess","PostEmployeeTypeSubmit","PostEmployeeTypeSubmitSuccess","updateEmployeeTypeID","useDispatch","useSelector","useHistory","AlertState","commonPageField","commonPageFieldSuccess","BreadcrumbShow","SaveButton","comAddPageFieldFunc","formValid","onChangeText","EMPLOYEETYPE_lIST","EmployeeTypesMaster","props","formRef","dispatch","history","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","modalCss","setModalCss","values","id","Name","IsPartyConnection","IsSCM","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","state","setState","PostAPIResponse","EmployeeTypeReducer","PostEmployeeType","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","Description","CreatedBy","CreatedOn","UpdatedBy","UpdatedOn","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","value","module"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/EmployeeTypes/EmployeeTypesMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport {\r\n    editEmployeeTypeSuccess,\r\n    PostEmployeeTypeSubmit,\r\n    PostEmployeeTypeSubmitSuccess,\r\n    updateEmployeeTypeID\r\n} from \"../../../store/Administrator/EmployeeTypeRedux/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    AlertState,\r\n    commonPageField,\r\n    commonPageFieldSuccess\r\n} from \"../../../store/actions\";\r\nimport { BreadcrumbShow } from \"../../../store/actions\";\r\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    onChangeText\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\nimport { EMPLOYEETYPE_lIST } from \"../../../routes/route_url\";\r\n\r\n\r\nconst EmployeeTypesMaster = (props) => {\r\n\r\n    const formRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const history  = useHistory()\r\n\r\n    const [pageMode, setPageMode] = useState();\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n    const [modalCss, setModalCss] = useState(false);\r\n\r\n\r\n    const [state, setState] = useState({\r\n        values: {\r\n            id: \"\",\r\n            Name: \"\",\r\n            IsPartyConnection: false,\r\n            IsSCM: false\r\n        },\r\n        fieldLabel: {\r\n            Name: \"\",\r\n            IsPartyConnection: false,\r\n            IsSCM: false\r\n        },\r\n\r\n        isError: {\r\n            Name: \"\",\r\n            IsPartyConnection: false,\r\n            IsSCM: false\r\n        },\r\n\r\n        hasValid: {\r\n            Name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            IsPartyConnection: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            IsSCM: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            }\r\n        },\r\n        required: {\r\n\r\n        }\r\n    }\r\n    )\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, pageField, userAccess, } = useSelector((state) => ({\r\n        PostAPIResponse: state.EmployeeTypeReducer.PostEmployeeType,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(115))\r\n    }, []);\r\n\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n                const { id, Name, IsPartyConnection, IsSCM } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n                values.Name = Name;\r\n                values.IsPartyConnection = IsPartyConnection;\r\n                values.IsSCM = IsSCM;\r\n                values.id = id\r\n                hasValid.Name.valid = true;\r\n                hasValid.IsSCM.valid = true;\r\n                hasValid.IsPartyConnection.valid = true;\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(BreadcrumbShow(hasEditVal.Name))\r\n            }\r\n            dispatch(editEmployeeTypeSuccess({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200) && !(pageMode === \"dropdownAdd\")) {\r\n\r\n            dispatch(PostEmployeeTypeSubmitSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: EMPLOYEETYPE_lIST,\r\n\r\n                }))\r\n            }\r\n        }\r\n        else if ((PostAPIResponse.Status === true) && !(pageMode === \"dropdownAdd\")) {\r\n            dispatch(PostEmployeeTypeSubmitSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostAPIResponse.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                IsPartyConnection: values.IsPartyConnection,\r\n                IsSCM: values.IsSCM,\r\n                Description: \"sfasfgasd\",\r\n                CreatedBy: 1,\r\n                CreatedOn: \"2022-07-18T00:00:00\",\r\n                UpdatedBy: 1,\r\n                UpdatedOn: \"2022-07-18T00:00:00\"\r\n            });\r\n\r\n            if (pageMode === \"edit\") {\r\n                dispatch(updateEmployeeTypeID(jsonBody, values.id));\r\n            }\r\n            else {\r\n                dispatch(PostEmployeeTypeSubmit(jsonBody));\r\n            }\r\n        }\r\n    };\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <MetaTags>\r\n                        <title>{userPageAccessState.PageHeading}| FoodERP-React FrontEnd</title>\r\n                    </MetaTags>\r\n                    <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n                    <Container fluid>\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n                                                            <Input\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={values.Name}\r\n                                                                type=\"text\"\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete='off'\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-5\">\r\n                                                                <Row className=\"justify-content-md-left\">\r\n                                                                    <Label htmlFor=\"horizontal-firstname-input\" className=\"col-sm-5 col-form-label\" >{fieldLabel.IsPartyConnection}</Label>\r\n                                                                    <Col md={2} style={{ marginTop: '9px' }}>\r\n                                                                        <div className=\"form-check form-switch form-switch-md mb-3\" >\r\n                                                                            <Input type=\"checkbox\" className=\"form-check-input\"\r\n                                                                                 checked={values.IsPartyConnection}\r\n                                                                                name=\"IsPartyConnection\"\r\n                                                                                onChange={(event) => onChangeText({ event, state, setState })}\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-5\">\r\n                                                                <Row className=\"justify-content-md-left\">\r\n                                                                    <Label htmlFor=\"horizontal-firstname-input\" className=\"col-sm-5 col-form-label\" >{fieldLabel.IsSCM} </Label>\r\n                                                                    <Col md={2} style={{ marginTop: '9px' }} >\r\n                                                                    <div className=\"form-check form-switch form-switch-md mb-3\" >\r\n                                                                            <Input type=\"checkbox\" className=\"form-check-input\"\r\n                                                                                 checked={values.IsSCM}\r\n                                                                                name=\"IsSCM\"\r\n                                                                                onChange={(event) => onChangeText({ event, state, setState })}\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </FormGroup>\r\n\r\n                                                        </Row>\r\n                                                        <FormGroup >\r\n                                                            <Row >\r\n                                                                <Col sm={2}>\r\n                                                                    {SaveButton({ pageMode, userPageAccessState, module: \"EmployeeTypesMaster\" })}\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default EmployeeTypesMaster\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}