{"ast":null,"code":"import i18n from\"i18next\";import detector from\"i18next-browser-languagedetector\";import{initReactI18next}from\"react-i18next\";import translationGr from\"./locales/gr/translation.json\";import translationIT from\"./locales/it/translation.json\";import translationRS from\"./locales/rs/translation.json\";import translationSP from\"./locales/sp/translation.json\";import translationENG from\"./locales/eng/translation.json\";// the translations\nvar resources={gr:{translation:translationGr},it:{translation:translationIT},rs:{translation:translationRS},sp:{translation:translationSP},eng:{translation:translationENG}};var language=localStorage.getItem(\"I18N_LANGUAGE\");if(!language){localStorage.setItem(\"I18N_LANGUAGE\",\"en\");}i18n.use(detector).use(initReactI18next)// passes i18n down to react-i18next\n.init({resources:resources,lng:localStorage.getItem(\"I18N_LANGUAGE\")||\"en\",fallbackLng:\"en\",// use en if detected lng is not available\nkeySeparator:false,// we do not use keys in form messages.welcome\ninterpolation:{escapeValue:false// react already safes from xss\n}});export default i18n;","map":{"version":3,"names":["i18n","detector","initReactI18next","translationGr","translationIT","translationRS","translationSP","translationENG","resources","gr","translation","it","rs","sp","eng","language","localStorage","getItem","setItem","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"sources":["D:/GitProjects/Manthan/src/i18n.js"],"sourcesContent":["import i18n from \"i18next\"\r\nimport detector from \"i18next-browser-languagedetector\"\r\nimport { initReactI18next } from \"react-i18next\"\r\n\r\nimport translationGr from \"./locales/gr/translation.json\"\r\nimport translationIT from \"./locales/it/translation.json\"\r\nimport translationRS from \"./locales/rs/translation.json\"\r\nimport translationSP from \"./locales/sp/translation.json\"\r\nimport translationENG from \"./locales/eng/translation.json\"\r\n\r\n// the translations\r\nconst resources = {\r\n  gr: {\r\n    translation: translationGr,\r\n  },\r\n  it: {\r\n    translation: translationIT,\r\n  },\r\n  rs: {\r\n    translation: translationRS,\r\n  },\r\n  sp: {\r\n    translation: translationSP,\r\n  },\r\n  eng: {\r\n    translation: translationENG,\r\n  },\r\n}\r\n\r\nconst language = localStorage.getItem(\"I18N_LANGUAGE\")\r\nif (!language) {\r\n  localStorage.setItem(\"I18N_LANGUAGE\", \"en\")\r\n}\r\n\r\ni18n\r\n  .use(detector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: localStorage.getItem(\"I18N_LANGUAGE\") || \"en\",\r\n    fallbackLng: \"en\", // use en if detected lng is not available\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  })\r\n\r\nexport default i18n\r\n"],"mappings":"AAAA,MAAOA,KAAP,KAAiB,SAAjB,CACA,MAAOC,SAAP,KAAqB,kCAArB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CAEA,MAAOC,cAAP,KAA0B,+BAA1B,CACA,MAAOC,cAAP,KAA0B,+BAA1B,CACA,MAAOC,cAAP,KAA0B,+BAA1B,CACA,MAAOC,cAAP,KAA0B,+BAA1B,CACA,MAAOC,eAAP,KAA2B,gCAA3B,CAEA;AACA,GAAMC,UAAS,CAAG,CAChBC,EAAE,CAAE,CACFC,WAAW,CAAEP,aADX,CADY,CAIhBQ,EAAE,CAAE,CACFD,WAAW,CAAEN,aADX,CAJY,CAOhBQ,EAAE,CAAE,CACFF,WAAW,CAAEL,aADX,CAPY,CAUhBQ,EAAE,CAAE,CACFH,WAAW,CAAEJ,aADX,CAVY,CAahBQ,GAAG,CAAE,CACHJ,WAAW,CAAEH,cADV,CAbW,CAAlB,CAkBA,GAAMQ,SAAQ,CAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAjB,CACA,GAAI,CAACF,QAAL,CAAe,CACbC,YAAY,CAACE,OAAb,CAAqB,eAArB,CAAsC,IAAtC,EACD,CAEDlB,IAAI,CACDmB,GADH,CACOlB,QADP,EAEGkB,GAFH,CAEOjB,gBAFP,CAEyB;AAFzB,CAGGkB,IAHH,CAGQ,CACJZ,SAAS,CAATA,SADI,CAEJa,GAAG,CAAEL,YAAY,CAACC,OAAb,CAAqB,eAArB,GAAyC,IAF1C,CAGJK,WAAW,CAAE,IAHT,CAGe;AAEnBC,YAAY,CAAE,KALV,CAKiB;AAErBC,aAAa,CAAE,CACbC,WAAW,CAAE,KAAO;AADP,CAPX,CAHR,EAeA,cAAezB,KAAf"},"metadata":{},"sourceType":"module"}