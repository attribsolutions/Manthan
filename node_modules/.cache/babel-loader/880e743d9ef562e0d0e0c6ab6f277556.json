{"ast":null,"code":"export const formValid = (_ref, setState) => {\n  let {\n    isError,\n    required,\n    hasValid,\n    fieldLabel,\n    values\n  } = _ref;\n  let isValid = true; //     Object.values(isError).forEach(val => {\n  //         if ((val.length > 0)) {\n  //             isValid = false\n  //         } else {\n  //             isValid = true\n  //         }\n  //     });\n\n  Object.keys(required).forEach(lab => {\n    if (!hasValid[lab].valid) {\n      isError[lab] = hasValid[lab].inValidMsg;\n      isValid = false;\n      setState({\n        isError,\n        hasValid,\n        required,\n        fieldLabel,\n        values\n      });\n    }\n  });\n  return isValid;\n};\nexport const formValChange = _ref2 => {\n  let {\n    event,\n    state,\n    setState\n  } = _ref2;\n  debugger;\n  let isError = { ...state.isError\n  };\n  let hasValid = { ...state.hasValid\n  };\n  let required = { ...state.required\n  };\n  let fieldLabel = { ...state.fieldLabel\n  };\n  let values = { ...state.values\n  };\n\n  if (!(event.target === undefined)) {\n    event.preventDefault();\n    const {\n      name,\n      value,\n      type\n    } = event.target;\n    const regExp = RegExp(hasValid[name].regExp);\n\n    if (regExp.test(value)) {\n      isError[name] = \"\";\n      hasValid[name].valid = true;\n    } else {\n      isError[name] = hasValid[name].inValidMsg;\n      hasValid[name].valid = false;\n    }\n\n    values[name] = value;\n    setState({\n      isError,\n      hasValid,\n      required,\n      fieldLabel,\n      values\n    });\n  } else {\n    const {\n      name,\n      value\n    } = event;\n    values[name] = value;\n    isError[name] = '';\n    hasValid[name].valid = true;\n    setState({\n      isError,\n      hasValid,\n      required,\n      fieldLabel,\n      values\n    });\n  }\n};\nexport function comAddPageFieldFunc(_ref3) {\n  let {\n    state,\n    setState,\n    fieldData\n  } = _ref3;\n  var isState = { ...state\n  }; // isState['fieldLabel'] = {}\n  // isState['isError'] = {}\n  // isState['hasValid'] = {}\n  // isState['required'] = {}\n\n  const values = { ...state.values\n  };\n  fieldData.forEach(ele => {\n    debugger;\n    Object.keys(values).forEach(lab => {\n      if (lab === ele.controlId) {\n        // isState['hasValid'] = {\n        //     [lab]: {\n        //         regExp: ele.regExp,\n        //         inValidMsg: ele.fieldLabel,\n        //         valid: false\n        //     }\n        // }\n        isState.fieldLabel[lab] = ele.fieldLabel;\n        isState.hasValid[lab].regExp = ele.regExp;\n        isState.hasValid[lab].inValidMsg = ele.inValidMsg;\n\n        if (ele.isCompulsory) {\n          isState.required[lab] = true;\n        }\n      }\n    });\n  });\n  setState(isState);\n}\nexport const fieldData = [{\n  controlId: 'name',\n  ControlType: 2,\n  ControlTypeName: \"Dropdown\",\n  fieldLabel: \"Driver Name111 \",\n  isCompulsory: false,\n  defaultSort: true,\n  showInListPage: true,\n  showInDownload: true,\n  downloadDefaultSelect: false,\n  regExp: /^.{4,100}$/,\n  inValidMsg: \"Driver Name is invalid\"\n}, {\n  controlId: 'address',\n  ControlType: 2,\n  ControlTypeName: \"text\",\n  fieldLabel: \"Address \",\n  isCompulsory: true,\n  defaultSort: true,\n  showInListPage: true,\n  showInDownload: true,\n  downloadDefaultSelect: false,\n  regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n  inValidMsg: \"Address  is invalid\"\n}, {\n  controlId: 'uid',\n  ControlType: 2,\n  ControlTypeName: \"text\",\n  fieldLabel: \"UID \",\n  isCompulsory: true,\n  defaultSort: true,\n  showInListPage: true,\n  showInDownload: true,\n  downloadDefaultSelect: false,\n  regExp: /^.{4,100}$/,\n  inValidMsg: \"UID  is invalid\"\n}, {\n  controlId: 'party',\n  controlType: 2,\n  controltypeName: \"select\",\n  fieldLabel: \"Party \",\n  isCompulsory: true,\n  defaultSort: true,\n  fieldValidation: 4,\n  fieldValidationName: \"10 digit Number\",\n  showInListPage: true,\n  showInDownload: true,\n  downloadDefaultSelect: false,\n  regExp: /^.{4,100}$/,\n  inValidMsg: \"Party is invalid\"\n}]; // const [state1, setState1] = useState(\n//     {\n//         value: {\n//             name: '',\n//             address: '',\n//             uid: '',\n//         },\n//         fieldLabel: {\n//             name: '',\n//             address: '',\n//             uid: '',\n//         },\n//         isError: {\n//             name: '',\n//             address: '',\n//             uid: '',\n//         },\n//         hasValid: {\n//             name: {\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n//                 inValidMsg: \"Name  is invalid\",\n//             },\n//             address: {\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n//                 inValidMsg: \"Email address is invalid\",\n//             },\n//             uid: {\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\n//                 inValidMsg: \"UID  is invalid\",\n//             },\n//         },\n//         required: {\n//             name: true,\n//             address: true,\n//             uid: false,\n//         }\n//     }\n// )","map":{"version":3,"names":["formValid","setState","isError","required","hasValid","fieldLabel","values","isValid","Object","keys","forEach","lab","valid","inValidMsg","formValChange","event","state","target","undefined","preventDefault","name","value","type","regExp","RegExp","test","comAddPageFieldFunc","fieldData","isState","ele","controlId","isCompulsory","ControlType","ControlTypeName","defaultSort","showInListPage","showInDownload","downloadDefaultSelect","controlType","controltypeName","fieldValidation","fieldValidationName"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/validfiles.js"],"sourcesContent":["export const formValid = ({ isError, required, hasValid, fieldLabel, values }, setState) => {\r\n\r\n    let isValid = true;\r\n    //     Object.values(isError).forEach(val => {\r\n    //         if ((val.length > 0)) {\r\n    //             isValid = false\r\n    //         } else {\r\n    //             isValid = true\r\n    //         }\r\n    //     });\r\n\r\n    Object.keys(required).forEach((lab) => {\r\n\r\n        if (!(hasValid[lab].valid)) {\r\n            isError[lab] = hasValid[lab].inValidMsg\r\n            isValid = false\r\n            setState({ isError, hasValid, required, fieldLabel, values })\r\n        }\r\n    });\r\n    return isValid\r\n};\r\n\r\n\r\nexport const formValChange = ({ event, state, setState }) => {\r\n    debugger\r\n    let isError = { ...state.isError };\r\n    let hasValid = { ...state.hasValid };\r\n    let required = { ...state.required };\r\n    let fieldLabel = { ...state.fieldLabel };\r\n    let values = { ...state.values };\r\n\r\n    if (!(event.target === undefined)) {\r\n        event.preventDefault();\r\n        const { name, value, type } = event.target;\r\n\r\n        const regExp = RegExp(hasValid[name].regExp)\r\n        if (regExp.test(value)) {\r\n            isError[name] = \"\";\r\n            hasValid[name].valid = true\r\n        }\r\n        else {\r\n            isError[name] = hasValid[name].inValidMsg;\r\n            hasValid[name].valid = false\r\n        }\r\n        values[name] = value\r\n        setState({ isError, hasValid, required, fieldLabel, values })\r\n    }\r\n    else {\r\n        const { name, value } = event\r\n        values[name] = value\r\n        isError[name] =''\r\n        hasValid[name].valid = true\r\n        setState({\r\n            isError, hasValid, required, fieldLabel, values\r\n        })\r\n    }\r\n};\r\n\r\n\r\n    export function comAddPageFieldFunc({ state, setState, fieldData }) {\r\n        var isState = { ...state }\r\n        // isState['fieldLabel'] = {}\r\n        // isState['isError'] = {}\r\n        // isState['hasValid'] = {}\r\n        // isState['required'] = {}\r\n\r\n        const values = { ...state.values }\r\n\r\n        fieldData.forEach(ele => {\r\n            debugger\r\n            Object.keys(values).forEach(lab => {\r\n                if (lab === ele.controlId) {\r\n                    // isState['hasValid'] = {\r\n                    //     [lab]: {\r\n                    //         regExp: ele.regExp,\r\n                    //         inValidMsg: ele.fieldLabel,\r\n                    //         valid: false\r\n                    //     }\r\n                    // }\r\n                    isState.fieldLabel[lab] = ele.fieldLabel\r\n                    isState.hasValid[lab].regExp = ele.regExp\r\n                    isState.hasValid[lab].inValidMsg = ele.inValidMsg\r\n                    if (ele.isCompulsory) {\r\n                        isState.required[lab] = true\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        setState(isState)\r\n\r\n    }\r\n\r\n    export const fieldData = [\r\n        {\r\n            controlId: 'name',\r\n            ControlType: 2,\r\n            ControlTypeName: \"Dropdown\",\r\n            fieldLabel: \"Driver Name111 \",\r\n            isCompulsory: false,\r\n            defaultSort: true,\r\n            showInListPage: true,\r\n            showInDownload: true,\r\n            downloadDefaultSelect: false,\r\n            regExp: /^.{4,100}$/,\r\n            inValidMsg: \"Driver Name is invalid\",\r\n        },\r\n        {\r\n            controlId: 'address',\r\n            ControlType: 2,\r\n            ControlTypeName: \"text\",\r\n            fieldLabel: \"Address \",\r\n            isCompulsory: true,\r\n            defaultSort: true,\r\n            showInListPage: true,\r\n            showInDownload: true,\r\n            downloadDefaultSelect: false,\r\n            regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n            inValidMsg: \"Address  is invalid\",\r\n        },\r\n\r\n        {\r\n            controlId: 'uid',\r\n            ControlType: 2,\r\n            ControlTypeName: \"text\",\r\n            fieldLabel: \"UID \",\r\n            isCompulsory: true,\r\n            defaultSort: true,\r\n            showInListPage: true,\r\n            showInDownload: true,\r\n            downloadDefaultSelect: false,\r\n            regExp: /^.{4,100}$/,\r\n            inValidMsg: \"UID  is invalid\",\r\n        },\r\n        {\r\n            controlId: 'party',\r\n            controlType: 2,\r\n            controltypeName: \"select\",\r\n            fieldLabel: \"Party \",\r\n            isCompulsory: true,\r\n            defaultSort: true,\r\n            fieldValidation:4,\r\n            fieldValidationName:\"10 digit Number\",\r\n            showInListPage: true,\r\n            showInDownload: true,\r\n            downloadDefaultSelect: false,\r\n            regExp: /^.{4,100}$/,\r\n            inValidMsg: \"Party is invalid\",\r\n        },\r\n\r\n    ]\r\n\r\n\r\n\r\n   \r\n\r\n// const [state1, setState1] = useState(\r\n//     {\r\n//         value: {\r\n//             name: '',\r\n//             address: '',\r\n//             uid: '',\r\n//         },\r\n//         fieldLabel: {\r\n//             name: '',\r\n//             address: '',\r\n//             uid: '',\r\n//         },\r\n//         isError: {\r\n//             name: '',\r\n//             address: '',\r\n//             uid: '',\r\n//         },\r\n//         hasValid: {\r\n//             name: {\r\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n//                 inValidMsg: \"Name  is invalid\",\r\n//             },\r\n//             address: {\r\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n//                 inValidMsg: \"Email address is invalid\",\r\n//             },\r\n\r\n//             uid: {\r\n//                 regExp: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/,\r\n//                 inValidMsg: \"UID  is invalid\",\r\n//             },\r\n//         },\r\n//         required: {\r\n//             name: true,\r\n//             address: true,\r\n//             uid: false,\r\n//         }\r\n//     }\r\n// )"],"mappings":"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"},"metadata":{},"sourceType":"module"}