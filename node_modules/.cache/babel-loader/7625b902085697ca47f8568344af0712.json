{"ast":null,"code":"import { POST_METHOD_FOR_PARTYSUBPARTY_API_SUCCESS, POST_PARTY_SUB_PARTY, POST_PARTY_SUB_PARTY_SUCCESS } from \"./actionType\";\nconst INIT_STATE = {\n  postMsg: {\n    Status: false\n  }\n};\n\nconst PartySubPartyReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POST_PARTY_SUB_PARTY_SUCCESS:\n      return { ...state,\n        postMsg: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = PartySubPartyReducer;\nexport default PartySubPartyReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartySubPartyReducer\");","map":{"version":3,"names":["POST_METHOD_FOR_PARTYSUBPARTY_API_SUCCESS","POST_PARTY_SUB_PARTY","POST_PARTY_SUB_PARTY_SUCCESS","INIT_STATE","postMsg","Status","PartySubPartyReducer","state","action","type","payload"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/PartySubPartyRedux/reducer.js"],"sourcesContent":["import {\r\n    POST_METHOD_FOR_PARTYSUBPARTY_API_SUCCESS, POST_PARTY_SUB_PARTY, POST_PARTY_SUB_PARTY_SUCCESS,\r\n  } from \"./actionType\";\r\n\r\n  const INIT_STATE = {\r\n    postMsg: { Status: false },\r\n  }\r\n\r\n  const PartySubPartyReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n  \r\n      case POST_PARTY_SUB_PARTY_SUCCESS:\r\n        return {\r\n          ...state,\r\n          postMsg: action.payload,\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default PartySubPartyReducer"],"mappings":"AAAA,SACIA,yCADJ,EAC+CC,oBAD/C,EACqEC,4BADrE,QAES,cAFT;AAIE,MAAMC,UAAU,GAAG;EACjBC,OAAO,EAAE;IAAEC,MAAM,EAAE;EAAV;AADQ,CAAnB;;AAIA,MAAMC,oBAAoB,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAvBJ,UAAuB;EAAA,IAAXK,MAAW;;EAC3D,QAAQA,MAAM,CAACC,IAAf;IAEE,KAAKP,4BAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELH,OAAO,EAAEI,MAAM,CAACE;MAFX,CAAP;;IAKF;MACE,OAAOH,KAAP;EATJ;AAWD,CAZD;;KAAMD,oB;AAcN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}