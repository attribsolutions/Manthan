{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { saveH_SubModules, putUpdateSubModule, get_SubModulesListData_ApiCall, deleteSubModulesUsingID_ApiCall, getSubModulesEditDataUsingID_ApiCall } from \"../../../helpers/backend_helper\";\nimport { POST_SUB_MODULE_ID, UPDATE_MODULE, GET_SUB_MODULES, DELETE_SUB_MODULES_USING_ID, GET_SUB_MODULES_EDIT_DATA_USING_ID } from './actionTypes';\nimport { getSubModulesSuccess, GetSubModuleEditDataUsingIDSuccess, getSubModules, updateSubModuleSuccess, SaveSubModuleSuccess } from \"./actions\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { AlertState } from \"../../Utilites/CostumeAlert/actions\";\n\nfunction* GetSubModulesData_GenratorFunction() {\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(get_SubModulesListData_ApiCall);\n    console.log(response);\n    yield put(getSubModulesSuccess(response.Data));\n    yield put(SpinnerState(false));\n  } catch (error) {\n    yield put(SpinnerState(false));\n  }\n}\n\n_c = GetSubModulesData_GenratorFunction;\n\nfunction* Save_SubModules_GenratorFunction(_ref) {\n  let {\n    Data\n  } = _ref;\n  console.log(\"saveH_SubModules Data\", Data);\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(saveH_SubModules, Data);\n    console.log(\"saveH_SubModules response\", response);\n    yield put(SpinnerState(false));\n\n    if (response.StatusCode === 200) {\n      yield put(SaveSubModuleSuccess({\n        Status: true\n      }));\n      yield put(AlertState({\n        Type: 1,\n        Status: true,\n        Message: response.Message,\n        RedirectPath: '/SubModulesList',\n        AfterResponseAction: false\n      }));\n    } else {// yield put(AlertState({ Type: 4, Status: true, Message: \"error Message\", RedirectPath: false, AfterResponseAction: false }));\n    }\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 3,\n      Status: true,\n      Message: \"  SubModules save error\",\n      RedirectPath: false,\n      AfterResponseAction: false\n    }));\n    yield console.log(\"postModule saga error :\", error);\n  }\n} //// delete api \n\n\n_c2 = Save_SubModules_GenratorFunction;\n\nfunction* deleteSubModulesUsingID_genratorFunction(_ref2) {\n  let {\n    id\n  } = _ref2;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(deleteSubModulesUsingID_ApiCall, id);\n    yield put(SpinnerState(false));\n\n    if (response.StatusCode === 200) {\n      yield put(AlertState({\n        Type: 1,\n        Status: true,\n        Message: response.Message,\n        RedirectPath: false,\n        AfterResponseAction: getSubModules\n      }));\n    } else {\n      yield put(AlertState({\n        Type: 3,\n        Status: true,\n        Message: \"deleteSubModulesUsingID faild\",\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield console.log(\"delete Module Error : \", error);\n  }\n}\n\nfunction* GetSubModulesEditData_GenratorFunction(_ref3) {\n  let {\n    id\n  } = _ref3;\n\n  try {\n    const response = yield call(getSubModulesEditDataUsingID_ApiCall, id);\n    yield put(GetSubModuleEditDataUsingIDSuccess(response));\n  } catch (error) {}\n}\n\n_c3 = GetSubModulesEditData_GenratorFunction;\n\nfunction* updateSubModulesaga(_ref4) {\n  let {\n    updateData,\n    ID\n  } = _ref4;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(putUpdateSubModule, updateData, ID);\n    yield put(SpinnerState(false));\n    yield put(GetSubModuleEditDataUsingIDSuccess({\n      Status: \"false\"\n    }));\n\n    if (response.StatusCode === 200) {\n      yield put(updateSubModuleSuccess({\n        Status: true\n      }));\n      yield put(AlertState({\n        Type: 1,\n        Status: true,\n        Message: response.Message,\n        RedirectPath: false,\n        AfterResponseAction: getSubModules\n      }));\n    } else {\n      yield put(AlertState({\n        Type: 3,\n        Status: true,\n        Message: response.Message,\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  } catch (error) {\n    yield put(GetSubModuleEditDataUsingIDSuccess({\n      Status: \"false\"\n    }));\n    yield put(SpinnerState(false));\n    yield console.log(\" updateModule saga error\", error);\n  }\n}\n\nfunction* SubModuleSaga() {\n  yield takeEvery(POST_SUB_MODULE_ID, Save_SubModules_GenratorFunction);\n  yield takeEvery(GET_SUB_MODULES, GetSubModulesData_GenratorFunction);\n  yield takeEvery(DELETE_SUB_MODULES_USING_ID, deleteSubModulesUsingID_genratorFunction);\n  yield takeEvery(GET_SUB_MODULES_EDIT_DATA_USING_ID, GetSubModulesEditData_GenratorFunction);\n  yield takeEvery(UPDATE_MODULE, updateSubModulesaga);\n}\n\n_c4 = SubModuleSaga;\nexport default SubModuleSaga;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GetSubModulesData_GenratorFunction\");\n$RefreshReg$(_c2, \"Save_SubModules_GenratorFunction\");\n$RefreshReg$(_c3, \"GetSubModulesEditData_GenratorFunction\");\n$RefreshReg$(_c4, \"SubModuleSaga\");","map":{"version":3,"names":["call","put","takeEvery","saveH_SubModules","putUpdateSubModule","get_SubModulesListData_ApiCall","deleteSubModulesUsingID_ApiCall","getSubModulesEditDataUsingID_ApiCall","POST_SUB_MODULE_ID","UPDATE_MODULE","GET_SUB_MODULES","DELETE_SUB_MODULES_USING_ID","GET_SUB_MODULES_EDIT_DATA_USING_ID","getSubModulesSuccess","GetSubModuleEditDataUsingIDSuccess","getSubModules","updateSubModuleSuccess","SaveSubModuleSuccess","SpinnerState","AlertState","GetSubModulesData_GenratorFunction","response","console","log","Data","error","Save_SubModules_GenratorFunction","StatusCode","Status","Type","Message","RedirectPath","AfterResponseAction","deleteSubModulesUsingID_genratorFunction","id","GetSubModulesEditData_GenratorFunction","updateSubModulesaga","updateData","ID","SubModuleSaga"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/SubModulesRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { saveH_SubModules, putUpdateSubModule, get_SubModulesListData_ApiCall, deleteSubModulesUsingID_ApiCall, getSubModulesEditDataUsingID_ApiCall } from \"../../../helpers/backend_helper\";\r\nimport { POST_SUB_MODULE_ID, UPDATE_MODULE, GET_SUB_MODULES, DELETE_SUB_MODULES_USING_ID, GET_SUB_MODULES_EDIT_DATA_USING_ID } from './actionTypes'\r\nimport {\r\n  getSubModulesSuccess,\r\n  GetSubModuleEditDataUsingIDSuccess,\r\n  getSubModules,\r\n  updateSubModuleSuccess,\r\n  SaveSubModuleSuccess\r\n} from \"./actions\";\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\nimport { AlertState } from \"../../Utilites/CostumeAlert/actions\";\r\n\r\nfunction* GetSubModulesData_GenratorFunction() {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(get_SubModulesListData_ApiCall);    console.log(response)\r\n    yield put(getSubModulesSuccess(response.Data));\r\n    yield put(SpinnerState(false))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n  }\r\n}\r\n\r\nfunction* Save_SubModules_GenratorFunction({ Data }) {\r\n  console.log(\"saveH_SubModules Data\",Data)\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(saveH_SubModules, Data);\r\n    console.log(\"saveH_SubModules response\",response)\r\n    yield put(SpinnerState(false))\r\n\r\n    if (response.StatusCode === 200) {\r\n      yield put(SaveSubModuleSuccess({ Status: true }));\r\n      yield put(AlertState({ Type: 1, Status: true, Message: response.Message, RedirectPath: '/SubModulesList', AfterResponseAction: false }));\r\n    } else {\r\n      // yield put(AlertState({ Type: 4, Status: true, Message: \"error Message\", RedirectPath: false, AfterResponseAction: false }));\r\n    }\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({ Type: 3, Status: true, Message: \"  SubModules save error\", RedirectPath: false, AfterResponseAction: false }));\r\n    yield console.log(\"postModule saga error :\", error);\r\n  }\r\n}\r\n//// delete api \r\nfunction* deleteSubModulesUsingID_genratorFunction({ id }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(deleteSubModulesUsingID_ApiCall, id);\r\n    yield put(SpinnerState(false))\r\n\r\n    if (response.StatusCode === 200) {\r\n      yield put(AlertState({\r\n        Type: 1, Status: true,\r\n        Message: response.Message,\r\n        RedirectPath: false,\r\n        AfterResponseAction: getSubModules,\r\n      }))\r\n    }\r\n    else {\r\n      yield put(AlertState({\r\n        Type: 3, Status: true,\r\n        Message: \"deleteSubModulesUsingID faild\",\r\n        RedirectPath: false,\r\n        AfterResponseAction: false\r\n      }));\r\n    }\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield console.log(\"delete Module Error : \", error);\r\n  }\r\n}\r\n\r\nfunction* GetSubModulesEditData_GenratorFunction({ id }) {\r\n  try {\r\n    const response = yield call(getSubModulesEditDataUsingID_ApiCall, id);\r\n    yield put(GetSubModuleEditDataUsingIDSuccess(response));\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nfunction* updateSubModulesaga({ updateData, ID }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(putUpdateSubModule, updateData, ID);\r\n    yield put(SpinnerState(false))\r\n    yield put (GetSubModuleEditDataUsingIDSuccess({Status:\"false\"}))\r\n    \r\n    if (response.StatusCode === 200) {\r\n      yield put(updateSubModuleSuccess(({ Status: true })));\r\n      yield put(AlertState({\r\n        Type: 1, Status: true,\r\n        Message: response.Message,\r\n        RedirectPath: false,\r\n        AfterResponseAction: getSubModules,\r\n      }))\r\n    }\r\n    else {\r\n      yield put(AlertState({\r\n        Type: 3, Status: true,\r\n        Message: response.Message,\r\n        RedirectPath: false,\r\n        AfterResponseAction: false\r\n      }));\r\n    }\r\n  }\r\n  catch (error) {\r\n    yield put (GetSubModuleEditDataUsingIDSuccess({Status:\"false\"}))\r\n    yield put(SpinnerState(false))\r\n    yield console.log(\" updateModule saga error\", error);\r\n  }\r\n}\r\n\r\nfunction* SubModuleSaga() {\r\n  yield takeEvery(POST_SUB_MODULE_ID, Save_SubModules_GenratorFunction);\r\n  yield takeEvery(GET_SUB_MODULES, GetSubModulesData_GenratorFunction);\r\n  yield takeEvery(DELETE_SUB_MODULES_USING_ID, deleteSubModulesUsingID_genratorFunction);\r\n  yield takeEvery(GET_SUB_MODULES_EDIT_DATA_USING_ID, GetSubModulesEditData_GenratorFunction);\r\n  yield takeEvery(UPDATE_MODULE, updateSubModulesaga);\r\n}\r\n\r\nexport default SubModuleSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module"}