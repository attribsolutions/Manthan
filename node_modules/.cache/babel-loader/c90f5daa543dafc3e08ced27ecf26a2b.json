{"ast":null,"code":"export const formValid = (_ref, setState) => {\n  let {\n    isError,\n    required,\n    hasValid,\n    fieldLabel,\n    values\n  } = _ref;\n  let isValid = true;\n  Object.keys(required).forEach(lab => {\n    if (!hasValid[lab].valid) {\n      isError[lab] = hasValid[lab].inValidMsg;\n      isValid = false;\n      setState({\n        isError,\n        hasValid,\n        required,\n        fieldLabel,\n        values\n      });\n    }\n  });\n  return isValid;\n};\nexport const formValChange = _ref2 => {\n  let {\n    event,\n    state,\n    setState\n  } = _ref2;\n  debugger;\n  let isError = { ...state.isError\n  };\n  let hasValid = { ...state.hasValid\n  };\n  let required = { ...state.required\n  };\n  let fieldLabel = { ...state.fieldLabel\n  };\n  let values = { ...state.values\n  };\n\n  if (!(event.target === undefined)) {\n    event.preventDefault();\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n\n    switch (type) {\n      case \"text\":\n        const regExp = RegExp(hasValid[name].regExp);\n\n        if (regExp.test(value)) {\n          isError[name] = \"\";\n          hasValid[name].valid = true;\n        } else {\n          isError[name] = hasValid[name].inValidMsg;\n          hasValid[name].valid = false;\n        }\n\n        values[name] = value;\n        break;\n\n      case \"checkbox\":\n        if (!(required[name] === undefined)) {\n          if (checked) {\n            isError[name] = \"\";\n            hasValid[name].valid = true;\n            values[name] = checked;\n          } else {\n            isError[name] = hasValid[name].inValidMsg;\n            hasValid[name].valid = true;\n            values[name] = checked;\n          }\n        } else {\n          isError[name] = \"\";\n          hasValid[name].valid = true;\n          values[name] = checked;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    setState({\n      isError,\n      hasValid,\n      required,\n      fieldLabel,\n      values\n    });\n  } else {\n    const {\n      name,\n      value\n    } = event;\n    values[name] = value;\n    isError[name] = '';\n    hasValid[name].valid = true;\n    setState({\n      isError,\n      hasValid,\n      required,\n      fieldLabel,\n      values\n    });\n  }\n};\nexport function comAddPageFieldFunc(_ref3) {\n  let {\n    state,\n    setState,\n    pageFiled\n  } = _ref3;\n  var isState = { ...state\n  };\n  const values = { ...state.values\n  };\n  debugger;\n  pageFiled.forEach(ele => {\n    debugger;\n    Object.keys(values).forEach(lab => {\n      if (lab === ele.ControlID) {\n        isState.fieldLabel[lab] = ele.FieldLabel;\n        isState.hasValid[lab].regExp = ele.RegularExpression;\n        isState.hasValid[lab].inValidMsg = ele.InValidMsg;\n\n        if (ele.IsCompulsory) {\n          isState.required[lab] = true;\n        }\n      }\n    });\n  });\n  setState(isState);\n}","map":{"version":3,"names":["formValid","setState","isError","required","hasValid","fieldLabel","values","isValid","Object","keys","forEach","lab","valid","inValidMsg","formValChange","event","state","target","undefined","preventDefault","name","value","type","checked","regExp","RegExp","test","comAddPageFieldFunc","pageFiled","isState","ele","ControlID","FieldLabel","RegularExpression","InValidMsg","IsCompulsory"],"sources":["D:/GitProjects/Manthan/src/components/Common/CmponentRelatedCommonFile/validationFunction.js"],"sourcesContent":["export const formValid = ({ isError, required, hasValid, fieldLabel, values }, setState) => {\r\n\r\n    let isValid = true;\r\n\r\n    Object.keys(required).forEach((lab) => {\r\n\r\n        if (!(hasValid[lab].valid)) {\r\n            isError[lab] = hasValid[lab].inValidMsg\r\n            isValid = false\r\n            setState({ isError, hasValid, required, fieldLabel, values })\r\n        }\r\n    });\r\n    return isValid\r\n};\r\n\r\n\r\nexport const formValChange = ({ event, state, setState }) => {\r\n    debugger\r\n    let isError = { ...state.isError };\r\n    let hasValid = { ...state.hasValid };\r\n    let required = { ...state.required };\r\n    let fieldLabel = { ...state.fieldLabel };\r\n    let values = { ...state.values };\r\n\r\n    if (!(event.target === undefined)) {\r\n        event.preventDefault();\r\n        const { name, value, type, checked } = event.target;\r\n        switch (type) {\r\n            case \"text\":\r\n                const regExp = RegExp(hasValid[name].regExp)\r\n                if (regExp.test(value)) {\r\n                    isError[name] = \"\";\r\n                    hasValid[name].valid = true\r\n                }\r\n                else {\r\n                    isError[name] = hasValid[name].inValidMsg;\r\n                    hasValid[name].valid = false\r\n                }\r\n                values[name] = value\r\n                break;\r\n            case \"checkbox\":\r\n                if (!(required[name] === undefined)) {\r\n                    if (checked) {\r\n                        isError[name] = \"\";\r\n                        hasValid[name].valid = true\r\n                        values[name] = checked\r\n                    }\r\n                    else {\r\n                        isError[name] = hasValid[name].inValidMsg;\r\n                        hasValid[name].valid = true\r\n                        values[name] = checked\r\n                    }\r\n                }\r\n                else {\r\n                    isError[name] = \"\";\r\n                    hasValid[name].valid = true\r\n                    values[name] = checked\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n                \r\n        setState({ isError, hasValid, required, fieldLabel, values })\r\n    }\r\n    else {\r\n        const { name, value } = event\r\n        values[name] = value\r\n        isError[name] = ''\r\n        hasValid[name].valid = true\r\n        setState({\r\n            isError, hasValid, required, fieldLabel, values\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport function comAddPageFieldFunc({ state, setState, pageFiled }) {\r\n    var isState = { ...state }\r\n    const values = { ...state.values }\r\n    debugger\r\n    pageFiled.forEach(ele => {\r\n        debugger\r\n        Object.keys(values).forEach(lab => {\r\n            if (lab === ele.ControlID) {\r\n                isState.fieldLabel[lab] = ele.FieldLabel\r\n                isState.hasValid[lab].regExp = ele.RegularExpression\r\n                isState.hasValid[lab].inValidMsg = ele.InValidMsg\r\n                if (ele.IsCompulsory) {\r\n                    isState.required[lab] = true\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    setState(isState)\r\n\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}