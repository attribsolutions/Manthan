{"ast":null,"code":"import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useSelector}from'react-redux';import'../../../../assets/searchBox/searchBox.scss';import{MySearch}from'./MySearch';import{jsx as _jsx}from\"react/jsx-runtime\";export var MainSearchBox=function MainSearchBox(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),searchRoleData=_useState2[0],setSearchRoleData=_useState2[1];// const  RoleAccessData=demoRolleAcess\nvar _useSelector=useSelector(function(state){return{RoleAccessData:state.Login.RoleData,searchProps:state.BreadcrumbReducer.searchProps};}),RoleAccessData=_useSelector.RoleAccessData,searchProps=_useSelector.searchProps;useEffect(function(){var SearchRoleData_initial=[];RoleAccessData.map(function(i){i.ModuleData.map(function(index){SearchRoleData_initial.push(index);});});setSearchRoleData(SearchRoleData_initial);},[RoleAccessData]);useEffect(function(){function autocomplete(inp,arr){/*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/var currentFocus;/*execute a function when someone writes in the text field:*/inp.addEventListener(\"input\",function(e){var a,b,i,val=this.value;/*close any already open lists of autocompleted values*/closeAllLists();// if (!val) { return false; }\n// var a = input.value\nif(val[0]===\"/\"){val=val.substring(1);}else{return false;}if(!val){return false;}currentFocus=-1;/*create a DIV element that will contain the items (values):*/a=document.createElement(\"DIV\");a.setAttribute(\"id\",this.id+\"autocomplete-list\");a.setAttribute(\"class\",\"autocomplete-items\");/*append the DIV element as a child of the autocomplete container:*/this.parentNode.appendChild(a);/*for each item in the array...*/for(i=0;i<arr.length;i++){/*check if the item starts with the same letters as the text field value:*/if(arr[i].Name.substr(0,val.length).toUpperCase()==val.toUpperCase()){/*create a DIV element for each matching element:*/b=document.createElement(\"DIV\");/*make the matching letters bold:*/b.innerHTML=\"<strong>\"+arr[i].Name.substr(0,val.length)+\"</strong>\";b.innerHTML+=arr[i].Name.substr(val.length);/*insert a input field that will hold the current array item's value:*/b.innerHTML+=\"<input type='hidden' id='\"+i+\"' value='\"+arr[i].Name+\"'>\";//  var ActualPagePath=arr[i].ActualPagePath\n// alert(ActualPagePath)\n/*execute a function when someone clicks on the item value (DIV element):*/b.addEventListener(\"click\",function(e){/*insert the value for the autocomplete text field:*/inp.value=this.getElementsByTagName(\"input\")[0].value;var input_id=this.getElementsByTagName(\"input\")[0].id;// alert(input_id)\nvar ActualPagePath=arr[input_id].ActualPagePath;window.location.href=ActualPagePath;// window.open(ActualPagePath)\n/*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/closeAllLists();});a.appendChild(b);}}});/*execute a function presses a key on the keyboard:*/inp.addEventListener(\"keydown\",function(e){// debugger\nvar x=document.getElementById(this.id+\"autocomplete-list\");if(x)x=x.getElementsByTagName(\"div\");if(e.keyCode==40){/*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/currentFocus++;/*and and make the current item more visible:*/addActive(x);}else if(e.keyCode==38){//up\n/*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/currentFocus--;/*and and make the current item more visible:*/addActive(x);}else if(e.keyCode==13){/*If the ENTER key is pressed, prevent the form from being submitted,*/e.preventDefault();if(currentFocus>-1){/*and simulate a click on the \"active\" item:*/if(x)x[currentFocus].click();}}});function addActive(x){/*a function to classify an item as \"active\":*/if(!x)return false;/*start by removing the \"active\" class on all items:*/removeActive(x);if(currentFocus>=x.length)currentFocus=0;if(currentFocus<0)currentFocus=x.length-1;/*add class \"autocomplete-active\":*/x[currentFocus].classList.add(\"autocomplete-active\");}function removeActive(x){/*a function to remove the \"active\" class from all autocomplete items:*/for(var i=0;i<x.length;i++){x[i].classList.remove(\"autocomplete-active\");}}function closeAllLists(elmnt){/*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/var x=document.getElementsByClassName(\"autocomplete-items\");for(var i=0;i<x.length;i++){if(elmnt!=x[i]&&elmnt!=inp){x[i].parentNode.removeChild(x[i]);}}}/*execute a function when someone clicks in the document:*/document.addEventListener(\"click\",function(e){closeAllLists(e.target);});}/*initiate the autocomplete function on the \"myInput\" element, and pass along the countries array as possible autocomplete values:*/autocomplete(document.getElementById(\"myInput\"),searchRoleData);},[searchRoleData]);// searchProps2 = searchProps\nreturn/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(MySearch,{})});};","map":{"version":3,"names":["React","useEffect","useState","useSelector","MySearch","MainSearchBox","searchRoleData","setSearchRoleData","state","RoleAccessData","Login","RoleData","searchProps","BreadcrumbReducer","SearchRoleData_initial","map","i","ModuleData","index","push","autocomplete","inp","arr","currentFocus","addEventListener","e","a","b","val","value","closeAllLists","substring","document","createElement","setAttribute","id","parentNode","appendChild","length","Name","substr","toUpperCase","innerHTML","getElementsByTagName","input_id","ActualPagePath","window","location","href","x","getElementById","keyCode","addActive","preventDefault","click","removeActive","classList","add","remove","elmnt","getElementsByClassName","removeChild","target"],"sources":["D:/GitProjects/Manthan/src/components/Common/CmponentRelatedCommonFile/SearchBox/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport '../../../../assets/searchBox/searchBox.scss'\r\nimport { MySearch } from './MySearch';\r\n\r\nexport const MainSearchBox = () => {\r\n\r\n    const [searchRoleData, setSearchRoleData] = useState([])\r\n    // const  RoleAccessData=demoRolleAcess\r\n\r\n    const { RoleAccessData, searchProps } = useSelector((state) => ({\r\n        RoleAccessData: state.Login.RoleData,\r\n        searchProps: state.BreadcrumbReducer.searchProps,\r\n    }));\r\n\r\n    useEffect(() => {\r\n\r\n        let SearchRoleData_initial = []\r\n\r\n        RoleAccessData.map((i) => {\r\n            i.ModuleData.map((index) => {\r\n                SearchRoleData_initial.push(index)\r\n            })\r\n        })\r\n        setSearchRoleData(SearchRoleData_initial)\r\n    }, [RoleAccessData])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        function autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n\r\n            inp.addEventListener(\"input\", function (e) {\r\n\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n\r\n                // if (!val) { return false; }\r\n                // var a = input.value\r\n\r\n                if (val[0] === \"/\") { val = val.substring(1); }\r\n                else { return false }\r\n\r\n                if (!val) { return false; }\r\n\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                /*for each item in the array...*/\r\n                for (i = 0; i < arr.length; i++) {\r\n                    /*check if the item starts with the same letters as the text field value:*/\r\n                    if (arr[i].Name.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + arr[i].Name.substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += arr[i].Name.substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += \"<input type='hidden' id='\" + i + \"' value='\" + arr[i].Name + \"'>\";\r\n                        //  var ActualPagePath=arr[i].ActualPagePath\r\n                        // alert(ActualPagePath)\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                            var input_id = this.getElementsByTagName(\"input\")[0].id;\r\n\r\n                            // alert(input_id)\r\n                            var ActualPagePath = arr[input_id].ActualPagePath\r\n                            window.location.href = (ActualPagePath)\r\n                            // window.open(ActualPagePath)\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                // debugger\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode == 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].click();\r\n                    }\r\n                }\r\n            });\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt != x[i] && elmnt != inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                closeAllLists(e.target);\r\n            });\r\n        }\r\n\r\n\r\n        /*initiate the autocomplete function on the \"myInput\" element, and pass along the countries array as possible autocomplete values:*/\r\n        autocomplete(document.getElementById(\"myInput\"), searchRoleData);\r\n\r\n    }, [searchRoleData])\r\n\r\n    // searchProps2 = searchProps\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MySearch />\r\n        </React.Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}