{"ast":null,"code":"import _objectSpread from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import{Card,CardBody,CardHeader,Col,Container,FormGroup,Input,Label,Row}from\"reactstrap\";import{MetaTags}from\"react-meta-tags\";import{BreadcrumbShow}from\"../../../store/actions\";import{AlertState,commonPageField,commonPageFieldSuccess}from\"../../../store/actions\";import{useDispatch,useSelector}from\"react-redux\";import{PostMethod_ForCompanyGroupMasterSuccess,editCompanyGroupTypeSuccess,updateCompanyGroupTypeID,PostMethodForCompanyGroupMaster,getMethodForCompanyGroupList}from\"../../../store/Administrator/CompanyGroupRedux/action\";import{useHistory}from\"react-router-dom\";import{comAddPageFieldFunc,formValid,initialFiledFunc,onChangeText}from\"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";import{SaveButton}from\"../../../components/CommonSaveButton\";import{COMPANYGROUP_lIST}from\"../../../routes/route_url\";import{UPDATE_COMPANYGROUP_TYPE_ID_SUCCESS}from\"../../../store/Administrator/CompanyGroupRedux/actionType\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var CompanyGroupMaster=function CompanyGroupMaster(props){var formRef=useRef(null);var dispatch=useDispatch();var history=useHistory();var _useState=useState(),_useState2=_slicedToArray(_useState,2),pageMode=_useState2[0],setPageMode=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),userPageAccessState=_useState4[0],setUserPageAccessState=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modalCss=_useState6[0],setModalCss=_useState6[1];{/** Dyanamic Page access state and OnChange function */}var initialFiled={id:\"\",Name:\"\",IsSCM:\"\"};var _useState7=useState(initialFiledFunc(initialFiled)),_useState8=_slicedToArray(_useState7,2),state=_useState8[0],setState=_useState8[1];//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{postMsg:state.CompanyGroupReducer.PostDataMessage,updateMsg:state.CompanyGroupReducer.updateMessage,userAccess:state.Login.RoleAccessUpdateData,pageField:state.CommonPageFieldReducer.pageField};}),postMsg=_useSelector.postMsg,updateMsg=_useSelector.updateMsg,pageField=_useSelector.pageField,userAccess=_useSelector.userAccess;var location=_objectSpread({},history.location);var hasShowloction=location.hasOwnProperty(\"editValue\");var hasShowModal=props.hasOwnProperty(\"editValue\");useEffect(function(){dispatch(commonPageFieldSuccess(null));dispatch(commonPageField(32));},[]);// userAccess useEffect\nuseEffect(function(){var userAcc=null;var locationPath=location.pathname;if(hasShowModal){locationPath=props.masterPath;};userAcc=userAccess.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(userAcc){setUserPageAccessState(userAcc);};},[userAccess]);// This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\nuseEffect(function(){// if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\nif(hasShowloction||hasShowModal){var hasEditVal=null;if(hasShowloction){setPageMode(location.pageMode);hasEditVal=location.editValue;}else if(hasShowModal){hasEditVal=props.editValue;setPageMode(props.pageMode);setModalCss(true);}if(hasEditVal){var _hasEditVal=hasEditVal,id=_hasEditVal.id,Name=_hasEditVal.Name,IsSCM=_hasEditVal.IsSCM;var _state=_objectSpread({},state),_values=_state.values,_fieldLabel=_state.fieldLabel,hasValid=_state.hasValid,required=_state.required,_isError=_state.isError;_values.Name=Name;_values.IsSCM=IsSCM;hasValid.Name.valid=true;hasValid.IsSCM.valid=true;_values.id=id;setState({values:_values,fieldLabel:_fieldLabel,hasValid:hasValid,required:required,isError:_isError});dispatch(BreadcrumbShow(hasEditVal.Name));}dispatch(editCompanyGroupTypeSuccess({Status:false}));}},[]);useEffect(function(){if(postMsg.Status===true&&postMsg.StatusCode===200){dispatch(PostMethod_ForCompanyGroupMasterSuccess({Status:false}));formRef.current.reset();if(pageMode===\"dropdownAdd\"){dispatch(AlertState({Type:1,Status:true,Message:postMsg.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:postMsg.Message,RedirectPath:COMPANYGROUP_lIST}));}}else if(postMsg.Status===true){dispatch(PostMethod_ForCompanyGroupMasterSuccess({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(postMsg.Message),RedirectPath:false,AfterResponseAction:false}));}},[postMsg]);useEffect(function(){if(updateMsg.Status===true&&updateMsg.StatusCode===200&&!modalCss){history.push({pathname:COMPANYGROUP_lIST});}else if(updateMsg.Status===true&&!modalCss){dispatch(UPDATE_COMPANYGROUP_TYPE_ID_SUCCESS({Status:false}));dispatch(AlertState({Type:3,Status:true,Message:JSON.stringify(updateMsg.Message)}));}},[updateMsg,modalCss]);useEffect(function(){if(pageField){var fieldArr=pageField.PageFieldMaster;comAddPageFieldFunc({state:state,setState:setState,fieldArr:fieldArr});}},[pageField]);var values=_objectSpread({},state.values);var isError=state.isError;var fieldLabel=state.fieldLabel;var formSubmitHandler=function formSubmitHandler(event){event.preventDefault();if(formValid(state,setState)){var jsonBody=JSON.stringify({Name:values.Name,IsSCM:values.IsSCM,CreatedBy:1,UpdatedBy:1});if(pageMode===\"edit\"){dispatch(updateCompanyGroupTypeID(jsonBody,values.id));}else{dispatch(PostMethodForCompanyGroupMaster(jsonBody));}}};// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(modalCss||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsxs(\"title\",{children:[userPageAccessState.PageHeading,\" | FoodERP-React FrontEnd\"]})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formSubmitHandler,ref:formRef,noValidate:true,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[\" \",fieldLabel.Name]}),/*#__PURE__*/_jsx(Input,{name:\"Name\",id:\"txtName\",className:isError.Name.length>0?\"is-invalid form-control\":\"form-control\",type:\"text\",value:values.Name,placeholder:\"Please Enter Name\",autoComplete:\"off\",onChange:function onChange(event){onChangeText({event:event,state:state,setState:setState});dispatch(BreadcrumbShow(event.target.value));}}),isError.Name.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"invalid-feedback\",children:isError.Name})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(FormGroup,{className:\"mb-2 col col-sm-5\",children:/*#__PURE__*/_jsxs(Row,{className:\"justify-content-md-left\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"horizontal-firstname-input\",className:\"col-sm-3 col-form-label\",children:fieldLabel.IsSCM}),/*#__PURE__*/_jsx(Col,{md:2,style:{marginTop:'9px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"form-check form-switch form-switch-md mb-3\",children:/*#__PURE__*/_jsx(Input,{type:\"checkbox\",className:\"form-check-input\",checked:values.IsSCM,name:\"IsSCM\",onChange:function onChange(event){return onChangeText({event:event,state:state,setState:setState});}})})})]})})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:SaveButton({pageMode:pageMode,userPageAccessState:userPageAccessState,module:\"CompanyGroupMaster\"})})})})]})})})})})})})]})]})})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default CompanyGroupMaster;","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","MetaTags","BreadcrumbShow","AlertState","commonPageField","commonPageFieldSuccess","useDispatch","useSelector","PostMethod_ForCompanyGroupMasterSuccess","editCompanyGroupTypeSuccess","updateCompanyGroupTypeID","PostMethodForCompanyGroupMaster","getMethodForCompanyGroupList","useHistory","comAddPageFieldFunc","formValid","initialFiledFunc","onChangeText","SaveButton","COMPANYGROUP_lIST","UPDATE_COMPANYGROUP_TYPE_ID_SUCCESS","CompanyGroupMaster","props","formRef","dispatch","history","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","modalCss","setModalCss","initialFiled","id","Name","IsSCM","state","setState","postMsg","CompanyGroupReducer","PostDataMessage","updateMsg","updateMessage","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","values","fieldLabel","hasValid","required","isError","valid","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","push","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","CreatedBy","UpdatedBy","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","value","module"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/CompanyGroupPages/CompanyGroupMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow } from \"../../../store/actions\";\r\nimport {\r\n    AlertState,\r\n    commonPageField,\r\n    commonPageFieldSuccess\r\n} from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    PostMethod_ForCompanyGroupMasterSuccess,\r\n    editCompanyGroupTypeSuccess,\r\n    updateCompanyGroupTypeID,\r\n    PostMethodForCompanyGroupMaster,\r\n    getMethodForCompanyGroupList\r\n} from \"../../../store/Administrator/CompanyGroupRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    initialFiledFunc,\r\n    onChangeText\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\r\nimport { COMPANYGROUP_lIST } from \"../../../routes/route_url\";\r\nimport { UPDATE_COMPANYGROUP_TYPE_ID_SUCCESS } from \"../../../store/Administrator/CompanyGroupRedux/actionType\";\r\n\r\n\r\nconst CompanyGroupMaster = (props) => {\r\n\r\n    const formRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const [pageMode, setPageMode] = useState();\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n    const [modalCss, setModalCss] = useState(false);\r\n\r\n\r\n    {/** Dyanamic Page access state and OnChange function */ }\r\n    const initialFiled = {\r\n        id: \"\",\r\n        Name: \"\",\r\n        IsSCM: \"\"\r\n      }\r\n    \r\n    const [state, setState] = useState(initialFiledFunc(initialFiled))\r\n\r\n   \r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { postMsg, updateMsg ,pageField, userAccess } = useSelector((state) => ({\r\n        postMsg: state.CompanyGroupReducer.PostDataMessage,\r\n        updateMsg: state.CompanyGroupReducer.updateMessage,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n\r\n    }));\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(32))\r\n    }, []);\r\n\r\n\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n                const { id, Name, IsSCM } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n                values.Name = Name;\r\n                values.IsSCM = IsSCM;\r\n                hasValid.Name.valid = true;\r\n                hasValid.IsSCM.valid = true;\r\n                values.id = id\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(BreadcrumbShow(hasEditVal.Name))\r\n            }\r\n            dispatch(editCompanyGroupTypeSuccess({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n\r\n            dispatch(PostMethod_ForCompanyGroupMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: COMPANYGROUP_lIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(PostMethod_ForCompanyGroupMasterSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMsg.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n        if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\r\n            history.push({\r\n                pathname: COMPANYGROUP_lIST,\r\n            })\r\n        } else if (updateMsg.Status === true && !modalCss) {\r\n            dispatch(UPDATE_COMPANYGROUP_TYPE_ID_SUCCESS({ Status: false }));\r\n            dispatch(\r\n                AlertState({\r\n                    Type: 3,\r\n                    Status: true,\r\n                    Message: JSON.stringify(updateMsg.Message),\r\n                })\r\n            );\r\n        }\r\n    }, [updateMsg, modalCss]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                IsSCM: values.IsSCM,\r\n                CreatedBy: 1,\r\n                UpdatedBy: 1\r\n            });\r\n\r\n            if (pageMode === \"edit\") {\r\n                dispatch(updateCompanyGroupTypeID(jsonBody, values.id));\r\n            }\r\n            else {\r\n                dispatch(PostMethodForCompanyGroupMaster(jsonBody));\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\"> {fieldLabel.Name}</Label>\r\n                                                            <Input\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                type=\"text\"\r\n                                                                value={values.Name}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete='off'\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-5\">\r\n                                                                <Row className=\"justify-content-md-left\">\r\n                                                                    <Label htmlFor=\"horizontal-firstname-input\" className=\"col-sm-3 col-form-label\">{fieldLabel.IsSCM}</Label>\r\n                                                                    <Col md={2} style={{ marginTop: '9px' }} >\r\n                                                                        <div className=\"form-check form-switch form-switch-md mb-3\">\r\n                                                                            <Input type=\"checkbox\" className=\"form-check-input\"\r\n                                                                                checked={values.IsSCM}\r\n                                                                                name=\"IsSCM\"\r\n                                                                                onChange={(event) => onChangeText({ event, state, setState })}\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    {SaveButton({ pageMode, userPageAccessState, module: \"CompanyGroupMaster\" })}\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default CompanyGroupMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}