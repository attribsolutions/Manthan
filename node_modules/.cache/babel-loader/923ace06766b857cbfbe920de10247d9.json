{"ast":null,"code":"import _objectSpread from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import{Card,CardBody,CardHeader,Col,Container,FormGroup,Input,Label,Row}from\"reactstrap\";import{AvField,AvForm}from\"availity-reactstrap-validation\";import Select from\"react-select\";import{MetaTags}from\"react-meta-tags\";import{BreadcrumbShow,commonPageFieldListSuccess,commonPageFieldSuccess}from\"../../../store/actions\";import{useDispatch,useSelector}from\"react-redux\";import{AlertState,commonPageField}from\"../../../store/actions\";import{useHistory}from\"react-router-dom\";import{comAddPageFieldFunc,formValid,initialFiledFunc,onChangeText}from\"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";import{editGroupTypeIdSuccess,getGroupTypeslistSuccess,PostGroupTypeSubmit,PostGroupTypeSubmitSuccess,updateGroupTypeID,updateGroupTypeIDSuccess}from\"../../../store/Administrator/GroupTypeRedux/action\";import{GROUPTYPE_lIST}from\"../../../routes/route_url\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GroupTypeMaster=function GroupTypeMaster(props){var dispatch=useDispatch();var history=useHistory();var editDataGetingFromList=props.state;var pageModeProps=props.pageMode;console.log(\"editDataGetingFromList\",editDataGetingFromList);var formRef=useRef(null);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),EditData=_useState2[0],setEditData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modalCss=_useState4[0],setModalCss=_useState4[1];var _useState5=useState(\"save\"),_useState6=_slicedToArray(_useState5,2),pageMode=_useState6[0],setPageMode=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),userPageAccessState=_useState8[0],setUserPageAccessState=_useState8[1];var initialFiled={id:\"\",Name:\"\"};var _useState9=useState(initialFiledFunc(initialFiled)),_useState10=_slicedToArray(_useState9,2),state=_useState10[0],setState=_useState10[1];//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{postMsg:state.GroupTypeReducer.PostData,updateMsg:state.GroupTypeReducer.updateMessage,userAccess:state.Login.RoleAccessUpdateData,pageField:state.CommonPageFieldReducer.pageField};}),postMsg=_useSelector.postMsg,updateMsg=_useSelector.updateMsg,pageField=_useSelector.pageField,userAccess=_useSelector.userAccess;useEffect(function(){dispatch(commonPageFieldSuccess(null));dispatch(commonPageField(105));},[]);var location=_objectSpread({},history.location);var hasShowloction=location.hasOwnProperty(\"editValue\");var hasShowModal=props.hasOwnProperty(\"editValue\");// userAccess useEffect\nuseEffect(function(){var userAcc=null;var locationPath=location.pathname;if(hasShowModal){locationPath=props.masterPath;};userAcc=userAccess.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(userAcc){setUserPageAccessState(userAcc);};},[userAccess]);// This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\nuseEffect(function(){if(hasShowloction||hasShowModal){var hasEditVal=null;if(hasShowloction){setPageMode(location.pageMode);hasEditVal=location.editValue;}else if(hasShowModal){hasEditVal=props.editValue;setPageMode(props.pageMode);setModalCss(true);}if(hasEditVal){setEditData(hasEditVal);var _hasEditVal=hasEditVal,id=_hasEditVal.id,Name=_hasEditVal.Name;var _state=_objectSpread({},state),_values=_state.values,_fieldLabel=_state.fieldLabel,hasValid=_state.hasValid,required=_state.required,_isError=_state.isError;hasValid.Name.valid=true;_values.id=id;_values.Name=Name;setState({values:_values,fieldLabel:_fieldLabel,hasValid:hasValid,required:required,isError:_isError});dispatch(editGroupTypeIdSuccess({Status:false}));dispatch(BreadcrumbShow(hasEditVal.GroupTypeMaster));}}},[]);useEffect(function(){if(postMsg.Status===true&&postMsg.StatusCode===200){dispatch(PostGroupTypeSubmitSuccess({Status:false}));formRef.current.reset();if(pageMode===\"dropdownAdd\"){dispatch(AlertState({Type:1,Status:true,Message:postMsg.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:postMsg.Message,RedirectPath:GROUPTYPE_lIST}));}}else if(postMsg.Status===true){dispatch(getGroupTypeslistSuccess({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(postMessage.Message),RedirectPath:false,AfterResponseAction:false}));}},[postMsg]);useEffect(function(){if(updateMsg.Status===true&&updateMsg.StatusCode===200&&!modalCss){history.push({pathname:GROUPTYPE_lIST});}else if(updateMsg.Status===true&&!modalCss){dispatch(updateGroupTypeIDSuccess({Status:false}));dispatch(AlertState({Type:3,Status:true,Message:JSON.stringify(updateMsg.Message)}));}},[updateMsg,modalCss]);useEffect(function(){if(pageField){var fieldArr=pageField.PageFieldMaster;comAddPageFieldFunc({state:state,setState:setState,fieldArr:fieldArr});// new change\n}},[pageField]);var values=_objectSpread({},state.values);var isError=state.isError;var fieldLabel=state.fieldLabel;var formSubmitHandler=function formSubmitHandler(event){event.preventDefault();if(formValid(state,setState)){debugger;var jsonBody=JSON.stringify({Name:values.Name,CreatedBy:1,CreatedOn:\"0002-10-03T12:48:14.910491\",UpdatedBy:1,UpdatedOn:\"0002-10-03T12:48:14.910491\"});if(pageMode==='edit'){dispatch(updateGroupTypeID(jsonBody,EditData.id));}else{dispatch(PostGroupTypeSubmit(jsonBody));console.log(\"jsonBody\",jsonBody);}}};var IsEditMode_Css='';if(modalCss||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsx(\"title\",{children:\"GroupTypeMaster | FoodERP-React FrontEnd\"})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formSubmitHandler,ref:formRef,noValidate:true,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[fieldLabel.Name,\" \"]}),/*#__PURE__*/_jsx(Input,{id:\"txtName\",name:\"Name\",type:\"text\",value:values.Name,className:isError.Name.length>0?\"is-invalid form-control\":\"form-control\",placeholder:\"Please Enter Name\",onChange:function onChange(event){onChangeText({event:event,state:state,setState:setState});dispatch(BreadcrumbShow(event.target.value));}}),isError.Name.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"invalid-feedback\",children:isError.Name})]}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:/*#__PURE__*/_jsx(\"div\",{children:pageMode===\"edit\"?userPageAccessState.RoleAccess_IsEdit?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Update Party Type\",className:\"btn btn-success w-md mt-3\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-edit me-2\"}),\"Update\"]}):/*#__PURE__*/_jsx(_Fragment,{}):userPageAccessState.RoleAccess_IsSave?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Save Party Type\",className:\"btn btn-primary w-md mt-3 \",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save me-2\"}),\" Save\"]}):/*#__PURE__*/_jsx(_Fragment,{})})})})})]})})})})})})})]})]})})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default GroupTypeMaster;","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","commonPageFieldListSuccess","commonPageFieldSuccess","useDispatch","useSelector","AlertState","commonPageField","useHistory","comAddPageFieldFunc","formValid","initialFiledFunc","onChangeText","editGroupTypeIdSuccess","getGroupTypeslistSuccess","PostGroupTypeSubmit","PostGroupTypeSubmitSuccess","updateGroupTypeID","updateGroupTypeIDSuccess","GROUPTYPE_lIST","GroupTypeMaster","props","dispatch","history","editDataGetingFromList","state","pageModeProps","pageMode","console","log","formRef","EditData","setEditData","modalCss","setModalCss","setPageMode","userPageAccessState","setUserPageAccessState","initialFiled","id","Name","setState","postMsg","GroupTypeReducer","PostData","updateMsg","updateMessage","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","values","fieldLabel","hasValid","required","isError","valid","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","push","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","CreatedBy","CreatedOn","UpdatedBy","UpdatedOn","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","value","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/GroupTypePage/GroupTypeMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageFieldListSuccess, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    initialFiledFunc,\r\n    onChangeText,\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\nimport {\r\n    editGroupTypeIdSuccess,\r\n    getGroupTypeslistSuccess,\r\n    PostGroupTypeSubmit,\r\n    PostGroupTypeSubmitSuccess,\r\n    updateGroupTypeID,\r\n    updateGroupTypeIDSuccess\r\n} from \"../../../store/Administrator/GroupTypeRedux/action\";\r\nimport {GROUPTYPE_lIST } from \"../../../routes/route_url\";\r\n\r\nconst GroupTypeMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    let editDataGetingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n    console.log(\"editDataGetingFromList\", editDataGetingFromList)\r\n\r\n    const formRef = useRef(null);\r\n    const [EditData, setEditData] = useState({});\r\n    const [modalCss, setModalCss] = useState(false);\r\n    const [pageMode, setPageMode] = useState(\"save\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n    const initialFiled = {\r\n        id:\"\",\r\n        Name: \"\",\r\n      }\r\n    \r\n    const [state, setState] = useState(initialFiledFunc(initialFiled))\r\n   \r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        postMsg,\r\n        updateMsg,\r\n        pageField,\r\n        userAccess\r\n    } = useSelector((state) => ({\r\n        postMsg: state.GroupTypeReducer.PostData,\r\n        updateMsg: state.GroupTypeReducer.updateMessage,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(105))\r\n    }, []);\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n                setEditData(hasEditVal);\r\n                const {id, Name } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n\r\n                hasValid.Name.valid = true;\r\n                \r\n                values.id = id\r\n                values.Name = Name;\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(editGroupTypeIdSuccess({ Status: false }))\r\n                dispatch(BreadcrumbShow(hasEditVal.GroupTypeMaster))\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if ((postMsg.Status === true) && (postMsg.StatusCode === 200)) {\r\n            dispatch(PostGroupTypeSubmitSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: postMsg.Message,\r\n                    RedirectPath: GROUPTYPE_lIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (postMsg.Status === true) {\r\n            dispatch(getGroupTypeslistSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [postMsg])\r\n\r\n    useEffect(() => {\r\n        if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\r\n            history.push({\r\n                pathname: GROUPTYPE_lIST,\r\n            })\r\n        } else if (updateMsg.Status === true && !modalCss) {\r\n            dispatch(updateGroupTypeIDSuccess({ Status: false }));\r\n            dispatch(\r\n                AlertState({\r\n                    Type: 3,\r\n                    Status: true,\r\n                    Message: JSON.stringify(updateMsg.Message),\r\n                })\r\n            );\r\n        }\r\n    }, [updateMsg, modalCss]);\r\n\r\n    useEffect(() => {\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })// new change\r\n        }\r\n    }, [pageField])\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n    const formSubmitHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            debugger\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                CreatedBy: 1,\r\n                CreatedOn: \"0002-10-03T12:48:14.910491\",\r\n                UpdatedBy: 1,\r\n                UpdatedOn: \"0002-10-03T12:48:14.910491\"\r\n\r\n            });\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateGroupTypeID(jsonBody, EditData.id));\r\n            }\r\n\r\n            else {\r\n                dispatch(PostGroupTypeSubmit(jsonBody));\r\n                console.log(\"jsonBody\", jsonBody)\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>GroupTypeMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n                                                            <Input\r\n                                                                id=\"txtName\"\r\n                                                                name=\"Name\"\r\n                                                                type=\"text\"\r\n                                                                value={values.Name}\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default GroupTypeMaster\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}