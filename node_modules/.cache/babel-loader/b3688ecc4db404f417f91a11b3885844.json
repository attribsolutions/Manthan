{"ast":null,"code":"import reportHederPng from \"../../assets/images/reportHeder.png\";\nimport upi_qr_code from \"../../assets/images/upi_qr_code.png\";\nimport * as table from './TableData';\nexport const pageBorder = doc => {};\nexport const pageHeder = doc => {\n  doc.addImage(reportHederPng, 'PNG', 35, 20, 80, 45);\n  doc.addFont(\"Arial\", 'Normal');\n  doc.setFont('Arial'); // doc.setFont('Courier')\n\n  doc.setFontSize(20);\n  doc.text(' Tax Invoice', 460, 50);\n};\nexport const reportHeder1 = (doc, data) => {\n  doc.setFont('Tahoma');\n  doc.setFontSize(10);\n  doc.setFont(undefined, 'bold');\n  doc.text(\"Billed by\", 35, 80);\n  doc.text('Billed to', 235, 80);\n  var options3 = {\n    // tableLineColor: [189, 195, 199],\n    // tableLineWidth: 0.75,\n    margin: {\n      top: 40,\n      left: 30,\n      right: 22 // bottom:100 \n\n    },\n    showHead: 'always',\n    theme: 'plain',\n    styles: {\n      // overflowColumns: false ,\n      overflow: 'linebreak',\n      fontSize: 8,\n      height: 0\n    },\n    bodyStyles: {\n      columnWidth: 'wrap',\n      textColor: [30, 30, 30],\n      cellPadding: 3,\n      fontSize: 8,\n      fontStyle: 'bold',\n      lineColor: [0, 0, 0]\n    },\n    columnStyles: {\n      0: {\n        valign: \"top\",\n        columnWidth: 200,\n        halign: 'lfet'\n      },\n      1: {\n        columnWidth: 200,\n        halign: 'left'\n      },\n      1: {\n        columnWidth: 200,\n        halign: 'left'\n      }\n    },\n    tableLineColor: \"black\",\n    startY: doc.autoTableEndPosY() + 85 // 45,\n\n  };\n  doc.autoTable(table.PageHedercolumns, table.ReportHederRows(data), options3);\n};\nexport const reportHederR = (doc, data) => {\n  doc.line(285, 15, 30, 15); //horizontal line 1\n\n  doc.line(285, 45, 30, 45); //horizontal bottom\n\n  doc.line(30, 45, 30, 15); //vertical left\n\n  doc.line(285, 45, 285, 15); //vertical right \n\n  doc.line(285, 15, 573, 15); //horizontal line 1\n\n  doc.line(285, 45, 575, 45); //horizontal bottom\n\n  doc.line(285, 45, 285, 15); //vertical left\n\n  doc.line(575, 45, 575, 15); //vertical right \n\n  doc.setFont('Tahoma', 'Normal');\n  doc.setFontSize(9); // doc.text(`GSTIN: ${data.GSTIN}`, 33, 25)\n  // doc.text('PAN:AAAFC5288N', 33, 35)\n  // doc.text(`Invoice Number:${data.InvoiceID}`, 288, 25)\n  // doc.text(`Invoice Date: ${data.InvoiceDate}`, 288, 35)\n};\nexport const reportHeder2 = (doc, data) => {};\nexport const reportFooter = (doc, data) => {\n  var optionsTable2 = {\n    margin: {\n      top: 45,\n      left: 35,\n      right: 35 // bottom:100 \n\n    },\n    theme: 'grid',\n    headerStyles: {\n      //columnWidth: 'wrap',\n      cellPadding: 4,\n      lineWidth: 1,\n      valign: 'top',\n      fontStyle: 'bold',\n      halign: 'left',\n      //'center' or 'right'\n      fillColor: \"white\",\n      textColor: [0, 0, 0],\n      //Black     \n      // textColor: [255, 255, 255], //White     \n      // fillColor: \"white\"\n      fontSize: 8,\n      rowHeight: 10,\n      lineColor: [0, 0, 0]\n    },\n    bodyStyles: {\n      textColor: [30, 30, 30],\n      cellPadding: 3,\n      fontSize: 7,\n      fontStyle: 'bold',\n      lineColor: [0, 0, 0]\n    },\n    columnStyles: {\n      0: {\n        valign: \"top\",\n        columnWidth: 140 // fontStyle: 'bold',\n\n      },\n      1: {\n        columnWidth: 50,\n        // fontStyle: 'bold',\n        halign: 'right' // fontStyle: 'bold',\n        //  height:50,\n\n      },\n      2: {\n        columnWidth: 40,\n        // fontStyle: 'bold',\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      3: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      4: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      5: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      6: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      7: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      8: {\n        // columnWidth: 40,\n        fontStyle: 'bold',\n        halign: 'center'\n      }\n    },\n    startY: doc.autoTableEndPosY() // 45,\n\n  };\n  const optionsTable3 = {\n    margin: {\n      top: 45,\n      left: 35,\n      right: 200 // bottom:100 \n\n    },\n    showHead: 'never',\n    theme: 'plain',\n    headerStyles: {\n      // columnWidth: 'wrap',\n      cellPadding: 1,\n      lineWidth: 0,\n      valign: 'top',\n      fontStyle: 'bold',\n      halign: 'left',\n      //'center' or 'right'\n      fillColor: \"white\",\n      textColor: [0, 0, 0],\n      //Black     \n      // textColor: [255, 255, 255], //White     \n      // fillColor: \"white\"\n      fontSize: 8,\n      rowHeight: 10,\n      lineColor: [0, 0, 0]\n    },\n    bodyStyles: {\n      columnWidth: 'wrap',\n      textColor: [30, 30, 30],\n      cellPadding: 1,\n      fontSize: 7,\n      fontStyle: 'bold',\n      lineColor: [0, 0, 0]\n    },\n    columnStyles: {\n      0: {\n        valign: \"top\",\n        columnWidth: 280 // fontStyle: 'bold',\n\n      }\n    },\n    didParseCell: function (cell, data) {\n      if (cell.row.index === 0) {\n        cell.cell.styles.fontSize = 7;\n        cell.cell.styles.lineColor = 'gray';\n        cell.cell.styles.lineWidth = 0.5;\n      }\n    },\n    startY: 745\n  };\n  const optionsTable4 = {\n    margin: {\n      top: 410,\n      left: 410,\n      right: 30,\n      bottom: 10\n    },\n    showHead: 'never',\n    theme: 'plain',\n    headerStyles: {\n      // columnWidth: 'wrap',\n      cellPadding: 1,\n      lineWidth: 0,\n      valign: 'top',\n      fontStyle: 'bold',\n      halign: 'left',\n      //'center' or 'right'\n      fillColor: \"white\",\n      textColor: [0, 0, 0],\n      //Black     \n      // textColor: [255, 255, 255], //White     \n      // fillColor: \"white\"\n      fontSize: 8,\n      rowHeight: 10,\n      lineColor: [0, 0, 0]\n    },\n    bodyStyles: {\n      columnWidth: 'wrap',\n      textColor: [30, 30, 30],\n      cellPadding: 2,\n      fontSize: 7,\n      fontStyle: 'bold',\n      lineColor: [0, 0, 0]\n    },\n    columnStyles: {\n      0: {\n        valign: \"top\" // columnWidth:10,\n        // fontStyle: 'bold',\n\n      },\n      1: {\n        halign: 'right',\n        //'center' or 'left'\n        valign: \"top\" // columnWidth: 140,\n        // fontStyle: 'bold',\n\n      }\n    },\n    didParseCell: function (cell, data) {\n      console.log(\"didParseCell\", cell);\n      console.log(\" didParse data\", data);\n\n      if (cell.row.index === 4) {\n        cell.cell.styles.fontSize = 12;\n        cell.cell.styles.lineColor = 'gray';\n        cell.cell.styles.lineWidth = 0.5;\n      }\n    },\n    startY: 745\n  }; // doc.autoTable(table.ReportFotterColumns, table.ReportFooterRow(data), optionsTable2);\n\n  doc.autoTable(table.ReportFotterColumns2, table.ReportFooterRow2(data), optionsTable3);\n  doc.autoTable(table.ReportFotterColumns4, table.ReportFooterRow4(data), optionsTable4);\n  let finalY = doc.previousAutoTable.finalY;\n\n  if (finalY < 745) {\n    doc.line(35, finalY, 35, 815); //horizontal line 3\n\n    doc.line(561, finalY, 561, 815); //horizontal line 3\n  }\n\n  doc.addImage(upi_qr_code, 'PNG', 325, 751, 80, 60);\n  doc.line(561, 745, 35, 745); //horizontal line 1\n  // doc.line(561, 795, 410, 795);//horizontal line 2\n\n  doc.line(561, 815, 35, 815); //horizontal line 3\n\n  doc.line(410, 744, 410, 815); //vertical right1 \n\n  doc.setFontSize(9); // doc.setFont('Tahoma', 'Normal')\n  // // doc.text(`${stringNumber}`, 36, 759)\n  // doc.text(`Total Amount :67674168.45`, 415, 759)\n  // doc.text(`Total GST:124855.25`, 415, 770)\n  // doc.text(`Total CTCS:45742.635`, 415, 781)\n  // doc.text(`Round Off:46464.253`, 415, 791)\n  // doc.setFontSize(12)\n  // doc.text(`Amount:7654214463.53`, 415, 807)\n};\nexport const tableBody = (doc, data) => {\n  var options = {\n    margin: {\n      top: 45,\n      left: 35,\n      right: 35 // bottom:100 \n\n    },\n    theme: 'grid',\n    headerStyles: {\n      //columnWidth: 'wrap',\n      cellPadding: 4,\n      lineWidth: 1,\n      valign: 'top',\n      fontStyle: 'bold',\n      halign: 'left',\n      //'center' or 'right'\n      fillColor: \"white\",\n      textColor: [0, 0, 0],\n      //Black     \n      fontSize: 8,\n      // fillColor: \"white\"\n      rowHeight: 10,\n      lineColor: [0, 0, 0]\n    },\n    bodyStyles: {\n      textColor: [30, 30, 30],\n      cellPadding: 3,\n      fontSize: 7,\n      fontStyle: 'bold',\n      // fontStyle: 'Normal',\n      lineColor: [0, 0, 0]\n    },\n    columnStyles: {\n      0: {\n        valign: \"top\",\n        columnWidth: 140 // fontStyle: 'bold',\n\n      },\n      1: {\n        columnWidth: 50,\n        // fontStyle: 'bold',\n        halign: 'right' // fontStyle: 'bold',\n        //  height:50,\n\n      },\n      2: {\n        columnWidth: 40,\n        // fontStyle: 'bold',\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      3: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      4: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      5: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      6: {\n        // columnWidth: 40,\n        // fontStyle: 'bold',\n        halign: 'center'\n      },\n      7: {\n        halign: 'center'\n      },\n      8: {\n        // columnWidth: 40,\n        fontStyle: 'bold',\n        halign: 'center'\n      }\n    },\n\n    didParseCell(data) {\n      if (data.cell.row.index === 0) {\n        data.cell.styles.textColor = [255, 255, 255];\n        data.cell.styles.fillColor = '#FF5783';\n      }\n    },\n\n    drawHeaderCell: function (cell, data) {\n      if (cell.raw === 'Total GST') {\n        //paint.Name header red\n        cell.styles.fontSize = 15;\n        cell.styles.textColor = [255, 0, 0];\n      } else {\n        cell.styles.textColor = 255;\n        cell.styles.fontSize = 10;\n      }\n    },\n    createdCell: function (cell, data) {// // console.log(\"aaaaaaaaaaaaaaaaaaaaaa\",cell)\n      // if (cell.raw === 'Total GST') {//paint.Name header red\n      //     cell.styles.fontSize = 15;\n      //     // cell.styles.textColor = [255, 0, 0];\n      // } else {\n      //     // cell.styles.textColor = 255;\n      //     cell.styles.fontSize = 10;\n      // }\n    },\n    tableLineColor: \"black\",\n    // tableLineWidth: 0.01,\n    startY: doc.autoTableEndPosY() // 45,\n\n  };\n  doc.autoTable(table.columns, table.Rows(data), options);\n};\nexport const pageFooter = doc => {\n  let finalY = doc.previousAutoTable.finalY;\n\n  if (finalY > 675) {\n    // doc.addPage();\n    pageBorder(doc);\n    reportFooter(doc);\n  } else {\n    pageBorder(doc);\n    reportFooter(doc);\n  }\n\n  const pageCount = doc.internal.getNumberOfPages();\n  doc.setFont('helvetica', 'Normal');\n  doc.setFontSize(8);\n\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text('Page ' + String(i) + ' of ' + String(pageCount), doc.internal.pageSize.width / 10, 828, {\n      align: 'center'\n    });\n    console.log(\"aaa\", doc.internal.pageSize.height);\n  }\n};","map":{"version":3,"names":["reportHederPng","upi_qr_code","table","pageBorder","doc","pageHeder","addImage","addFont","setFont","setFontSize","text","reportHeder1","data","undefined","options3","margin","top","left","right","showHead","theme","styles","overflow","fontSize","height","bodyStyles","columnWidth","textColor","cellPadding","fontStyle","lineColor","columnStyles","valign","halign","tableLineColor","startY","autoTableEndPosY","autoTable","PageHedercolumns","ReportHederRows","reportHederR","line","reportHeder2","reportFooter","optionsTable2","headerStyles","lineWidth","fillColor","rowHeight","optionsTable3","didParseCell","cell","row","index","optionsTable4","bottom","console","log","ReportFotterColumns2","ReportFooterRow2","ReportFotterColumns4","ReportFooterRow4","finalY","previousAutoTable","tableBody","options","drawHeaderCell","raw","createdCell","columns","Rows","pageFooter","pageCount","internal","getNumberOfPages","i","setPage","String","pageSize","width","align"],"sources":["D:/GitProjects/Manthan/src/Reports/InvioceReport/ReportStyle.js"],"sourcesContent":["import reportHederPng from \"../../assets/images/reportHeder.png\"\r\nimport upi_qr_code from \"../../assets/images/upi_qr_code.png\"\r\nimport * as table from './TableData'\r\n\r\nexport const pageBorder = (doc) => { }\r\nexport const pageHeder = (doc) => {\r\n    doc.addImage(reportHederPng, 'PNG', 35, 20, 80, 45)\r\n    doc.addFont(\"Arial\", 'Normal')\r\n    doc.setFont('Arial')\r\n    // doc.setFont('Courier')\r\n\r\n    doc.setFontSize(20)\r\n    doc.text(' Tax Invoice', 460, 50)\r\n}\r\n\r\nexport const reportHeder1 = (doc, data) => {\r\n    doc.setFont('Tahoma')\r\n    doc.setFontSize(10)\r\n    doc.setFont(undefined, 'bold')\r\n    doc.text(\"Billed by\", 35, 80)\r\n    doc.text('Billed to', 235, 80)\r\n    var options3 = {\r\n        // tableLineColor: [189, 195, 199],\r\n        // tableLineWidth: 0.75,\r\n        margin: {\r\n            top: 40, left: 30, right: 22,// bottom:100 \r\n        },\r\n        showHead: 'always',\r\n        theme: 'plain',\r\n        styles: {\r\n            // overflowColumns: false ,\r\n            overflow: 'linebreak',\r\n            fontSize: 8,\r\n            height: 0,\r\n        },\r\n        bodyStyles: {\r\n            columnWidth: 'wrap',\r\n            textColor: [30, 30, 30],\r\n            cellPadding: 3,\r\n            fontSize: 8,\r\n            fontStyle: 'bold',\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        columnStyles: {\r\n            0: {\r\n                valign: \"top\",\r\n                columnWidth: 200,\r\n                halign: 'lfet',\r\n            },\r\n            1: {\r\n                columnWidth: 200,\r\n                halign: 'left',\r\n            },\r\n            1: {\r\n                columnWidth: 200,\r\n                halign: 'left',\r\n\r\n            },\r\n        },\r\n        tableLineColor: \"black\",\r\n        startY: doc.autoTableEndPosY() + 85,// 45,\r\n    };\r\n\r\n    doc.autoTable(table.PageHedercolumns, table.ReportHederRows(data), options3);\r\n}\r\nexport const reportHederR = (doc, data) => {\r\n    doc.line(285, 15, 30, 15);//horizontal line 1\r\n    doc.line(285, 45, 30, 45);//horizontal bottom\r\n    doc.line(30, 45, 30, 15);//vertical left\r\n    doc.line(285, 45, 285, 15);//vertical right \r\n\r\n    doc.line(285, 15, 573, 15);//horizontal line 1\r\n    doc.line(285, 45, 575, 45);//horizontal bottom\r\n    doc.line(285, 45, 285, 15);//vertical left\r\n    doc.line(575, 45, 575, 15);//vertical right \r\n    doc.setFont('Tahoma', 'Normal')\r\n    doc.setFontSize(9)\r\n\r\n    // doc.text(`GSTIN: ${data.GSTIN}`, 33, 25)\r\n    // doc.text('PAN:AAAFC5288N', 33, 35)\r\n    // doc.text(`Invoice Number:${data.InvoiceID}`, 288, 25)\r\n    // doc.text(`Invoice Date: ${data.InvoiceDate}`, 288, 35)\r\n}\r\nexport const reportHeder2 = (doc, data) => {\r\n\r\n}\r\n\r\nexport const reportFooter = (doc, data) => {\r\n    var optionsTable2 = {\r\n\r\n        margin: {\r\n            top: 45, left: 35, right: 35,// bottom:100 \r\n        },\r\n        theme: 'grid',\r\n        headerStyles: {\r\n            //columnWidth: 'wrap',\r\n            cellPadding: 4,\r\n            lineWidth: 1,\r\n            valign: 'top',\r\n            fontStyle: 'bold',\r\n            halign: 'left',    //'center' or 'right'\r\n            fillColor: \"white\",\r\n            textColor: [0, 0, 0], //Black     \r\n            // textColor: [255, 255, 255], //White     \r\n            // fillColor: \"white\"\r\n            fontSize: 8,\r\n            rowHeight: 10,\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        bodyStyles: {\r\n            textColor: [30, 30, 30],\r\n            cellPadding: 3,\r\n            fontSize: 7,\r\n            fontStyle: 'bold',\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        columnStyles: {\r\n            0: {\r\n                valign: \"top\",\r\n                columnWidth: 140,\r\n                // fontStyle: 'bold',\r\n            },\r\n            1: {\r\n                columnWidth: 50,\r\n                // fontStyle: 'bold',\r\n                halign: 'right',\r\n                // fontStyle: 'bold',\r\n                //  height:50,\r\n            },\r\n            2: {\r\n                columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            3: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            4: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            5: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            6: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            7: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            8: {\r\n                // columnWidth: 40,\r\n                fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n        },\r\n        startY: doc.autoTableEndPosY(),// 45,\r\n    };\r\n    const optionsTable3 = {\r\n\r\n        margin: {\r\n            top: 45, left: 35, right: 200\r\n            ,// bottom:100 \r\n        },\r\n        showHead: 'never',\r\n        theme: 'plain',\r\n        headerStyles: {\r\n            // columnWidth: 'wrap',\r\n            cellPadding: 1,\r\n            lineWidth: 0,\r\n            valign: 'top',\r\n            fontStyle: 'bold',\r\n            halign: 'left',    //'center' or 'right'\r\n            fillColor: \"white\",\r\n            textColor: [0, 0, 0], //Black     \r\n            // textColor: [255, 255, 255], //White     \r\n            // fillColor: \"white\"\r\n            fontSize: 8,\r\n            rowHeight: 10,\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        bodyStyles: {\r\n            columnWidth: 'wrap',\r\n            textColor: [30, 30, 30],\r\n            cellPadding: 1,\r\n            fontSize: 7,\r\n            fontStyle: 'bold',\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        columnStyles: {\r\n            0: {\r\n                valign: \"top\",\r\n                columnWidth: 280,\r\n                // fontStyle: 'bold',\r\n            },\r\n        },\r\n        didParseCell: function (cell, data) {\r\n            if (cell.row.index === 0) {\r\n                cell.cell.styles.fontSize = 7;\r\n                cell.cell.styles.lineColor = 'gray'\r\n                cell.cell.styles.lineWidth = 0.5\r\n            }\r\n        },\r\n        startY: 745,\r\n    };\r\n    const optionsTable4 = {\r\n\r\n        margin: {\r\n            top: 410, left: 410, right: 30, bottom: 10\r\n        },\r\n        showHead: 'never',\r\n        theme: 'plain',\r\n        headerStyles: {\r\n            // columnWidth: 'wrap',\r\n            cellPadding: 1,\r\n            lineWidth: 0,\r\n            valign: 'top',\r\n            fontStyle: 'bold',\r\n            halign: 'left',    //'center' or 'right'\r\n            fillColor: \"white\",\r\n            textColor: [0, 0, 0], //Black     \r\n            // textColor: [255, 255, 255], //White     \r\n            // fillColor: \"white\"\r\n            fontSize: 8,\r\n            rowHeight: 10,\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        bodyStyles: {\r\n            columnWidth: 'wrap',\r\n            textColor: [30, 30, 30],\r\n            cellPadding: 2,\r\n            fontSize: 7,\r\n            fontStyle: 'bold',\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        columnStyles: {\r\n            0: {\r\n                valign: \"top\",\r\n                // columnWidth:10,\r\n                // fontStyle: 'bold',\r\n            },\r\n            1: {\r\n                halign: 'right',    //'center' or 'left'\r\n                valign: \"top\",\r\n                // columnWidth: 140,\r\n                // fontStyle: 'bold',\r\n            },\r\n        },\r\n        didParseCell: function (cell, data) {\r\n            console.log(\"didParseCell\", cell)\r\n            console.log(\" didParse data\", data)\r\n\r\n            if (cell.row.index === 4) {\r\n                cell.cell.styles.fontSize = 12;\r\n                cell.cell.styles.lineColor = 'gray'\r\n                cell.cell.styles.lineWidth = 0.5\r\n\r\n            }\r\n        },\r\n\r\n        startY: 745,\r\n    };\r\n    // doc.autoTable(table.ReportFotterColumns, table.ReportFooterRow(data), optionsTable2);\r\n    doc.autoTable(table.ReportFotterColumns2, table.ReportFooterRow2(data), optionsTable3);\r\n    doc.autoTable(table.ReportFotterColumns4, table.ReportFooterRow4(data), optionsTable4);\r\n\r\n    let finalY = doc.previousAutoTable.finalY;\r\n\r\n    if (finalY < 745) {\r\n        doc.line(35, finalY, 35, 815);//horizontal line 3\r\n        doc.line(561, finalY, 561, 815);//horizontal line 3\r\n    }\r\n\r\n    doc.addImage(upi_qr_code, 'PNG', 325, 751, 80, 60)\r\n    doc.line(561, 745, 35, 745);//horizontal line 1\r\n    // doc.line(561, 795, 410, 795);//horizontal line 2\r\n    doc.line(561, 815, 35, 815);//horizontal line 3\r\n    doc.line(410, 744, 410, 815);//vertical right1 \r\n\r\n    doc.setFontSize(9)\r\n    // doc.setFont('Tahoma', 'Normal')\r\n    // // doc.text(`${stringNumber}`, 36, 759)\r\n    // doc.text(`Total Amount :67674168.45`, 415, 759)\r\n\r\n    // doc.text(`Total GST:124855.25`, 415, 770)\r\n    // doc.text(`Total CTCS:45742.635`, 415, 781)\r\n    // doc.text(`Round Off:46464.253`, 415, 791)\r\n    // doc.setFontSize(12)\r\n    // doc.text(`Amount:7654214463.53`, 415, 807)\r\n}\r\nexport const tableBody = (doc, data) => {\r\n\r\n    var options = {\r\n        margin: {\r\n            top: 45, left: 35, right: 35,// bottom:100 \r\n        },\r\n        theme: 'grid',\r\n        headerStyles: {\r\n            //columnWidth: 'wrap',\r\n            cellPadding: 4,\r\n            lineWidth: 1,\r\n            valign: 'top',\r\n            fontStyle: 'bold',\r\n            halign: 'left',    //'center' or 'right'\r\n            fillColor: \"white\",\r\n            textColor: [0, 0, 0], //Black     \r\n            fontSize: 8,\r\n            // fillColor: \"white\"\r\n            rowHeight: 10,\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        bodyStyles: {\r\n            textColor: [30, 30, 30],\r\n            cellPadding: 3,\r\n            fontSize: 7,\r\n            fontStyle: 'bold',\r\n            // fontStyle: 'Normal',\r\n            lineColor: [0, 0, 0]\r\n        },\r\n        columnStyles: {\r\n            0: {\r\n                valign: \"top\",\r\n                columnWidth: 140,\r\n                // fontStyle: 'bold',\r\n            },\r\n            1: {\r\n                columnWidth: 50,\r\n                // fontStyle: 'bold',\r\n                halign: 'right',\r\n                // fontStyle: 'bold',\r\n                //  height:50,\r\n            },\r\n            2: {\r\n                columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            3: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            4: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            5: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            6: {\r\n                // columnWidth: 40,\r\n                // fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n            7: {\r\n                halign: 'center',\r\n            },\r\n            8: {\r\n                // columnWidth: 40,\r\n                fontStyle: 'bold',\r\n                halign: 'center',\r\n            },\r\n        },\r\n        didParseCell(data) {\r\n            if (data.cell.row.index === 0) {\r\n                data.cell.styles.textColor = [255, 255, 255];\r\n                data.cell.styles.fillColor = '#FF5783';\r\n            }\r\n        },\r\n\r\n        drawHeaderCell: function (cell, data) {\r\n\r\n            if (cell.raw === 'Total GST') {//paint.Name header red\r\n                cell.styles.fontSize = 15;\r\n                cell.styles.textColor = [255, 0, 0];\r\n            } else {\r\n                cell.styles.textColor = 255;\r\n                cell.styles.fontSize = 10;\r\n            }\r\n        },\r\n\r\n        createdCell: function (cell, data) {\r\n            // // console.log(\"aaaaaaaaaaaaaaaaaaaaaa\",cell)\r\n            // if (cell.raw === 'Total GST') {//paint.Name header red\r\n            //     cell.styles.fontSize = 15;\r\n            //     // cell.styles.textColor = [255, 0, 0];\r\n            // } else {\r\n            //     // cell.styles.textColor = 255;\r\n            //     cell.styles.fontSize = 10;\r\n            // }\r\n        },\r\n        tableLineColor: \"black\",\r\n        // tableLineWidth: 0.01,\r\n        startY: doc.autoTableEndPosY(),// 45,\r\n    };\r\n    doc.autoTable(table.columns, table.Rows(data), options);\r\n\r\n}\r\nexport const pageFooter = (doc) => {\r\n    let finalY = doc.previousAutoTable.finalY;\r\n    if (finalY > 675) {\r\n        // doc.addPage();\r\n        pageBorder(doc)\r\n        reportFooter(doc)\r\n    } else {\r\n        pageBorder(doc)\r\n        reportFooter(doc)\r\n    }\r\n    const pageCount = doc.internal.getNumberOfPages()\r\n\r\n    doc.setFont('helvetica', 'Normal')\r\n    doc.setFontSize(8)\r\n    for (var i = 1; i <= pageCount; i++) {\r\n        doc.setPage(i)\r\n        doc.text('Page ' + String(i) + ' of ' + String(pageCount), doc.internal.pageSize.width / 10, 828, {\r\n            align: 'center'\r\n        })\r\n        console.log(\"aaa\", doc.internal.pageSize.height)\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}