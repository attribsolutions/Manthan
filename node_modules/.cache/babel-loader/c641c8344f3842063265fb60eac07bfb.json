{"ast":null,"code":"import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import{Card,CardBody,CardHeader,Col,Container,FormGroup,Label,Row}from\"reactstrap\";import{AvField,AvForm}from\"availity-reactstrap-validation\";import Select from\"react-select\";import{MetaTags}from\"react-meta-tags\";import{BreadcrumbShow}from\"../../../store/actions\";import{useDispatch,useSelector}from\"react-redux\";import{AlertState}from\"../../../store/actions\";import{CommonGetRoleAccessFunction}from\"../../../components/Common/CommonGetRoleAccessFunction\";import{PostMethodForDriverMaster,getMethodForDriverList,PostMethod_ForDriverMasterSuccess,getMethod_ForDriverListSuccess,editDriverTypeSuccess,updateDriverTypeID}from\"../../../store/Administrator/DriverRedux/action\";import{useHistory}from\"react-router-dom\";import Flatpickr from\"react-flatpickr\";// import { actionChannel } from \"redux-saga/effects\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DriverMaster=function DriverMaster(props){var dispatch=useDispatch();var history=useHistory();var editDataGatingFromList=props.state;var pageModeProps=props.pageMode;var formRef=useRef(null);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),pageMode=_useState2[0],setPageMode=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),userPageAccessState=_useState4[0],setUserPageAccessState=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),EditData=_useState6[0],setEditData=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),DOB_Date_Select=_useState8[0],setDOB_Date_Select=_useState8[1];//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{PostAPIResponse:state.DriverReducer.PostDataMessage,DriverList:state.DriverReducer.DriverList,RoleAccessModifiedinSingleArray:state.Login.RoleAccessUpdateData};}),PostAPIResponse=_useSelector.PostAPIResponse,DriverList=_useSelector.DriverList,RoleAccessModifiedinSingleArray=_useSelector.RoleAccessModifiedinSingleArray;useEffect(function(){dispatch(getMethodForDriverList());},[dispatch]);//userAccess useEffect\nuseEffect(function(){debugger;var userAcc=undefined;if(editDataGatingFromList===undefined){var locationPath=history.location.pathname;userAcc=RoleAccessModifiedinSingleArray.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});}else if(!(editDataGatingFromList===undefined)){var relatatedPage=props.relatatedPage;userAcc=RoleAccessModifiedinSingleArray.find(function(inx){return\"/\".concat(inx.ActualPagePath)===relatatedPage;});}if(!(userAcc===undefined)){setUserPageAccessState(userAcc);}},[RoleAccessModifiedinSingleArray]);// This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\nuseEffect(function(){if(!(userPageAccessState==='')){document.getElementById(\"txtName\").focus();}if(!(editDataGatingFromList===undefined)){setEditData(editDataGatingFromList);setPageMode(pageModeProps);setDOB_Date_Select(editDataGatingFromList.DOB);dispatch(editDriverTypeSuccess({Status:false}));dispatch(BreadcrumbShow(editDataGatingFromList.DriverMaster));return;}},[editDataGatingFromList]);useEffect(function(){if(PostAPIResponse.Status===true&&PostAPIResponse.StatusCode===200){dispatch(PostMethod_ForDriverMasterSuccess({Status:false}));formRef.current.reset();if(pageMode===\"dropdownAdd\"){dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message,RedirectPath:'/DriverList'}));}}else if(PostAPIResponse.Status===true){dispatch(getMethod_ForDriverListSuccess({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(postMessage.Message),RedirectPath:false,AfterResponseAction:false}));}},[PostAPIResponse]);var FormSubmitButton_Handler=function FormSubmitButton_Handler(event,values){var jsonBody=JSON.stringify({Name:values.Name,Address:values.Address,DOB:DOB_Date_Select,UID:values.UID});if(pageMode==='edit'){dispatch(updateDriverTypeID(jsonBody,EditData.id));}else{dispatch(PostMethodForDriverMaster(jsonBody));}};// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(pageMode===\"edit\"||pageMode===\"copy\"||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsx(\"title\",{children:\"DriverMaster | FoodERP-React FrontEnd\"})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(AvForm,{onValidSubmit:function onValidSubmit(e,v){FormSubmitButton_Handler(e,v);},ref:formRef,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"validationCustom01\",children:\"Name \"}),/*#__PURE__*/_jsx(AvField,{name:\"Name\",id:\"txtName\",value:EditData.Name,type:\"text\",placeholder:\"Please Enter Name\",autoComplete:\"off\",validate:{required:{value:true,errorMessage:'Please Enter Name '}},onChange:function onChange(e){dispatch(BreadcrumbShow(e.target.value));}})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{children:\"Date of Birth\"}),/*#__PURE__*/_jsx(Flatpickr,{id:\"FSSAIExipry\",name:\"FSSAIExipry\",value:DOB_Date_Select,className:\"form-control d-block p-2 bg-white text-dark\",placeholder:\"YYYY-MM-DD\",autoComplete:\"off\",options:{altInput:true,altFormat:\"F j, Y\",dateFormat:\"Y-m-d\"},onChange:function onChange(selectedDates,dateStr,instance){setDOB_Date_Select(dateStr);}})]})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"validationCustom01\",children:\"Address \"}),/*#__PURE__*/_jsx(AvField,{name:\"Address\",value:EditData.Address,type:\"text\",placeholder:\"Please Enter Address\",autoComplete:\"off\",validate:{required:{value:true,errorMessage:'Please Enter Address '}},unChange:function unChange(e){dispatch(BreadcrumbShow(e.target.value));}})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"validationCustom01\",children:\"UID \"}),/*#__PURE__*/_jsx(AvField,{name:\"UID\",value:EditData.UID,type:\"text\",placeholder:\"Please Enter UID\",autoComplete:\"off\",validate:{required:{value:true,errorMessage:'Please Enter UID '}},unChange:function unChange(e){dispatch(BreadcrumbShow(e.target.value));}})]})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:/*#__PURE__*/_jsx(\"div\",{children:pageMode===\"edit\"?userPageAccessState.RoleAccess_IsEdit?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Update Party Type\",className:\"btn btn-success w-md mt-3\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-edit me-2\"}),\"Update\"]}):/*#__PURE__*/_jsx(_Fragment,{}):userPageAccessState.RoleAccess_IsSave?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Save Party Type\",className:\"btn btn-primary w-md mt-3 \",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save me-2\"}),\" Save\"]}):/*#__PURE__*/_jsx(_Fragment,{})})})})})]})})})})})})})]})]})})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default DriverMaster;","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","useDispatch","useSelector","AlertState","CommonGetRoleAccessFunction","PostMethodForDriverMaster","getMethodForDriverList","PostMethod_ForDriverMasterSuccess","getMethod_ForDriverListSuccess","editDriverTypeSuccess","updateDriverTypeID","useHistory","Flatpickr","DriverMaster","props","dispatch","history","editDataGatingFromList","state","pageModeProps","pageMode","formRef","setPageMode","userPageAccessState","setUserPageAccessState","EditData","setEditData","DOB_Date_Select","setDOB_Date_Select","PostAPIResponse","DriverReducer","PostDataMessage","DriverList","RoleAccessModifiedinSingleArray","Login","RoleAccessUpdateData","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","document","getElementById","focus","DOB","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","FormSubmitButton_Handler","event","values","jsonBody","Name","Address","UID","id","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","e","v","required","value","errorMessage","target","altInput","altFormat","dateFormat","selectedDates","dateStr","instance","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/DriverMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport { PostMethodForDriverMaster, getMethodForDriverList, PostMethod_ForDriverMasterSuccess, getMethod_ForDriverListSuccess, editDriverTypeSuccess, updateDriverTypeID } from \"../../../store/Administrator/DriverRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\"\r\n\r\n// import { actionChannel } from \"redux-saga/effects\";\r\n\r\n\r\n\r\nconst DriverMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    let editDataGatingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    const formRef = useRef(null);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(\"\");\r\n    const [EditData, setEditData] = useState([]);\r\n    const [DOB_Date_Select, setDOB_Date_Select] = useState(\"\");\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, DriverList, RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n            PostAPIResponse: state.DriverReducer.PostDataMessage,\r\n            DriverList: state.DriverReducer.DriverList,\r\n            RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n\r\n        }));\r\n\r\n\r\n    useEffect(() => {\r\n         dispatch(getMethodForDriverList());\r\n        \r\n    }, [dispatch]);\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n        debugger\r\n        let userAcc = undefined\r\n        if ((editDataGatingFromList === undefined)) {\r\n    \r\n          let locationPath = history.location.pathname\r\n          userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n          })\r\n        }\r\n        else if (!(editDataGatingFromList === undefined)) {\r\n          let relatatedPage = props.relatatedPage\r\n          userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === relatatedPage)\r\n          })\r\n    \r\n        }\r\n        if (!(userAcc === undefined)) {\r\n          setUserPageAccessState(userAcc)\r\n        }\r\n    \r\n      }, [RoleAccessModifiedinSingleArray])\r\n    \r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGatingFromList === undefined)) {\r\n            \r\n            setEditData(editDataGatingFromList);\r\n            setPageMode(pageModeProps);\r\n            setDOB_Date_Select(editDataGatingFromList.DOB)\r\n\r\n            dispatch(editDriverTypeSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGatingFromList.DriverMaster))\r\n            return\r\n        }\r\n    }, [editDataGatingFromList])\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/DriverList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForDriverListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n    const FormSubmitButton_Handler = (event, values) => {\r\n        const jsonBody = JSON.stringify({\r\n            Name: values.Name,\r\n            Address: values.Address,\r\n            DOB: DOB_Date_Select,\r\n            UID: values.UID\r\n        });\r\n    \r\n    if (pageMode === 'edit') {\r\n        dispatch(updateDriverTypeID(jsonBody, EditData.id));\r\n      }\r\n  \r\n      else {\r\n        dispatch(PostMethodForDriverMaster(jsonBody));\r\n      }\r\n    };\r\n    \r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>DriverMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <AvForm onValidSubmit={(e, v) => { FormSubmitButton_Handler(e, v) }}\r\n                                    ref={formRef}>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">Name </Label>\r\n                                                            <AvField\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={EditData.Name}\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete='off'\r\n                                                                validate={{\r\n                                                                    required: { value: true, errorMessage: 'Please Enter Name ' },\r\n                                                                }}\r\n                                                                onChange={(e) => { dispatch(BreadcrumbShow(e.target.value)) }}\r\n                                                            />\r\n                                                        </FormGroup>\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                            <Label>Date of Birth</Label>\r\n                                                           <Flatpickr\r\n                                                                      id=\"FSSAIExipry\"\r\n                                                                      name=\"FSSAIExipry\"\r\n                                                                      value={DOB_Date_Select}\r\n                                                                      className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                                      placeholder=\"YYYY-MM-DD\"\r\n                                                                      autoComplete='off'\r\n                                                                      options={{\r\n                                                                      altInput: true,\r\n                                                                      altFormat: \"F j, Y\",\r\n                                                                      dateFormat: \"Y-m-d\"\r\n                                                                                      }}\r\n                                                                      onChange={(selectedDates, dateStr, instance) => {\r\n                                                                      setDOB_Date_Select(dateStr)\r\n                                                                                  }}\r\n                                                                                   />\r\n                                                                     </FormGroup>\r\n                                                                    </Col>\r\n                                                                   </Row>\r\n\r\n                                                        <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">Address </Label>\r\n                                                            <AvField\r\n                                                                name=\"Address\"\r\n                                                                value={EditData.Address}\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Please Enter Address\"\r\n                                                                autoComplete='off'\r\n                                                                validate={{\r\n                                                                    required: { value: true, errorMessage: 'Please Enter Address ' },\r\n                                                                }}\r\n                                                                unChange={(e) => { dispatch(BreadcrumbShow(e.target.value)) }}\r\n                                                            />\r\n                                                        </FormGroup>\r\n                                                       </Row>\r\n\r\n                                                       <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">UID </Label>\r\n                                                            <AvField\r\n                                                                name=\"UID\"\r\n                                                                value={EditData.UID}\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Please Enter UID\"\r\n                                                                autoComplete='off'\r\n                                                                validate={{\r\n                                                                    required: { value: true, errorMessage: 'Please Enter UID ' },\r\n                                                                }}\r\n                                                                unChange={(e) => { dispatch(BreadcrumbShow(e.target.value)) }}\r\n                                                            />\r\n                                                        </FormGroup>\r\n                                                       </Row>\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n                                                                                    \r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </AvForm>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DriverMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}