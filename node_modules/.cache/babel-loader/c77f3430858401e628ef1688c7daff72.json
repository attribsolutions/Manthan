{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\DriverPage\\\\driverListeditableList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { Col, Modal, Row } from \"reactstrap\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"../../../assets/scss/CustomeTable/datatables.scss\";\nimport DriverMaster from \"./DriverMaster\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDriverTypeIDSuccess, updateDriverTypeIDSuccess, getMethodForDriverList, editDriverTypeId, delete_DriverType_ID, PostMethod_ForDriverMasterSuccess } from \"../../../store/Administrator/DriverRedux/action\";\nimport { AlertState } from \"../../../store/actions\";\nimport { listPageCommonButtonFunction } from \"../../../components/Common/CmponentRelatedCommonFile/listPageCommonButtons\";\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QualityRanger extends React.Component {\n  getValue() {\n    return parseInt(this.range.value, 10);\n  }\n\n  render() {\n    const {\n      value,\n      onUpdate,\n      ...rest\n    } = this.props;\n    return [/*#__PURE__*/_createElement(\"input\", { ...rest,\n      key: \"range\",\n      ref: node => this.range = node,\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-default\",\n      onClick: () => onUpdate(this.getValue()),\n      children: \"done\"\n    }, \"submit\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)];\n  }\n\n}\n\nQualityRanger.propTypes = {\n  value: PropTypes.number,\n  onUpdate: PropTypes.func.isRequired\n};\nQualityRanger.defaultProps = {\n  value: 0\n};\n\nconst DriverList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [modal_center, setmodal_center] = useState(false);\n  const {\n    TableListData,\n    editData,\n    updateMessage,\n    deleteMessage,\n    PostAPIResponse,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    TableListData: state.DriverReducer.DriverList,\n    editData: state.DriverReducer.editData,\n    updateMessage: state.DriverReducer.updateMessage,\n    deleteMessage: state.DriverReducer.deleteMessage,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\n    PostAPIResponse: state.DriverReducer.PostDataMessage\n  }));\n  console.log(\"TableListData\", TableListData);\n  useEffect(() => {\n    const locationPath = history.location.pathname;\n    let userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); //  This UseEffect => Featch Modules List data  First Rendering\n\n  useEffect(() => {\n    dispatch(getMethodForDriverList());\n  }, []); // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\n\n  useEffect(() => {\n    if (updateMessage.Status === true && updateMessage.StatusCode === 200) {\n      dispatch(updateDriverTypeIDSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: updateMessage.Message,\n        AfterResponseAction: getMethodForDriverList\n      }));\n      tog_center();\n    } else if (updateMessage.Status === true) {\n      dispatch(updateDriverTypeIDSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMessage.Message)\n      }));\n    }\n  }, [updateMessage]);\n  useEffect(() => {\n    if (deleteMessage.Status === true && deleteMessage.StatusCode === 200) {\n      dispatch(deleteDriverTypeIDSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: deleteMessage.Message,\n        AfterResponseAction: getMethodForDriverList\n      }));\n    } else if (deleteMessage.Status === true) {\n      dispatch(deleteDriverTypeIDSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(deleteMessage.Message)\n      }));\n    }\n  }, [deleteMessage]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForDriverMasterSuccess({\n        Status: false\n      }));\n      tog_center();\n      dispatch(getMethodForDriverList());\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: PostAPIResponse.Message\n      }));\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(PostMethod_ForDriverMasterSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostAPIResponse.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse.Status]); // Edit Modal Show When Edit Data is true\n\n  useEffect(() => {\n    if (editData.Status === true) {\n      tog_center();\n    }\n  }, [editData]);\n\n  function tog_center() {\n    setmodal_center(!modal_center);\n  }\n\n  const defaultSorted = [{\n    dataField: \"Name\",\n    // if dataField is not match to any column you defined, it will be ignored.\n    order: \"asc\" // desc or asc\n\n  }];\n  const pageOptions = {\n    sizePerPage: 10,\n    totalSize: TableListData.length,\n    custom: true\n  };\n  const pagesListColumns = [{\n    text: \"Name\",\n    dataField: \"Name\",\n    sort: true\n  }, {\n    text: \"Date Of Birth\",\n    dataField: \"DOB\",\n    sort: true\n  }, {\n    text: \"Address\",\n    dataField: \"Address\",\n    sort: true,\n    editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => /*#__PURE__*/_jsxDEV(QualityRanger, { ...editorProps,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)\n  }, {\n    text: \"UID\",\n    dataField: \"UID\",\n    sort: true\n  }, // For Edit, Delete ,and View Button Common Code function\n  listPageCommonButtonFunction({\n    dispatchHook: dispatch,\n    ButtonMsgLable: \"DriverType\",\n    deleteName: \"Name\",\n    userPageAccessState: userPageAccessState,\n    editActionFun: editDriverTypeId,\n    deleteActionFun: delete_DriverType_ID\n  })];\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"DriverList| FoodERP-React FrontEnd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(PaginationProvider, {\n          pagination: paginationFactory(pageOptions),\n          children: _ref => {\n            let {\n              paginationProps,\n              paginationTableProps\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n              keyField: \"id\",\n              defaultSorted: defaultSorted,\n              data: TableListData,\n              columns: pagesListColumns,\n              search: true,\n              children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n                  title: \"Count :\",\n                  breadcrumbItem: userPageAccessState.PageHeading,\n                  IsButtonVissible: userPageAccessState.RoleAccess_IsSave ? true : false,\n                  SearchProps: toolkitProps.searchProps,\n                  breadcrumbCount: `Product Count: ${TableListData.length}`,\n                  IsSearchVissible: true,\n                  RedirctPath: `/DriverMaster`,\n                  isExcelButtonVisible: true,\n                  ExcelData: TableListData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"table-responsive\",\n                      children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                        keyField: \"id\",\n                        responsive: true,\n                        bordered: false,\n                        striped: false,\n                        cellEdit: cellEditFactory({\n                          mode: 'click',\n                          blurToSave: true\n                        }),\n                        classes: \"table  table-bordered\",\n                        ...toolkitProps.baseProps,\n                        ...paginationTableProps\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"align-items-md-center mt-30\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pagination pagination-rounded justify-content-end mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modal_center,\n          toggle: () => {\n            tog_center();\n          },\n          size: \"xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(DriverList, \"Djp9cfwyIaRsC4ZJcDPe32IQSik=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = DriverList;\nexport default DriverList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverList\");","map":{"version":3,"names":["React","useEffect","useState","Breadcrumbs","Col","Modal","Row","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","Search","BootstrapTable","useSelector","useDispatch","DriverMaster","MetaTags","useHistory","deleteDriverTypeIDSuccess","updateDriverTypeIDSuccess","getMethodForDriverList","editDriverTypeId","delete_DriverType_ID","PostMethod_ForDriverMasterSuccess","AlertState","listPageCommonButtonFunction","cellEditFactory","QualityRanger","Component","getValue","parseInt","range","value","render","onUpdate","rest","props","node","propTypes","PropTypes","number","func","isRequired","defaultProps","DriverList","dispatch","history","userPageAccessState","setUserPageAccessState","modal_center","setmodal_center","TableListData","editData","updateMessage","deleteMessage","PostAPIResponse","RoleAccessModifiedinSingleArray","state","DriverReducer","Login","RoleAccessUpdateData","PostDataMessage","console","log","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","Status","StatusCode","Type","Message","AfterResponseAction","tog_center","JSON","stringify","RedirectPath","defaultSorted","dataField","order","pageOptions","sizePerPage","totalSize","length","custom","pagesListColumns","text","sort","editorRenderer","editorProps","row","column","rowIndex","columnIndex","dispatchHook","ButtonMsgLable","deleteName","editActionFun","deleteActionFun","paginationProps","paginationTableProps","toolkitProps","PageHeading","RoleAccess_IsSave","searchProps","mode","blurToSave","baseProps"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/driverListeditableList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\r\nimport { Col, Modal, Row } from \"reactstrap\";\r\nimport paginationFactory, {\r\n  PaginationListStandalone,\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../../assets/scss/CustomeTable/datatables.scss\";\r\nimport DriverMaster from \"./DriverMaster\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  deleteDriverTypeIDSuccess,\r\n  updateDriverTypeIDSuccess,\r\n  getMethodForDriverList,\r\n  editDriverTypeId,\r\n  delete_DriverType_ID,\r\n  PostMethod_ForDriverMasterSuccess,\r\n} from \"../../../store/Administrator/DriverRedux/action\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { listPageCommonButtonFunction }\r\n  from \"../../../components/Common/CmponentRelatedCommonFile/listPageCommonButtons\";\r\n  \r\n  import cellEditFactory from 'react-bootstrap-table2-editor';\r\n  class QualityRanger extends React.Component {\r\n    static propTypes = {\r\n      value: PropTypes.number,\r\n      onUpdate: PropTypes.func.isRequired\r\n    }\r\n    static defaultProps = {\r\n      value: 0\r\n    }\r\n    getValue() {\r\n      return parseInt(this.range.value, 10);\r\n    }\r\n    render() {\r\n      const { value, onUpdate, ...rest } = this.props;\r\n      return [\r\n        <input\r\n          { ...rest }\r\n          key=\"range\"\r\n          ref={ node => this.range = node }\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n        />,\r\n        <button\r\n          key=\"submit\"\r\n          className=\"btn btn-default\"\r\n          onClick={ () => onUpdate(this.getValue()) }\r\n        >\r\n          done\r\n        </button>\r\n      ];\r\n    }\r\n  }\r\nconst DriverList = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [userPageAccessState, setUserPageAccessState] = useState('');\r\n  const [modal_center, setmodal_center] = useState(false);\r\n\r\n  const {\r\n    TableListData,\r\n    editData,\r\n    updateMessage,\r\n    deleteMessage,\r\n    PostAPIResponse,\r\n    RoleAccessModifiedinSingleArray,\r\n  } = useSelector(\r\n    (state) => ({\r\n      TableListData: state.DriverReducer.DriverList,\r\n      editData: state.DriverReducer.editData,\r\n      updateMessage: state.DriverReducer.updateMessage,\r\n      deleteMessage: state.DriverReducer.deleteMessage,\r\n      RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n      PostAPIResponse: state.DriverReducer.PostDataMessage,\r\n    })\r\n  );\r\n  console.log(\"TableListData\", TableListData)\r\n  useEffect(() => {\r\n    const locationPath = history.location.pathname\r\n    let userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n      return (`/${inx.ActualPagePath}` === locationPath)\r\n    })\r\n    if (!(userAcc === undefined)) {\r\n      setUserPageAccessState(userAcc)\r\n    }\r\n  }, [RoleAccessModifiedinSingleArray])\r\n\r\n  //  This UseEffect => Featch Modules List data  First Rendering\r\n  useEffect(() => {\r\n    dispatch(getMethodForDriverList());\r\n  }, []);\r\n\r\n  // This UseEffect => UpadateModal Success/Unsucces  Show and Hide Control Alert_modal\r\n  useEffect(() => {\r\n\r\n    if (updateMessage.Status === true && updateMessage.StatusCode === 200) {\r\n      dispatch(updateDriverTypeIDSuccess({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 1,\r\n          Status: true,\r\n          Message: updateMessage.Message,\r\n          AfterResponseAction: getMethodForDriverList,\r\n        })\r\n      );\r\n      tog_center();\r\n    } else if (updateMessage.Status === true) {\r\n      dispatch(updateDriverTypeIDSuccess({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 3,\r\n          Status: true,\r\n          Message: JSON.stringify(updateMessage.Message),\r\n        })\r\n      );\r\n    }\r\n  }, [updateMessage]);\r\n\r\n  useEffect(() => {\r\n    if (deleteMessage.Status === true && deleteMessage.StatusCode === 200) {\r\n      dispatch(deleteDriverTypeIDSuccess({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 1,\r\n          Status: true,\r\n          Message: deleteMessage.Message,\r\n          AfterResponseAction: getMethodForDriverList,\r\n        })\r\n      );\r\n    } else if (deleteMessage.Status === true) {\r\n      dispatch(deleteDriverTypeIDSuccess({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 3,\r\n          Status: true,\r\n          Message: JSON.stringify(deleteMessage.Message),\r\n        })\r\n      );\r\n    }\r\n  }, [deleteMessage]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n      dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n      tog_center();\r\n      dispatch(getMethodForDriverList());\r\n      dispatch(AlertState({\r\n        Type: 1,\r\n        Status: true,\r\n        Message: PostAPIResponse.Message,\r\n      }))\r\n    }\r\n\r\n    else if ((PostAPIResponse.Status === true)) {\r\n      dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n      dispatch(AlertState({\r\n        Type: 4,\r\n        Status: true,\r\n        Message: JSON.stringify(PostAPIResponse.Message),\r\n        RedirectPath: false,\r\n        AfterResponseAction: false\r\n      }));\r\n    }\r\n\r\n\r\n  }, [PostAPIResponse.Status])\r\n  // Edit Modal Show When Edit Data is true\r\n  useEffect(() => {\r\n    if (editData.Status === true) {\r\n      tog_center();\r\n    }\r\n  }, [editData]);\r\n\r\n  function tog_center() {\r\n    setmodal_center(!modal_center);\r\n  }\r\n\r\n  const defaultSorted = [\r\n    {\r\n      dataField: \"Name\", // if dataField is not match to any column you defined, it will be ignored.\r\n      order: \"asc\", // desc or asc\r\n    },\r\n  ];\r\n\r\n  const pageOptions = {\r\n    sizePerPage: 10,\r\n    totalSize: TableListData.length,\r\n    custom: true,\r\n  };\r\n\r\n  const pagesListColumns = [\r\n    {\r\n      text: \"Name\",\r\n      dataField: \"Name\",\r\n      sort: true,\r\n    },\r\n\r\n    {\r\n      text: \"Date Of Birth\",\r\n      dataField: \"DOB\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"Address\",\r\n      dataField: \"Address\",\r\n      sort: true,\r\n      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\r\n        <QualityRanger { ...editorProps } value={ value } />\r\n      )\r\n    },\r\n    {\r\n      text: \"UID\",\r\n      dataField: \"UID\",\r\n      sort: true,\r\n    },\r\n\r\n    // For Edit, Delete ,and View Button Common Code function\r\n    listPageCommonButtonFunction({\r\n      dispatchHook: dispatch,\r\n      ButtonMsgLable: \"DriverType\",\r\n      deleteName: \"Name\",\r\n      userPageAccessState: userPageAccessState,\r\n      editActionFun: editDriverTypeId,\r\n      deleteActionFun: delete_DriverType_ID\r\n    })\r\n  ];\r\n\r\n\r\n  \r\n\r\n  \r\n  if (!(userPageAccessState === '')) {\r\n    return (\r\n      <React.Fragment>\r\n        <MetaTags>\r\n          <title>DriverList| FoodERP-React FrontEnd</title>\r\n        </MetaTags>\r\n        <div className=\"page-content\">\r\n          <PaginationProvider pagination={paginationFactory(pageOptions)}>\r\n            {({ paginationProps, paginationTableProps }) => (\r\n              <ToolkitProvider\r\n                keyField=\"id\"\r\n                defaultSorted={defaultSorted}\r\n                data={TableListData}\r\n                columns={pagesListColumns}\r\n                search\r\n              >\r\n                {(toolkitProps) => (\r\n                  <React.Fragment>\r\n                    <Breadcrumbs\r\n                      title={\"Count :\"}\r\n                      breadcrumbItem={userPageAccessState.PageHeading}\r\n                      IsButtonVissible={(userPageAccessState.RoleAccess_IsSave) ? true : false}\r\n                      SearchProps={toolkitProps.searchProps}\r\n                      breadcrumbCount={`Product Count: ${TableListData.length}`}\r\n                      IsSearchVissible={true}\r\n                      RedirctPath={`/DriverMaster`}\r\n                      isExcelButtonVisible={true}\r\n                      ExcelData={TableListData}\r\n                    />\r\n                    <Row>\r\n                      <Col xl=\"12\">\r\n                        <div className=\"table-responsive\">\r\n                          <BootstrapTable\r\n                            keyField={\"id\"}\r\n                            responsive\r\n                            bordered={false}\r\n                            striped={false}\r\n                            cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true }) }\r\n                            classes={\"table  table-bordered\"}\r\n                            {...toolkitProps.baseProps}\r\n                            {...paginationTableProps}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"align-items-md-center mt-30\">\r\n                      <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                        <PaginationListStandalone {...paginationProps} />\r\n                      </Col>\r\n                    </Row>\r\n                  </React.Fragment>\r\n                )}\r\n              </ToolkitProvider>\r\n            )}\r\n          </PaginationProvider>\r\n          <Modal\r\n            isOpen={modal_center}\r\n            toggle={() => {\r\n              tog_center();\r\n            }}\r\n            size=\"xl\"\r\n          >\r\n   \r\n            {/* <A state={editData.Data} relatatedPage={\"/DriverMaster\"} pageMode={editData.pageMode} /> */}\r\n          </Modal>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <React.Fragment></React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DriverList;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,GAArB,QAAgC,YAAhC;AACA,OAAOC,iBAAP,IACEC,wBADF,EAEEC,kBAFF,QAGO,kCAHP;AAIA,OAAOC,eAAP,IAA0BC,MAA1B,QAAwC,gCAAxC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,mDAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,sBAHF,EAIEC,gBAJF,EAKEC,oBALF,EAMEC,iCANF,QAOO,iDAPP;AAQA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,4BAAT,QACO,4EADP;AAGE,OAAOC,eAAP,MAA4B,+BAA5B;;;;AACA,MAAMC,aAAN,SAA4B3B,KAAK,CAAC4B,SAAlC,CAA4C;EAQ1CC,QAAQ,GAAG;IACT,OAAOC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,KAAZ,EAAmB,EAAnB,CAAf;EACD;;EACDC,MAAM,GAAG;IACP,MAAM;MAAED,KAAF;MAASE,QAAT;MAAmB,GAAGC;IAAtB,IAA+B,KAAKC,KAA1C;IACA,OAAO,cACL,6BACOD,IADP;MAEE,GAAG,EAAC,OAFN;MAGE,GAAG,EAAGE,IAAI,IAAI,KAAKN,KAAL,GAAaM,IAH7B;MAIE,IAAI,EAAC,OAJP;MAKE,GAAG,EAAC,GALN;MAME,GAAG,EAAC,KANN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADK,eASL;MAEE,SAAS,EAAC,iBAFZ;MAGE,OAAO,EAAG,MAAMH,QAAQ,CAAC,KAAKL,QAAL,EAAD,CAH1B;MAAA;IAAA,GACM,QADN;MAAA;MAAA;MAAA;IAAA,QATK,CAAP;EAiBD;;AA9ByC;;AAAtCF,a,CACGW,S,GAAY;EACjBN,KAAK,EAAEO,SAAS,CAACC,MADA;EAEjBN,QAAQ,EAAEK,SAAS,CAACE,IAAV,CAAeC;AAFR,C;AADff,a,CAKGgB,Y,GAAe;EACpBX,KAAK,EAAE;AADa,C;;AA2B1B,MAAMY,UAAU,GAAIR,KAAD,IAAW;EAAA;;EAE5B,MAAMS,QAAQ,GAAG/B,WAAW,EAA5B;EACA,MAAMgC,OAAO,GAAG7B,UAAU,EAA1B;EAEA,MAAM,CAAC8B,mBAAD,EAAsBC,sBAAtB,IAAgD9C,QAAQ,CAAC,EAAD,CAA9D;EACA,MAAM,CAAC+C,YAAD,EAAeC,eAAf,IAAkChD,QAAQ,CAAC,KAAD,CAAhD;EAEA,MAAM;IACJiD,aADI;IAEJC,QAFI;IAGJC,aAHI;IAIJC,aAJI;IAKJC,eALI;IAMJC;EANI,IAOF3C,WAAW,CACZ4C,KAAD,KAAY;IACVN,aAAa,EAAEM,KAAK,CAACC,aAAN,CAAoBd,UADzB;IAEVQ,QAAQ,EAAEK,KAAK,CAACC,aAAN,CAAoBN,QAFpB;IAGVC,aAAa,EAAEI,KAAK,CAACC,aAAN,CAAoBL,aAHzB;IAIVC,aAAa,EAAEG,KAAK,CAACC,aAAN,CAAoBJ,aAJzB;IAKVE,+BAA+B,EAAEC,KAAK,CAACE,KAAN,CAAYC,oBALnC;IAMVL,eAAe,EAAEE,KAAK,CAACC,aAAN,CAAoBG;EAN3B,CAAZ,CADa,CAPf;EAiBAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BZ,aAA7B;EACAlD,SAAS,CAAC,MAAM;IACd,MAAM+D,YAAY,GAAGlB,OAAO,CAACmB,QAAR,CAAiBC,QAAtC;IACA,IAAIC,OAAO,GAAGX,+BAA+B,CAACY,IAAhC,CAAsCC,GAAD,IAAS;MAC1D,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BN,YAArC;IACD,CAFa,CAAd;;IAGA,IAAI,EAAEG,OAAO,KAAKI,SAAd,CAAJ,EAA8B;MAC5BvB,sBAAsB,CAACmB,OAAD,CAAtB;IACD;EACF,CARQ,EAQN,CAACX,+BAAD,CARM,CAAT,CA1B4B,CAoC5B;;EACAvD,SAAS,CAAC,MAAM;IACd4C,QAAQ,CAACzB,sBAAsB,EAAvB,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT,CArC4B,CAyC5B;;EACAnB,SAAS,CAAC,MAAM;IAEd,IAAIoD,aAAa,CAACmB,MAAd,KAAyB,IAAzB,IAAiCnB,aAAa,CAACoB,UAAd,KAA6B,GAAlE,EAAuE;MACrE5B,QAAQ,CAAC1B,yBAAyB,CAAC;QAAEqD,MAAM,EAAE;MAAV,CAAD,CAA1B,CAAR;MACA3B,QAAQ,CACNrB,UAAU,CAAC;QACTkD,IAAI,EAAE,CADG;QAETF,MAAM,EAAE,IAFC;QAGTG,OAAO,EAAEtB,aAAa,CAACsB,OAHd;QAITC,mBAAmB,EAAExD;MAJZ,CAAD,CADJ,CAAR;MAQAyD,UAAU;IACX,CAXD,MAWO,IAAIxB,aAAa,CAACmB,MAAd,KAAyB,IAA7B,EAAmC;MACxC3B,QAAQ,CAAC1B,yBAAyB,CAAC;QAAEqD,MAAM,EAAE;MAAV,CAAD,CAA1B,CAAR;MACA3B,QAAQ,CACNrB,UAAU,CAAC;QACTkD,IAAI,EAAE,CADG;QAETF,MAAM,EAAE,IAFC;QAGTG,OAAO,EAAEG,IAAI,CAACC,SAAL,CAAe1B,aAAa,CAACsB,OAA7B;MAHA,CAAD,CADJ,CAAR;IAOD;EACF,CAvBQ,EAuBN,CAACtB,aAAD,CAvBM,CAAT;EAyBApD,SAAS,CAAC,MAAM;IACd,IAAIqD,aAAa,CAACkB,MAAd,KAAyB,IAAzB,IAAiClB,aAAa,CAACmB,UAAd,KAA6B,GAAlE,EAAuE;MACrE5B,QAAQ,CAAC3B,yBAAyB,CAAC;QAAEsD,MAAM,EAAE;MAAV,CAAD,CAA1B,CAAR;MACA3B,QAAQ,CACNrB,UAAU,CAAC;QACTkD,IAAI,EAAE,CADG;QAETF,MAAM,EAAE,IAFC;QAGTG,OAAO,EAAErB,aAAa,CAACqB,OAHd;QAITC,mBAAmB,EAAExD;MAJZ,CAAD,CADJ,CAAR;IAQD,CAVD,MAUO,IAAIkC,aAAa,CAACkB,MAAd,KAAyB,IAA7B,EAAmC;MACxC3B,QAAQ,CAAC3B,yBAAyB,CAAC;QAAEsD,MAAM,EAAE;MAAV,CAAD,CAA1B,CAAR;MACA3B,QAAQ,CACNrB,UAAU,CAAC;QACTkD,IAAI,EAAE,CADG;QAETF,MAAM,EAAE,IAFC;QAGTG,OAAO,EAAEG,IAAI,CAACC,SAAL,CAAezB,aAAa,CAACqB,OAA7B;MAHA,CAAD,CADJ,CAAR;IAOD;EACF,CArBQ,EAqBN,CAACrB,aAAD,CArBM,CAAT;EAwBArD,SAAS,CAAC,MAAM;IAEd,IAAKsD,eAAe,CAACiB,MAAhB,KAA2B,IAA5B,IAAsCjB,eAAe,CAACkB,UAAhB,KAA+B,GAAzE,EAA+E;MAC7E5B,QAAQ,CAACtB,iCAAiC,CAAC;QAAEiD,MAAM,EAAE;MAAV,CAAD,CAAlC,CAAR;MACAK,UAAU;MACVhC,QAAQ,CAACzB,sBAAsB,EAAvB,CAAR;MACAyB,QAAQ,CAACrB,UAAU,CAAC;QAClBkD,IAAI,EAAE,CADY;QAElBF,MAAM,EAAE,IAFU;QAGlBG,OAAO,EAAEpB,eAAe,CAACoB;MAHP,CAAD,CAAX,CAAR;IAKD,CATD,MAWK,IAAKpB,eAAe,CAACiB,MAAhB,KAA2B,IAAhC,EAAuC;MAC1C3B,QAAQ,CAACtB,iCAAiC,CAAC;QAAEiD,MAAM,EAAE;MAAV,CAAD,CAAlC,CAAR;MACA3B,QAAQ,CAACrB,UAAU,CAAC;QAClBkD,IAAI,EAAE,CADY;QAElBF,MAAM,EAAE,IAFU;QAGlBG,OAAO,EAAEG,IAAI,CAACC,SAAL,CAAexB,eAAe,CAACoB,OAA/B,CAHS;QAIlBK,YAAY,EAAE,KAJI;QAKlBJ,mBAAmB,EAAE;MALH,CAAD,CAAX,CAAR;IAOD;EAGF,CAzBQ,EAyBN,CAACrB,eAAe,CAACiB,MAAjB,CAzBM,CAAT,CA3F4B,CAqH5B;;EACAvE,SAAS,CAAC,MAAM;IACd,IAAImD,QAAQ,CAACoB,MAAT,KAAoB,IAAxB,EAA8B;MAC5BK,UAAU;IACX;EACF,CAJQ,EAIN,CAACzB,QAAD,CAJM,CAAT;;EAMA,SAASyB,UAAT,GAAsB;IACpB3B,eAAe,CAAC,CAACD,YAAF,CAAf;EACD;;EAED,MAAMgC,aAAa,GAAG,CACpB;IACEC,SAAS,EAAE,MADb;IACqB;IACnBC,KAAK,EAAE,KAFT,CAEgB;;EAFhB,CADoB,CAAtB;EAOA,MAAMC,WAAW,GAAG;IAClBC,WAAW,EAAE,EADK;IAElBC,SAAS,EAAEnC,aAAa,CAACoC,MAFP;IAGlBC,MAAM,EAAE;EAHU,CAApB;EAMA,MAAMC,gBAAgB,GAAG,CACvB;IACEC,IAAI,EAAE,MADR;IAEER,SAAS,EAAE,MAFb;IAGES,IAAI,EAAE;EAHR,CADuB,EAOvB;IACED,IAAI,EAAE,eADR;IAEER,SAAS,EAAE,KAFb;IAGES,IAAI,EAAE;EAHR,CAPuB,EAYvB;IACED,IAAI,EAAE,SADR;IAEER,SAAS,EAAE,SAFb;IAGES,IAAI,EAAE,IAHR;IAIEC,cAAc,EAAE,CAACC,WAAD,EAAc7D,KAAd,EAAqB8D,GAArB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,WAA5C,kBACd,QAAC,aAAD,OAAoBJ,WAApB;MAAkC,KAAK,EAAG7D;IAA1C;MAAA;MAAA;MAAA;IAAA;EALJ,CAZuB,EAoBvB;IACE0D,IAAI,EAAE,KADR;IAEER,SAAS,EAAE,KAFb;IAGES,IAAI,EAAE;EAHR,CApBuB,EA0BvB;EACAlE,4BAA4B,CAAC;IAC3ByE,YAAY,EAAErD,QADa;IAE3BsD,cAAc,EAAE,YAFW;IAG3BC,UAAU,EAAE,MAHe;IAI3BrD,mBAAmB,EAAEA,mBAJM;IAK3BsD,aAAa,EAAEhF,gBALY;IAM3BiF,eAAe,EAAEhF;EANU,CAAD,CA3BL,CAAzB;;EAyCA,IAAI,EAAEyB,mBAAmB,KAAK,EAA1B,CAAJ,EAAmC;IACjC,oBACE,QAAC,KAAD,CAAO,QAAP;MAAA,wBACE,QAAC,QAAD;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,cAAf;QAAA,wBACE,QAAC,kBAAD;UAAoB,UAAU,EAAExC,iBAAiB,CAAC6E,WAAD,CAAjD;UAAA,UACG;YAAA,IAAC;cAAEmB,eAAF;cAAmBC;YAAnB,CAAD;YAAA,oBACC,QAAC,eAAD;cACE,QAAQ,EAAC,IADX;cAEE,aAAa,EAAEvB,aAFjB;cAGE,IAAI,EAAE9B,aAHR;cAIE,OAAO,EAAEsC,gBAJX;cAKE,MAAM,MALR;cAAA,UAOIgB,YAAD,iBACC,QAAC,KAAD,CAAO,QAAP;gBAAA,wBACE,QAAC,WAAD;kBACE,KAAK,EAAE,SADT;kBAEE,cAAc,EAAE1D,mBAAmB,CAAC2D,WAFtC;kBAGE,gBAAgB,EAAG3D,mBAAmB,CAAC4D,iBAArB,GAA0C,IAA1C,GAAiD,KAHrE;kBAIE,WAAW,EAAEF,YAAY,CAACG,WAJ5B;kBAKE,eAAe,EAAG,kBAAiBzD,aAAa,CAACoC,MAAO,EAL1D;kBAME,gBAAgB,EAAE,IANpB;kBAOE,WAAW,EAAG,eAPhB;kBAQE,oBAAoB,EAAE,IARxB;kBASE,SAAS,EAAEpC;gBATb;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAYE,QAAC,GAAD;kBAAA,uBACE,QAAC,GAAD;oBAAK,EAAE,EAAC,IAAR;oBAAA,uBACE;sBAAK,SAAS,EAAC,kBAAf;sBAAA,uBACE,QAAC,cAAD;wBACE,QAAQ,EAAE,IADZ;wBAEE,UAAU,MAFZ;wBAGE,QAAQ,EAAE,KAHZ;wBAIE,OAAO,EAAE,KAJX;wBAKE,QAAQ,EAAGzB,eAAe,CAAC;0BAAEmF,IAAI,EAAE,OAAR;0BAAiBC,UAAU,EAAE;wBAA7B,CAAD,CAL5B;wBAME,OAAO,EAAE,uBANX;wBAAA,GAOML,YAAY,CAACM,SAPnB;wBAAA,GAQMP;sBARN;wBAAA;wBAAA;wBAAA;sBAAA;oBADF;sBAAA;sBAAA;sBAAA;oBAAA;kBADF;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QAZF,eA4BE,QAAC,GAAD;kBAAK,SAAS,EAAC,6BAAf;kBAAA,uBACE,QAAC,GAAD;oBAAK,SAAS,EAAC,wDAAf;oBAAA,uBACE,QAAC,wBAAD,OAA8BD;oBAA9B;sBAAA;sBAAA;sBAAA;oBAAA;kBADF;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QA5BF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YARJ;cAAA;cAAA;cAAA;YAAA,QADD;UAAA;QADH;UAAA;UAAA;UAAA;QAAA,QADF,eAiDE,QAAC,KAAD;UACE,MAAM,EAAEtD,YADV;UAEE,MAAM,EAAE,MAAM;YACZ4B,UAAU;UACX,CAJH;UAKE,IAAI,EAAC;QALP;UAAA;UAAA;UAAA;QAAA,QAjDF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAmED,CApED,MAqEK;IACH,oBACE,QAAC,KAAD,CAAO,QAAP;MAAA;MAAA;MAAA;IAAA,QADF;EAGD;AACF,CAhQD;;GAAMjC,U;UAEa9B,W,EACDG,U,EAYZJ,W;;;KAfA+B,U;AAkQN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}