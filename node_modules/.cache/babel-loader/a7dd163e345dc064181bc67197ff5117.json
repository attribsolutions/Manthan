{"ast":null,"code":"import _objectSpread from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{POST_METHOD_FOR_DRIVER_MASTER_SUCCESS,GET_METHOD_FOR_DRIVER_LIST_SUCCESS,DELETE_DRIVER_TYPE_ID_SUCCESS,EDIT_DRIVER_TYPE_ID_SUCCESS,UPDATE_DRIVER_TYPE_ID_SUCCESS}from\"./actionType\";var INIT_STATE={PostDataMessage:{Status:false},DriverList:[],deleteMessage:{Status:false},editData:{Status:false},updateMessage:{Status:false}};var DriverReducer=function DriverReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INIT_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case POST_METHOD_FOR_DRIVER_MASTER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{PostDataMessage:action.payload});case GET_METHOD_FOR_DRIVER_LIST_SUCCESS:return _objectSpread(_objectSpread({},state),{},{DriverList:action.payload});case DELETE_DRIVER_TYPE_ID_SUCCESS:return _objectSpread(_objectSpread({},state),{},{deleteMessage:action.payload});case EDIT_DRIVER_TYPE_ID_SUCCESS:return _objectSpread(_objectSpread({},state),{},{editData:action.payload});case UPDATE_DRIVER_TYPE_ID_SUCCESS:return _objectSpread(_objectSpread({},state),{},{updateMessage:action.payload});default:return state;}};export default DriverReducer;","map":{"version":3,"names":["POST_METHOD_FOR_DRIVER_MASTER_SUCCESS","GET_METHOD_FOR_DRIVER_LIST_SUCCESS","DELETE_DRIVER_TYPE_ID_SUCCESS","EDIT_DRIVER_TYPE_ID_SUCCESS","UPDATE_DRIVER_TYPE_ID_SUCCESS","INIT_STATE","PostDataMessage","Status","DriverList","deleteMessage","editData","updateMessage","DriverReducer","state","action","type","payload"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/DriverRedux/reducer.js"],"sourcesContent":["import {\r\n    POST_METHOD_FOR_DRIVER_MASTER_SUCCESS,\r\n    GET_METHOD_FOR_DRIVER_LIST_SUCCESS,\r\n    DELETE_DRIVER_TYPE_ID_SUCCESS,\r\n    EDIT_DRIVER_TYPE_ID_SUCCESS,\r\n    UPDATE_DRIVER_TYPE_ID_SUCCESS\r\n  } from \"./actionType\";\r\n  \r\n  const INIT_STATE = {\r\n    PostDataMessage: { Status: false },\r\n    DriverList: [],\r\n    deleteMessage: { Status: false },\r\n    editData: { Status: false },\r\n    updateMessage: { Status: false },\r\n  }\r\n  const DriverReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n  \r\n      case POST_METHOD_FOR_DRIVER_MASTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          PostDataMessage: action.payload,\r\n        }\r\n  \r\n      case GET_METHOD_FOR_DRIVER_LIST_SUCCESS:\r\n        return {\r\n          ...state,\r\n          DriverList: action.payload,\r\n        }\r\n  \r\n    \r\n  \r\n        case DELETE_DRIVER_TYPE_ID_SUCCESS:\r\n          return {\r\n            ...state,\r\n            deleteMessage: action.payload,\r\n          };\r\n    \r\n        case EDIT_DRIVER_TYPE_ID_SUCCESS:\r\n          return {\r\n            ...state,\r\n            editData: action.payload,\r\n          };\r\n    \r\n        \r\n        case UPDATE_DRIVER_TYPE_ID_SUCCESS:\r\n          return {\r\n            ...state,\r\n            updateMessage: action.payload,\r\n          };\r\n  \r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default DriverReducer"],"mappings":"wGAAA,OACIA,qCADJ,CAEIC,kCAFJ,CAGIC,6BAHJ,CAIIC,2BAJJ,CAKIC,6BALJ,KAMS,cANT,CAQE,GAAMC,WAAU,CAAG,CACjBC,eAAe,CAAE,CAAEC,MAAM,CAAE,KAAV,CADA,CAEjBC,UAAU,CAAE,EAFK,CAGjBC,aAAa,CAAE,CAAEF,MAAM,CAAE,KAAV,CAHE,CAIjBG,QAAQ,CAAE,CAAEH,MAAM,CAAE,KAAV,CAJO,CAKjBI,aAAa,CAAE,CAAEJ,MAAM,CAAE,KAAV,CALE,CAAnB,CAOA,GAAMK,cAAa,CAAG,QAAhBA,cAAgB,EAAgC,IAA/BC,MAA+B,2DAAvBR,UAAuB,IAAXS,OAAW,2CACpD,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKf,sCAAL,CACE,sCACKa,KADL,MAEEP,eAAe,CAAEQ,MAAM,CAACE,OAF1B,GAKF,IAAKf,mCAAL,CACE,sCACKY,KADL,MAEEL,UAAU,CAAEM,MAAM,CAACE,OAFrB,GAOA,IAAKd,8BAAL,CACE,sCACKW,KADL,MAEEJ,aAAa,CAAEK,MAAM,CAACE,OAFxB,GAKF,IAAKb,4BAAL,CACE,sCACKU,KADL,MAEEH,QAAQ,CAAEI,MAAM,CAACE,OAFnB,GAMF,IAAKZ,8BAAL,CACE,sCACKS,KADL,MAEEF,aAAa,CAAEG,MAAM,CAACE,OAFxB,GAMJ,QACE,MAAOH,MAAP,CArCJ,CAuCD,CAxCD,CA0CA,cAAeD,cAAf"},"metadata":{},"sourceType":"module"}