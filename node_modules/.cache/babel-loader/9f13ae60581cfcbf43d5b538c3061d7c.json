{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { Post_MarginMaster_API } from \"../../../helpers/backend_helper\";\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { postMarginMasterDataSuccess } from \"./action\";\nimport { POST_MARGIN_MASTER_DATA } from \"./actionType\";\n\nfunction* Post_MarginMaster_GenratorFunction(_ref) {\n  let {\n    Data\n  } = _ref;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(Post_MarginMaster_API, Data);\n    yield put(SpinnerState(false));\n    yield put(postMarginMasterDataSuccess(response));\n    console.log(\"response\", response);\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\n_c = Post_MarginMaster_GenratorFunction;\n\nfunction* MarginMasterSaga() {\n  yield takeEvery(POST_MARGIN_MASTER_DATA, Post_MarginMaster_GenratorFunction);\n}\n\n_c2 = MarginMasterSaga;\nexport default MarginMasterSaga;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post_MarginMaster_GenratorFunction\");\n$RefreshReg$(_c2, \"MarginMasterSaga\");","map":{"version":3,"names":["call","put","takeEvery","Post_MarginMaster_API","AlertState","SpinnerState","postMarginMasterDataSuccess","POST_MARGIN_MASTER_DATA","Post_MarginMaster_GenratorFunction","Data","response","console","log","error","Type","Status","Message","MarginMasterSaga"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/MarginMasterRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { Post_MarginMaster_API } from \"../../../helpers/backend_helper\";\r\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\nimport {postMarginMasterDataSuccess} from \"./action\";\r\nimport { POST_MARGIN_MASTER_DATA } from \"./actionType\";\r\n\r\n\r\nfunction* Post_MarginMaster_GenratorFunction({ Data }) {\r\n  \r\n    yield put(SpinnerState(true))\r\n    try {\r\n      const response = yield call(Post_MarginMaster_API, Data);\r\n      yield put(SpinnerState(false))\r\n      yield put(postMarginMasterDataSuccess(response));\r\n      console.log(\"response\",response)\r\n    } catch (error) {\r\n      yield put(SpinnerState(false))\r\n      yield put(AlertState({ Type: 4, \r\n        Status: true, Message: \"500 Error Message\",\r\n      }));\r\n    }\r\n  }\r\n  \r\n  function* MarginMasterSaga() {\r\n    yield takeEvery(POST_MARGIN_MASTER_DATA, Post_MarginMaster_GenratorFunction);\r\n  }\r\n  export default MarginMasterSaga;\r\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,SAASC,UAAT,QAA2B,yCAA3B;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAAQC,2BAAR,QAA0C,UAA1C;AACA,SAASC,uBAAT,QAAwC,cAAxC;;AAGA,UAAUC,kCAAV,OAAuD;EAAA,IAAV;IAAEC;EAAF,CAAU;EAEnD,MAAMR,GAAG,CAACI,YAAY,CAAC,IAAD,CAAb,CAAT;;EACA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMV,IAAI,CAACG,qBAAD,EAAwBM,IAAxB,CAA3B;IACA,MAAMR,GAAG,CAACI,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAMJ,GAAG,CAACK,2BAA2B,CAACI,QAAD,CAA5B,CAAT;IACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,QAAvB;EACD,CALD,CAKE,OAAOG,KAAP,EAAc;IACd,MAAMZ,GAAG,CAACI,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAMJ,GAAG,CAACG,UAAU,CAAC;MAAEU,IAAI,EAAE,CAAR;MACnBC,MAAM,EAAE,IADW;MACLC,OAAO,EAAE;IADJ,CAAD,CAAX,CAAT;EAGD;AACF;;KAdOR,kC;;AAgBR,UAAUS,gBAAV,GAA6B;EAC3B,MAAMf,SAAS,CAACK,uBAAD,EAA0BC,kCAA1B,CAAf;AACD;;MAFSS,gB;AAGV,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}