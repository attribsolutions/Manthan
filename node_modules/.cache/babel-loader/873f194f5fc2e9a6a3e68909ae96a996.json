{"ast":null,"code":"import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import{Card,CardBody,Col,Container,Row,Label,CardHeader,FormGroup}from\"reactstrap\";import{AvForm,AvInput}from\"availity-reactstrap-validation\";import{useDispatch,useSelector}from\"react-redux\";import{PostModelsSubmit,updateModuleID,PostModelsSubmitSuccess,editModuleIDSuccess}from\"../../../store/Administrator/ModulesRedux/actions\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import AvField from\"availity-reactstrap-validation/lib/AvField\";import{MetaTags}from\"react-meta-tags\";import{AlertState}from\"../../../store/actions\";import{BreadcrumbShow}from\"../../../store/Utilites/Breadcrumb/actions\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Modules=function Modules(props){var formRef=useRef(null);var dispatch=useDispatch();var history=useHistory();var editDataGatingFromList=props.state;var propsPageMode=props.pageMode;var pageModeProps=props.pageMode;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),EditData=_useState2[0],setEditData=_useState2[1];var _useState3=useState(\"save\"),_useState4=_slicedToArray(_useState3,2),pageMode=_useState4[0],setPageMode=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),userPageAccessState=_useState6[0],setUserPageAccessState=_useState6[1];//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{PostAPIResponse:state.Modules.modulesSubmitSuccesss,RoleAccessModifiedinSingleArray:state.Login.RoleAccessUpdateData};}),PostAPIResponse=_useSelector.PostAPIResponse,RoleAccessModifiedinSingleArray=_useSelector.RoleAccessModifiedinSingleArray;// userAccess useEffect\nuseEffect(function(){var userAcc=undefined;if(editDataGatingFromList===undefined){var locationPath=history.location.pathname;userAcc=RoleAccessModifiedinSingleArray.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});}else if(!(editDataGatingFromList===undefined)){var relatatedPage=props.relatatedPage;userAcc=RoleAccessModifiedinSingleArray.find(function(inx){return\"/\".concat(inx.ActualPagePath)===relatatedPage;});}if(!(userAcc===undefined)){setUserPageAccessState(userAcc);}},[RoleAccessModifiedinSingleArray]);// This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\nuseEffect(function(){if(!(userPageAccessState==='')){document.getElementById(\"txtName\").focus();}if(!(editDataGatingFromList===undefined)){setEditData(editDataGatingFromList);setPageMode(pageModeProps);dispatch(editModuleIDSuccess({Status:false}));dispatch(BreadcrumbShow(editDataGatingFromList.Name));}else if(!(propsPageMode===undefined)){setPageMode(propsPageMode);}},[editDataGatingFromList,propsPageMode]);// This UseEffect clear Form Data and when modules Save Successfully.\nuseEffect(function(){if(PostAPIResponse.Status===true&&PostAPIResponse.StatusCode===200&&!(pageMode===\"dropdownAdd\")){dispatch(PostModelsSubmitSuccess({Status:false}));formRef.current.reset();if(pageMode===\"dropdownAdd\"){dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message,RedirectPath:'/ModuleList'}));}}else if(PostAPIResponse.Status===true&&!(pageMode===\"dropdownAdd\")){dispatch(PostModelsSubmitSuccess({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(PostAPIResponse.Message),RedirectPath:false,AfterResponseAction:false}));}},[PostAPIResponse]);//'Save' And 'Update' Button Handller\nvar FormSubmitButton_Handler=function FormSubmitButton_Handler(event,values){var jsonBody=JSON.stringify({Name:values.Name,DisplayIndex:values.DisplayIndex,isActive:values.IsActive,Icon:values.Icon,CreatedBy:9,UpdatedBy:9});if(pageMode==='edit'){dispatch(updateModuleID(jsonBody,EditData.id));}else{dispatch(PostModelsSubmit(jsonBody));}};// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(pageMode===\"edit\"||pageMode===\"copy\"||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsx(\"title\",{children:\"Module| FoodERP-React FrontEnd\"})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsx(Container,{fluid:true,children:/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(AvForm,{onValidSubmit:function onValidSubmit(e,v){FormSubmitButton_Handler(e,v);},ref:formRef,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"validationCustom01\",children:\"Name \"}),/*#__PURE__*/_jsx(AvField,{name:\"Name\",id:\"txtName\",value:EditData.Name,type:\"text\",placeholder:\"Please Enter Name\",autoComplete:\"off\",validate:{required:{value:true,errorMessage:'Please Enter Name'}},onChange:function onChange(e){dispatch(BreadcrumbShow(e.target.value));}})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"validationCustom01\",children:\"Display Index \"}),/*#__PURE__*/_jsx(AvField,{name:\"DisplayIndex\",autoComplete:\"off\",placeholder:\"Please Enter DisplayIndex\",value:EditData.DisplayIndex,type:\"text\",validate:{number:true,required:{value:true,errorMessage:'Display Index is Required'},tel:{pattern:/^\\d{1,4}$/,errorMessage:'Only Number is Required (Only Two Digit) '}}})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"validationCustom01\",children:\"Icon \"}),/*#__PURE__*/_jsx(AvField,{name:\"Icon\",autoComplete:\"off\",placeholder:\"Please Enter IconPath\",value:EditData.Icon,type:\"text\",validate:{required:{value:true,errorMessage:'Please Enter Icon'}}})]})}),/*#__PURE__*/_jsx(FormGroup,{className:\"mb-2 col col-sm-5\",children:/*#__PURE__*/_jsxs(Row,{className:\"justify-content-md-left\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"horizontal-firstname-input\",className:\"col-sm-3 col-form-label\",children:\"Active \"}),/*#__PURE__*/_jsx(Col,{md:2,style:{marginTop:'9px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-check form-switch form-switch-md mb-3\",dir:\"ltr\",children:[/*#__PURE__*/_jsx(AvInput,{type:\"checkbox\",className:\"form-check-input\",id:\"customSwitchsizemd\",defaultChecked:EditData.isActive,name:\"IsActive\"// defaultChecked\n}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"customSwitchsizemd\"})]})})]})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:/*#__PURE__*/_jsx(\"div\",{children:pageMode===\"edit\"?userPageAccessState.RoleAccess_IsEdit?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Update Module\",className:\"btn btn-success w-md\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-edit me-2\"}),\"Update\"]}):/*#__PURE__*/_jsx(_Fragment,{}):userPageAccessState.RoleAccess_IsSave?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Save Module\",className:\"btn btn-primary w-md\",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save me-2\"}),\" Save\"]}):/*#__PURE__*/_jsx(_Fragment,{})})})})})]})})})})})})]})})]})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default Modules;// if (!(userPageAccessState === '')) {\n// }\n// else {\n//     return (\n//         <React.Fragment></React.Fragment>\n//     )\n// }","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardBody","Col","Container","Row","Label","CardHeader","FormGroup","AvForm","AvInput","useDispatch","useSelector","PostModelsSubmit","updateModuleID","PostModelsSubmitSuccess","editModuleIDSuccess","Breadcrumb","AvField","MetaTags","AlertState","BreadcrumbShow","useHistory","Modules","props","formRef","dispatch","history","editDataGatingFromList","state","propsPageMode","pageMode","pageModeProps","EditData","setEditData","setPageMode","userPageAccessState","setUserPageAccessState","PostAPIResponse","modulesSubmitSuccesss","RoleAccessModifiedinSingleArray","Login","RoleAccessUpdateData","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","document","getElementById","focus","Status","Name","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","AfterResponseAction","FormSubmitButton_Handler","event","values","jsonBody","DisplayIndex","isActive","IsActive","Icon","CreatedBy","UpdatedBy","id","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","e","v","required","value","errorMessage","target","number","tel","pattern","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/ModulesPages/Modules.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Col,\r\n    Container,\r\n    Row,\r\n    Label,\r\n    CardHeader,\r\n    FormGroup,\r\n} from \"reactstrap\";\r\nimport {\r\n    AvForm,\r\n    AvInput,\r\n} from \"availity-reactstrap-validation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    PostModelsSubmit,\r\n    updateModuleID,\r\n    PostModelsSubmitSuccess,\r\n    editModuleIDSuccess,\r\n} from \"../../../store/Administrator/ModulesRedux/actions\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport AvField from \"availity-reactstrap-validation/lib/AvField\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Modules = (props) => {\r\n\r\n    const formRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    let editDataGatingFromList = props.state;\r\n    let propsPageMode = props.pageMode;\r\n    let pageModeProps=props.pageMode\r\n\r\n    const [EditData, setEditData] = useState([]);\r\n    const [pageMode, setPageMode] = useState(\"save\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n        PostAPIResponse: state.Modules.modulesSubmitSuccesss,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n\r\n    }));\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n\r\n        let userAcc = undefined\r\n        if ((editDataGatingFromList === undefined)) {\r\n    \r\n          let locationPath = history.location.pathname\r\n          userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n          })\r\n        }\r\n        else if (!(editDataGatingFromList === undefined)) {\r\n          let relatatedPage = props.relatatedPage\r\n          userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === relatatedPage)\r\n          })\r\n    \r\n        }\r\n        if (!(userAcc === undefined)) {\r\n          setUserPageAccessState(userAcc)\r\n        }\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n\r\n        if (!(editDataGatingFromList === undefined)) {\r\n\r\n            setEditData(editDataGatingFromList);\r\n            setPageMode(pageModeProps);\r\n            dispatch(editModuleIDSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGatingFromList.Name))\r\n           \r\n        }\r\n        else if (!(propsPageMode === undefined)) {\r\n            setPageMode(propsPageMode)\r\n            \r\n        }\r\n    }, [editDataGatingFromList, propsPageMode])\r\n\r\n    // This UseEffect clear Form Data and when modules Save Successfully.\r\n    useEffect(() => {\r\n\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)&&!(pageMode===\"dropdownAdd\")) {\r\n            dispatch(PostModelsSubmitSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/ModuleList',\r\n\r\n                }))\r\n            }\r\n        } else if ((PostAPIResponse.Status === true) && !(pageMode===\"dropdownAdd\")) {\r\n            dispatch(PostModelsSubmitSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostAPIResponse.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n    //'Save' And 'Update' Button Handller\r\n    const FormSubmitButton_Handler = (event, values) => {\r\n\r\n        const jsonBody = JSON.stringify({\r\n            Name: values.Name,\r\n            DisplayIndex: values.DisplayIndex,\r\n            isActive: values.IsActive,\r\n            Icon: values.Icon,\r\n            CreatedBy: 9,\r\n            UpdatedBy: 9\r\n        });\r\n\r\n        if (pageMode === 'edit') {\r\n            dispatch(updateModuleID(jsonBody, EditData.id));\r\n        }\r\n        else {\r\n            dispatch(PostModelsSubmit(jsonBody));\r\n        }\r\n    };\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    let IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\")||(pageMode===\"copy\")||(pageMode===\"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <MetaTags>\r\n                        <title>Module| FoodERP-React FrontEnd</title>\r\n                    </MetaTags>\r\n                    <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n                    <Container fluid  >\r\n\r\n                        <Card className=\"text-black\" >\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <AvForm onValidSubmit={(e, v) => { FormSubmitButton_Handler(e, v) }}\r\n                                    ref={formRef}\r\n                                >\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}  >\r\n                                            <Card >\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \" >\r\n                                                            <Label htmlFor=\"validationCustom01\">Name </Label>\r\n                                                            <AvField\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={EditData.Name}\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete='off'\r\n                                                                validate={{\r\n                                                                    required: { value: true, errorMessage: 'Please Enter Name' },\r\n                                                                }}\r\n                                                                onChange={(e) => { dispatch(BreadcrumbShow(e.target.value)) }}\r\n                                                            />\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \" >\r\n                                                            <Label htmlFor=\"validationCustom01\">Display Index </Label>\r\n                                                            <AvField name=\"DisplayIndex\" autoComplete='off'\r\n                                                                placeholder=\"Please Enter DisplayIndex\"\r\n                                                                value={EditData.DisplayIndex} type=\"text\"\r\n                                                                validate={{\r\n                                                                    number: true,\r\n                                                                    required: { value: true, errorMessage: 'Display Index is Required' },\r\n                                                                    tel: {\r\n                                                                        pattern: /^\\d{1,4}$/,\r\n                                                                        errorMessage: 'Only Number is Required (Only Two Digit) '\r\n                                                                    }\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \" >\r\n                                                            <Label htmlFor=\"validationCustom01\">Icon </Label>\r\n                                                            <AvField name=\"Icon\"\r\n                                                                autoComplete='off'\r\n                                                                placeholder=\"Please Enter IconPath\"\r\n                                                                value={EditData.Icon} type=\"text\" validate={{\r\n                                                                    required: { value: true, errorMessage: 'Please Enter Icon' },\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                    <FormGroup className=\"mb-2 col col-sm-5\">\r\n                                                        <Row className=\"justify-content-md-left\">\r\n                                                            <Label htmlFor=\"horizontal-firstname-input\" className=\"col-sm-3 col-form-label\" >Active </Label>\r\n                                                            <Col md={2} style={{ marginTop: '9px' }} >\r\n                                                                <div className=\"form-check form-switch form-switch-md mb-3\" dir=\"ltr\">\r\n                                                                    <AvInput type=\"checkbox\" className=\"form-check-input\" id=\"customSwitchsizemd\"\r\n                                                                        defaultChecked={EditData.isActive}\r\n                                                                        name=\"IsActive\"\r\n                                                                    // defaultChecked\r\n                                                                    />\r\n                                                                    <label className=\"form-check-label\" htmlFor=\"customSwitchsizemd\"></label>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </FormGroup>\r\n\r\n                                                    <FormGroup >\r\n                                                        <Row >\r\n                                                            <Col sm={2}>\r\n                                                                <div>\r\n                                                                    {\r\n                                                                        pageMode === \"edit\" ?\r\n                                                                            userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                <button\r\n                                                                                    type=\"submit\"\r\n                                                                                    data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Module\"\r\n                                                                                    className=\"btn btn-success w-md\"\r\n                                                                                >\r\n                                                                                    <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                </button>\r\n                                                                                :\r\n                                                                                <></>\r\n                                                                            : (\r\n                                                                                userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Module\"\r\n                                                                                        className=\"btn btn-primary w-md\"\r\n                                                                                    > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                            )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </FormGroup >\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </AvForm>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\nexport default Modules\r\n// if (!(userPageAccessState === '')) {\r\n\r\n// }\r\n// else {\r\n//     return (\r\n//         <React.Fragment></React.Fragment>\r\n//     )\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}