{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\DriverPage\\\\DriverMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertState, commonPageField } from \"../../../store/actions\";\nimport { PostMethodForDriverMaster, getMethodForDriverList, PostMethod_ForDriverMasterSuccess, getMethod_ForDriverListSuccess, editDriverTypeSuccess, updateDriverTypeID } from \"../../../store/Administrator/DriverRedux/action\";\nimport { useHistory } from \"react-router-dom\";\nimport Flatpickr from \"react-flatpickr\";\nimport { comAddPageFieldFunc, formValChange, formValid } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\nimport { fieldData } from './validfiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DriverMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let editDataGatingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  const formRef = useRef(null);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(\"\");\n  const [EditData, setEditData] = useState([]);\n  const [DOB_Date_Select, setDOB_Date_Select] = useState(\"\"); // ////////////////////////////////////\n\n  const [state, setState] = useState({\n    values: {\n      name: 0,\n      address: \"\",\n      uid: \"\",\n      party: ''\n    },\n    fieldLabel: {\n      name: '',\n      address: '',\n      uid: '',\n      party: '',\n      date: \"\"\n    },\n    isError: {\n      name: \"\",\n      address: \"\",\n      uid: \"\",\n      party: '',\n      date: ''\n    },\n    hasValid: {\n      name: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      address: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      uid: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      party: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      date: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  }); //////////////////////////\n  //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    pageFiled,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    PostAPIResponse: state.DriverReducer.PostDataMessage,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\n    pageFiled: state.CommonPageFieldReducer.pageField\n  }));\n  useEffect(() => {// dispatch(getMethodForDriverList());\n    // dispatch(commonPageField(89))\n  }, []); //userAccess useEffect\n\n  useEffect(() => {\n    debugger;\n    let userAcc = undefined;\n\n    if (editDataGatingFromList === undefined) {\n      let locationPath = history.location.pathname;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === locationPath;\n      });\n    } else if (!(editDataGatingFromList === undefined)) {\n      let relatatedPage = props.relatatedPage;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === relatatedPage;\n      });\n    }\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (!(editDataGatingFromList === undefined)) {\n      setEditData(editDataGatingFromList);\n      setPageMode(pageModeProps);\n      setDOB_Date_Select(editDataGatingFromList.DOB);\n      dispatch(editDriverTypeSuccess({\n        Status: false\n      }));\n      dispatch(BreadcrumbShow(editDataGatingFromList.DriverMaster));\n      return;\n    }\n  }, [editDataGatingFromList]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForDriverMasterSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/DriverList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getMethod_ForDriverListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]); // ////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    comAddPageFieldFunc({\n      state,\n      setState,\n      fieldData\n    });\n  }, []);\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n\n  const onChangeDropDown = (e, v) => {\n    const event = {\n      name: v.name,\n      value: e\n    };\n    formValChange({\n      event,\n      state,\n      setState\n    });\n  };\n\n  const onChangeText = event => {\n    formValChange({\n      event,\n      state,\n      setState\n    });\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      console.log(\"isvalid\", values.party.value);\n      const jsonBody = JSON.stringify({\n        Name: values.name,\n        Address: values.address,\n        DOB: DOB_Date_Select,\n        UID: values.uid\n      });\n\n      if (pageMode === 'edit') {\n        dispatch(updateDriverTypeID(jsonBody, EditData.id));\n      } else {\n        dispatch(PostMethodForDriverMaster(jsonBody));\n      }\n    }\n  };\n\n  const options = [{\n    value: 'active',\n    label: 'Active'\n  }, {\n    value: 'inactive',\n    label: 'In Active'\n  }, {\n    value: 'deleted',\n    label: 'Delete'\n  }]; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"DriverMaster | FoodERP-React FrontEnd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.name, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 292,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              type: \"text\",\n                              className: isError.name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              name: \"name\",\n                              placeholder: \"Please Enter Name\",\n                              onChange: e => {\n                                onChangeText(e);\n                                dispatch(BreadcrumbShow(e.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 293,\n                              columnNumber: 61\n                            }, this), isError.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 305,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 291,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"4\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  children: \"Date of Birth\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 311,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                                  id: \"FSSAIExipry\",\n                                  name: \"FSSAIExipry\",\n                                  value: DOB_Date_Select,\n                                  className: `form-control ${isError.party.length > 0 ? 'is-invalid' : ''} d-block p-2 bg-white text-dark`,\n                                  placeholder: \"YYYY-MM-DD\",\n                                  autoComplete: \"off\",\n                                  options: {\n                                    altInput: true,\n                                    altFormat: \"F j, Y\",\n                                    dateFormat: \"Y-m-d\",\n                                    style: [function (date) {\n                                      debugger; // return True to disable\n\n                                      return date.getDay() === 0 || date.getDay() === 6;\n                                    }]\n                                  },\n                                  onChange: (selectedDates, dateStr, instance) => {\n                                    setDOB_Date_Select(dateStr);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 312,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 310,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 309,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 308,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"4\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: [fieldLabel.party, \" \"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 341,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                  defaultValue: options[0],\n                                  isSearchable: false,\n                                  className: \"react-dropdown\",\n                                  onChange: onChangeDropDown,\n                                  classNamePrefix: \"dropdown\",\n                                  options: options,\n                                  name: \"party\",\n                                  styles: {\n                                    control: base => ({ ...base,\n                                      border: isError.party.length > 0 ? '1px solid red' : ''\n                                    })\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 342,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 340,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 339,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 338,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [fieldLabel.address, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 367,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                type: \"text\",\n                                value: EditData.Address,\n                                className: isError.address.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                name: \"address\",\n                                placeholder: \"Please Enter Address\",\n                                autoComplete: \"off\",\n                                onChange: onChangeText\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 368,\n                                columnNumber: 65\n                              }, this), isError.address.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.address\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 378,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 366,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 365,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-4 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: fieldLabel.uid\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 385,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"uid\",\n                                value: EditData.UID,\n                                type: \"text\",\n                                placeholder: \"Please Enter UID\",\n                                autoComplete: \"off\",\n                                className: isError.uid.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                                onChange: onChangeText\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 386,\n                                columnNumber: 65\n                              }, this), isError.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.uid\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 396,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 384,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 383,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Update Party Type\",\n                                    className: \"btn btn-success w-md mt-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fas fa-edit me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 413,\n                                      columnNumber: 89\n                                    }, this), \"Update\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 408,\n                                    columnNumber: 85\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Save Party Type\",\n                                    className: \"btn btn-primary w-md mt-3 \",\n                                    children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"fas fa-save me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 424,\n                                      columnNumber: 91\n                                    }, this), \" Save\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 420,\n                                    columnNumber: 89\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 404,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 403,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 402,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 401,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(DriverMaster, \"mjcFbOK3eHRyl7fCoyLcTMweQR4=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = DriverMaster;\nexport default DriverMaster;\nconst Email = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst Mobile = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst NotNull = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","commonPageFieldSuccess","useDispatch","useSelector","AlertState","commonPageField","PostMethodForDriverMaster","getMethodForDriverList","PostMethod_ForDriverMasterSuccess","getMethod_ForDriverListSuccess","editDriverTypeSuccess","updateDriverTypeID","useHistory","Flatpickr","comAddPageFieldFunc","formValChange","formValid","fieldData","DriverMaster","props","dispatch","history","editDataGatingFromList","state","pageModeProps","pageMode","formRef","setPageMode","userPageAccessState","setUserPageAccessState","EditData","setEditData","DOB_Date_Select","setDOB_Date_Select","setState","values","name","address","uid","party","fieldLabel","date","isError","hasValid","regExp","inValidMsg","valid","required","PostAPIResponse","pageFiled","RoleAccessModifiedinSingleArray","DriverReducer","PostDataMessage","Login","RoleAccessUpdateData","CommonPageFieldReducer","pageField","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","DOB","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","onChangeDropDown","e","v","event","value","onChangeText","formSubmitHandler","preventDefault","console","log","jsonBody","Name","Address","UID","id","options","label","IsEditMode_Css","marginTop","backgroundColor","PageDescription","PageDescriptionDetails","length","target","altInput","altFormat","dateFormat","style","getDay","selectedDates","dateStr","instance","control","base","border","RoleAccess_IsEdit","RoleAccess_IsSave","Email","RegExp","Mobile","NotNull"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/DriverMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\n\r\nimport {\r\n    PostMethodForDriverMaster,\r\n    getMethodForDriverList,\r\n    PostMethod_ForDriverMasterSuccess,\r\n    getMethod_ForDriverListSuccess,\r\n    editDriverTypeSuccess,\r\n    updateDriverTypeID\r\n} from \"../../../store/Administrator/DriverRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValChange,\r\n    formValid,\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\n\r\nimport { fieldData } from './validfiles'\r\n\r\n\r\nconst DriverMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    let editDataGatingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    const formRef = useRef(null);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(\"\");\r\n    const [EditData, setEditData] = useState([]);\r\n    const [DOB_Date_Select, setDOB_Date_Select] = useState(\"\");\r\n\r\n    // ////////////////////////////////////\r\n    const [state, setState] = useState({\r\n        values: {\r\n            name: 0,\r\n            address: \"\",\r\n            uid: \"\",\r\n            party: ''\r\n        },\r\n        fieldLabel: {\r\n            name: '',\r\n            address: '',\r\n            uid: '',\r\n            party: '',\r\n            date:\"\"\r\n        },\r\n\r\n        isError: {\r\n            name: \"\",\r\n            address: \"\",\r\n            uid: \"\",\r\n            party: '',\r\n            date:''\r\n        },\r\n\r\n        hasValid: {\r\n            name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            address: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            uid: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            party: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            date:{\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            }\r\n        },\r\n        required: {\r\n           \r\n        }\r\n    }\r\n    )\r\n    //////////////////////////\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        PostAPIResponse,\r\n        pageFiled,\r\n        RoleAccessModifiedinSingleArray\r\n    } = useSelector((state) => ({\r\n        PostAPIResponse: state.DriverReducer.PostDataMessage,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n        pageFiled: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n\r\n    useEffect(() => {\r\n        // dispatch(getMethodForDriverList());\r\n        // dispatch(commonPageField(89))\r\n\r\n    }, []);\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n        debugger\r\n        let userAcc = undefined\r\n        if ((editDataGatingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGatingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGatingFromList === undefined)) {\r\n\r\n            setEditData(editDataGatingFromList);\r\n            setPageMode(pageModeProps);\r\n            setDOB_Date_Select(editDataGatingFromList.DOB)\r\n\r\n            dispatch(editDriverTypeSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGatingFromList.DriverMaster))\r\n            return\r\n        }\r\n    }, [editDataGatingFromList])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/DriverList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForDriverListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n\r\n    // ////////////////////////////////////////////////////////////\r\n    useEffect(() => {\r\n        comAddPageFieldFunc({ state, setState, fieldData })\r\n    }, [])\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n    const onChangeDropDown = (e, v) => {\r\n        const event = { name: v.name, value: e }\r\n        formValChange({ event, state, setState })\r\n    }\r\n    const onChangeText = (event) => {\r\n        formValChange({ event, state, setState })\r\n    }\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n\r\n            console.log(\"isvalid\", values.party.value)\r\n\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.name,\r\n                Address: values.address,\r\n                DOB: DOB_Date_Select,\r\n                UID: values.uid\r\n            });\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateDriverTypeID(jsonBody, EditData.id));\r\n            }\r\n\r\n            else {\r\n                dispatch(PostMethodForDriverMaster(jsonBody));\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const options = [\r\n        { value: 'active', label: 'Active' },\r\n        { value: 'inactive', label: 'In Active' },\r\n        { value: 'deleted', label: 'Delete' },\r\n    ];\r\n\r\n\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>DriverMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        {/* <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} /> */}\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.name} </Label>\r\n                                                            <Input\r\n                                                                type=\"text\"\r\n                                                                className={isError.name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                name=\"name\"\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                onChange={(e) => {\r\n                                                                    onChangeText(e)\r\n                                                                    dispatch(BreadcrumbShow(e.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label>Date of Birth</Label>\r\n                                                                    <Flatpickr\r\n                                                                        id=\"FSSAIExipry\"\r\n                                                                        name=\"FSSAIExipry\"\r\n                                                                        value={DOB_Date_Select}\r\n                                                                        className={`form-control ${isError.party.length > 0 ? 'is-invalid' : ''} d-block p-2 bg-white text-dark` }\r\n                                                                        placeholder=\"YYYY-MM-DD\"\r\n                                                                        autoComplete='off'\r\n                                                                        options={{\r\n                                                                            altInput: true,\r\n                                                                            altFormat: \"F j, Y\",\r\n                                                                            dateFormat: \"Y-m-d\",\r\n                                                                           \r\n                                                                                style: [\r\n                                                                                function(date) {\r\n                                                                                    debugger\r\n                                                                                    // return True to disable\r\n                                                                                    return (date.getDay() === 0 || date.getDay() === 6);}],\r\n                                                                        }}\r\n                                                                    \r\n                                                                        onChange={(selectedDates, dateStr, instance) => {\r\n                                                                            setDOB_Date_Select(dateStr)\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label htmlFor=\"validationCustom01\">{fieldLabel.party} </Label>\r\n                                                                    <Select\r\n                                                                        defaultValue={options[0]}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        onChange={onChangeDropDown}\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                        options={options}\r\n                                                                        name=\"party\"\r\n                                                                        styles={{\r\n                                                                            control: base => ({\r\n                                                                                ...base,\r\n                                                                                border: isError.party.length > 0 ? '1px solid red' : '',\r\n\r\n                                                                            })\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n\r\n\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.address} </Label>\r\n                                                                <Input\r\n                                                                    type=\"text\"\r\n                                                                    value={EditData.Address}\r\n                                                                    className={isError.address.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    name=\"address\"\r\n                                                                    placeholder=\"Please Enter Address\"\r\n                                                                    autoComplete='off'\r\n                                                                    onChange={onChangeText}\r\n                                                                />\r\n                                                                {isError.address.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.address}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.uid}</Label>\r\n                                                                <Input\r\n                                                                    name=\"uid\"\r\n                                                                    value={EditData.UID}\r\n                                                                    type=\"text\"\r\n                                                                    placeholder=\"Please Enter UID\"\r\n                                                                    autoComplete='off'\r\n                                                                    className={isError.uid.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    onChange={onChangeText}\r\n                                                                />\r\n                                                                {isError.name.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.uid}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n\r\n                                                        </Row>\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DriverMaster\r\n\r\n\r\n\r\n\r\nconst Email = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\n\r\nconst Mobile = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\nconst NotNull = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)"],"mappings":"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"},"metadata":{},"sourceType":"module"}