{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\VehiclePages\\\\VehicleMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Label, Row, Table, Button, Input } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Tbody, Thead } from \"react-super-responsive-table\";\nimport { AlertState } from \"../../../store/actions\";\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\nimport { PostMethodForVehicleMaster, getMethodForVehicleList, getMethod_DriverList_ForDropDown, getMethod_VehicleTypes_ForDropDown, PostMethod_ForVehicleMasterSuccess, getMethod_ForVehicleListSuccess, editVehicleTypeSuccess, updateVehicleTypeID } from \"../../../store/Administrator/VehicleRedux/action\";\nimport { get_Division_ForDropDown } from \"../../../store/Administrator/ItemsRedux/action\";\nimport { useHistory } from \"react-router-dom\"; // import { actionChannel } from \"redux-saga/effects\";\n\nimport { comAddPageFieldFunc, formValChange, formValid } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\nimport { fieldData } from '../VehiclePages/FieldData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VehicleMaster = props => {\n  _s();\n\n  //*** \"isEditdata get all data from ModuleID for Binding  Form controls\n  let editDataGatingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  let propsPageMode = props.pageMode;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const formRef = useRef(null);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(123);\n  const [EditData, setEditData] = useState([]);\n  const [divisionData, setDivisionData] = useState([]);\n  const [divisionType_dropdown_Select, setDivisionType_dropdown_Select] = useState(\"\");\n  const [DriverList_dropdown_Select, setDriverList_dropdown_Select] = useState(\"\");\n  const [VehicleType_dropdown_Select, setVehicleType_dropdown_Select] = useState(\"\"); //  const [VehicleList_dropdown_Select, setVehicleList_dropdown_Select] = useState(\"\");\n  //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    VehicleList,\n    Divisions,\n    VehicleTypes,\n    DriverList_redux,\n    pageFiled,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    PostAPIResponse: state.VehicleReducer.PostDataMessage,\n    VehicleList: state.VehicleReducer.VehicleList,\n    Divisions: state.ItemMastersReducer.Division,\n    VehicleTypes: state.VehicleReducer.VehicleTypes,\n    DriverList_redux: state.VehicleReducer.DriverList,\n    pageFiled: state.CommonPageFieldReducer.pageField,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData\n  }));\n  {\n    /** Dyanamic Page access state and OnChange function */\n  }\n  {\n    /*start */\n  }\n  const [state, setState] = useState({\n    values: {\n      DriverName: \"\",\n      Vehicletype: \"\",\n      VehicleNumber: \"\",\n      Description: \"\",\n      VehicleDivisions: \"\"\n    },\n    fieldLabel: {\n      DriverName: '',\n      VehicleType: '',\n      VehicleNumber: '',\n      Description: '',\n      Division: ''\n    },\n    isError: {\n      DriverName: '',\n      VehicleType: '',\n      VehicleNumber: '',\n      Description: '',\n      Division: ''\n    },\n    hasValid: {\n      DriverName: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      VehicleType: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      VehicleNumber: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      Description: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      Division: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  });\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n\n  const onChangeText = event => {\n    formValChange({\n      event,\n      state,\n      setState\n    });\n  };\n\n  const onChangeDropDown = (e, v) => {\n    const event = {\n      name: v.name,\n      value: e\n    };\n    formValChange({\n      event,\n      state,\n      setState\n    });\n  };\n\n  useEffect(() => {\n    comAddPageFieldFunc({\n      state,\n      setState,\n      fieldData\n    });\n  }, [fieldData]);\n  {\n    /*End */\n  } //userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = undefined;\n\n    if (editDataGatingFromList === undefined) {\n      let locationPath = history.location.pathname;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === locationPath;\n      });\n    } else if (!(editDataGatingFromList === undefined)) {\n      let relatatedPage = props.relatatedPage;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === relatatedPage;\n      });\n    }\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    //   if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (!(editDataGatingFromList === undefined)) {\n      setEditData(editDataGatingFromList);\n      setPageMode(pageModeProps);\n      setDriverList_dropdown_Select({\n        value: editDataGatingFromList.Driver,\n        label: editDataGatingFromList.DriverName\n      });\n      setVehicleType_dropdown_Select({\n        value: editDataGatingFromList.VehicleType,\n        label: editDataGatingFromList.VehicleTypeName\n      });\n      let division = editDataGatingFromList.VehicleDivisions.map(index => {\n        return {\n          label: index.DivisionName,\n          value: index.Division\n        };\n      });\n      setDivisionData(division);\n      dispatch(editVehicleTypeSuccess({\n        Status: false\n      }));\n      dispatch(BreadcrumbShow(editDataGatingFromList.VehicleTypeName));\n      return;\n    } else if (!(propsPageMode === undefined)) {\n      setPageMode(propsPageMode);\n    }\n  }, [editDataGatingFromList, propsPageMode]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(PostMethod_ForVehicleMasterSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/VehicleList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getMethod_ForVehicleListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n  useEffect(() => {\n    dispatch(getMethodForVehicleList());\n    dispatch(getMethod_DriverList_ForDropDown());\n    dispatch(getMethod_VehicleTypes_ForDropDown());\n    dispatch(get_Division_ForDropDown());\n  }, [dispatch]);\n  const DivisionType_DropdownOptions = Divisions.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function DivisionType_DropDown_handller(e) {\n    setDivisionType_dropdown_Select(e);\n  }\n\n  const DriverList_DropdownOptions = DriverList_redux.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function DriverList_DropDown_handller(e) {\n    setDriverList_dropdown_Select(e);\n  }\n\n  const VehicleType_DropdownOptions = VehicleTypes.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function VehicleType_DropDown_handller(e) {\n    setVehicleType_dropdown_Select(e);\n  } // const VehicleList_DropdownOptions = VehicleList_redux.map((data) => ({\n  //     value: data.id,\n  //     label: data.Name\n  // }));\n  // function VehicleList_DropDown_handller(e) {\n  //     setVehicleList_dropdown_Select(e)\n  // }\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      var division = divisionData.map(i => ({\n        Division: i.value\n      }));\n      const jsonBody = JSON.stringify({\n        VehicleNumber: values.VehicleNumber,\n        Description: values.Description,\n        Driver: values.DriverName.value,\n        VehicleType: values.Vehicletype.value,\n        VehicleDivisions: values.division.value\n      });\n\n      if (pageMode === 'edit') {\n        dispatch(updateVehicleTypeID(jsonBody, EditData.id));\n      } else {\n        dispatch(PostMethodForVehicleMaster(jsonBody));\n        console.log(\"jsonBody\", jsonBody);\n      }\n    }\n  }; /// Role Table Validation\n\n\n  function AddDivisionHandler() {\n    const find = divisionData.find(element => {\n      return element.value === divisionType_dropdown_Select.value;\n    });\n\n    if (divisionType_dropdown_Select.length <= 0) {\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: \"Select One Role\"\n      }));\n    } else if (find === undefined) {\n      setDivisionData([...divisionData, divisionType_dropdown_Select]);\n    } else {\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: \"DivisionType already Exists \"\n      }));\n    }\n  } // For Delete Button in table\n\n\n  function UserRoles_DeleteButton_Handller(tableValue) {\n    setDivisionData(divisionData.filter(item => !(item.value === tableValue)));\n  } // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: [userPageAccessState.PageHeading, \" | FoodERP-React FrontEnd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                ref: formRef,\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          className: \"mt-3\",\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            md: \"3\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [\" \", fieldLabel.DriverName, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 377,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 12,\n                                children: /*#__PURE__*/_jsxDEV(Select, {\n                                  name: \"DriverName\",\n                                  Value: values.DriverName,\n                                  isSearchable: false,\n                                  className: \"react-dropdown\",\n                                  classNamePrefix: \"dropdown\",\n                                  onChange: onChangeDropDown,\n                                  options: DriverList_DropdownOptions\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 379,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 378,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 376,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 375,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"1\",\n                            children: \"  \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 394,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"3\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [\"  \", fieldLabel.VehicleType, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 397,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 12,\n                                children: /*#__PURE__*/_jsxDEV(Select, {\n                                  name: \"VehicleType\",\n                                  Value: values.Vehicletype,\n                                  isSearchable: false,\n                                  className: \"react-dropdown\",\n                                  classNamePrefix: \"dropdown\",\n                                  onChange: onChangeDropDown,\n                                  options: VehicleType_DropdownOptions\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 399,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 398,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 396,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 395,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 414,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-2 col col-sm-8 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [\" \", fieldLabel.VehicleNumber, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 418,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                name: \"VehicleNumber\",\n                                id: \"VehicleNumber\",\n                                value: EditData.VehicleNumber,\n                                type: \"text\",\n                                placeholder: \"Please Enter VehicleNumber\",\n                                autoComplete: \"off\",\n                                onChange: e => {\n                                  onChangeText(e);\n                                  dispatch(BreadcrumbShow(e.target.value));\n                                } // tel: {\n                                //     pattern: /^[A-Z]{2}[ -]{0,1}[0-9]{2}[ -]{0,1}[A-Z]{1,2}[ -]{0,1}[0-9]{1,4}$/,\n                                //     errorMessage: \"Please Enter valid VehicleNumber.(Ex:MH 15 AA 1234)\"\n                                // }\n\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 419,\n                                columnNumber: 65\n                              }, this), isError.VehicleNumber.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"invalid-feedback\",\n                                children: isError.VehicleNumber\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 438,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 417,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 416,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              md: \"3\",\n                              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3\",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: [\" \", fieldLabel.Description, \"  \"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 447,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                                  name: \"Description\",\n                                  id: \"Description\",\n                                  value: EditData.Description,\n                                  type: \"text\",\n                                  placeholder: \"Please Enter Description\",\n                                  autoComplete: \"off\",\n                                  onChange: e => {\n                                    onChangeText(e);\n                                    dispatch(BreadcrumbShow(e.target.value));\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 448,\n                                  columnNumber: 69\n                                }, this), isError.VehicleNumber.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"invalid-feedback\",\n                                  children: isError.VehicleNumber\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 461,\n                                  columnNumber: 73\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 446,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 445,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 444,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"col col-sm-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom21\",\n                                children: fieldLabel.Division\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 469,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                name: \"Division\",\n                                Value: values.VehicleDivisions,\n                                isSearchable: false,\n                                className: \"react-dropdown\",\n                                classNamePrefix: \"dropdown\",\n                                onChange: onChangeDropDown,\n                                options: DivisionType_DropdownOptions\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 470,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 468,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Col, {\n                              sm: 1,\n                              style: {\n                                marginTop: '28px'\n                              },\n                              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"button\",\n                                className: \"btn btn-sm mt-1 mb-0 btn-light  btn-outline-primary  \",\n                                onClick: () => AddDivisionHandler(),\n                                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"dripicons-plus \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 490,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 483,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 481,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Col, {\n                              sm: 3,\n                              style: {\n                                marginTop: '28px'\n                              },\n                              children: divisionData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"table-responsive\",\n                                children: /*#__PURE__*/_jsxDEV(Table, {\n                                  className: \"table table-bordered  text-center\",\n                                  children: [/*#__PURE__*/_jsxDEV(Thead, {\n                                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                        children: \"Division Type\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 500,\n                                        columnNumber: 85\n                                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                        children: \"Action\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 502,\n                                        columnNumber: 85\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 499,\n                                      columnNumber: 81\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 498,\n                                    columnNumber: 77\n                                  }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                                    children: divisionData.map(TableValue => /*#__PURE__*/_jsxDEV(\"tr\", {\n                                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                        children: TableValue.label\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 508,\n                                        columnNumber: 89\n                                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                          className: \"mdi mdi-trash-can d-block text-danger font-size-20\",\n                                          onClick: () => {\n                                            UserRoles_DeleteButton_Handller(TableValue.value);\n                                          }\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 512,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 511,\n                                        columnNumber: 89\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 507,\n                                      columnNumber: 85\n                                    }, this))\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 505,\n                                    columnNumber: 77\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 497,\n                                  columnNumber: 73\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 496,\n                                columnNumber: 69\n                              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 493,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 467,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Update Vehicle Type\",\n                                    className: \"btn btn-success w-md mt-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fas fa-edit me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 541,\n                                      columnNumber: 89\n                                    }, this), \"Update\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 536,\n                                    columnNumber: 85\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Save Vehicle Type\",\n                                    className: \"btn btn-primary w-md mt-3 \",\n                                    children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"fas fa-save me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 552,\n                                      columnNumber: 91\n                                    }, this), \" Save\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 548,\n                                    columnNumber: 89\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 532,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 531,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 530,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 529,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 374,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(VehicleMaster, \"axDBKdq7ahNcznks26KGN2mv/10=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = VehicleMaster;\nexport default VehicleMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"VehicleMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Label","Row","Table","Button","Input","AvField","AvForm","Select","MetaTags","BreadcrumbShow","useDispatch","useSelector","Tbody","Thead","AlertState","CommonGetRoleAccessFunction","PostMethodForVehicleMaster","getMethodForVehicleList","getMethod_DriverList_ForDropDown","getMethod_VehicleTypes_ForDropDown","PostMethod_ForVehicleMasterSuccess","getMethod_ForVehicleListSuccess","editVehicleTypeSuccess","updateVehicleTypeID","get_Division_ForDropDown","useHistory","comAddPageFieldFunc","formValChange","formValid","fieldData","VehicleMaster","props","editDataGatingFromList","state","pageModeProps","pageMode","propsPageMode","dispatch","history","formRef","setPageMode","userPageAccessState","setUserPageAccessState","EditData","setEditData","divisionData","setDivisionData","divisionType_dropdown_Select","setDivisionType_dropdown_Select","DriverList_dropdown_Select","setDriverList_dropdown_Select","VehicleType_dropdown_Select","setVehicleType_dropdown_Select","PostAPIResponse","VehicleList","Divisions","VehicleTypes","DriverList_redux","pageFiled","RoleAccessModifiedinSingleArray","VehicleReducer","PostDataMessage","ItemMastersReducer","Division","DriverList","CommonPageFieldReducer","pageField","Login","RoleAccessUpdateData","setState","values","DriverName","Vehicletype","VehicleNumber","Description","VehicleDivisions","fieldLabel","VehicleType","isError","hasValid","regExp","inValidMsg","valid","required","onChangeText","event","onChangeDropDown","e","v","name","value","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","Driver","label","VehicleTypeName","division","map","index","DivisionName","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","DivisionType_DropdownOptions","data","id","Name","DivisionType_DropDown_handller","DriverList_DropdownOptions","DriverList_DropDown_handller","VehicleType_DropdownOptions","VehicleType_DropDown_handller","formSubmitHandler","preventDefault","i","jsonBody","console","log","AddDivisionHandler","element","length","UserRoles_DeleteButton_Handller","tableValue","filter","item","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","target","TableValue","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/VehiclePages/VehicleMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Label,\r\n    Row,\r\n    Table,\r\n    Button,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Tbody, Thead } from \"react-super-responsive-table\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport { PostMethodForVehicleMaster, getMethodForVehicleList, getMethod_DriverList_ForDropDown, getMethod_VehicleTypes_ForDropDown, PostMethod_ForVehicleMasterSuccess, getMethod_ForVehicleListSuccess, editVehicleTypeSuccess, updateVehicleTypeID } from \"../../../store/Administrator/VehicleRedux/action\";\r\nimport { get_Division_ForDropDown, } from \"../../../store/Administrator/ItemsRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { actionChannel } from \"redux-saga/effects\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValChange,\r\n    formValid,\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\n\r\nimport { fieldData } from '../VehiclePages/FieldData';\r\n\r\n\r\n\r\nconst VehicleMaster = (props) => {\r\n\r\n    //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n    let editDataGatingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n    let propsPageMode = props.pageMode;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    const formRef = useRef(null);\r\n\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n    const [EditData, setEditData] = useState([]);\r\n    const [divisionData, setDivisionData] = useState([]);\r\n    const [divisionType_dropdown_Select, setDivisionType_dropdown_Select] = useState(\"\");\r\n    const [DriverList_dropdown_Select, setDriverList_dropdown_Select] = useState(\"\");\r\n    const [VehicleType_dropdown_Select, setVehicleType_dropdown_Select] = useState(\"\");\r\n    //  const [VehicleList_dropdown_Select, setVehicleList_dropdown_Select] = useState(\"\");\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse,\r\n        VehicleList,\r\n        Divisions,\r\n        VehicleTypes,\r\n        DriverList_redux,\r\n        pageFiled,\r\n        RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n            PostAPIResponse: state.VehicleReducer.PostDataMessage,\r\n            VehicleList: state.VehicleReducer.VehicleList,\r\n            Divisions: state.ItemMastersReducer.Division,\r\n            VehicleTypes: state.VehicleReducer.VehicleTypes,\r\n            DriverList_redux: state.VehicleReducer.DriverList,\r\n            pageFiled: state.CommonPageFieldReducer.pageField,\r\n            RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n\r\n        }));\r\n\r\n\r\n    {/** Dyanamic Page access state and OnChange function */ }\r\n    {/*start */ }\r\n    const [state, setState] = useState({\r\n        values: {\r\n            DriverName: \"\",\r\n            Vehicletype: \"\",\r\n            VehicleNumber: \"\",\r\n            Description: \"\",\r\n            VehicleDivisions: \"\",\r\n        },\r\n        fieldLabel: {\r\n            DriverName: '',\r\n            VehicleType: '',\r\n            VehicleNumber: '',\r\n            Description: '',\r\n            Division: '',\r\n        },\r\n\r\n        isError: {\r\n            DriverName: '',\r\n            VehicleType: '',\r\n            VehicleNumber: '',\r\n            Description: '',\r\n            Division: '',\r\n        },\r\n\r\n\r\n\r\n        hasValid: {\r\n            DriverName: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            VehicleType: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            VehicleNumber: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            Description: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            Division: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n        },\r\n        required: {\r\n\r\n        }\r\n    })\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n\r\n    const onChangeText = (event) => {\r\n        formValChange({ event, state, setState })\r\n    }\r\n\r\n    const onChangeDropDown = (e, v) => {\r\n        const event = { name: v.name, value: e }\r\n        formValChange({ event, state, setState })\r\n    }\r\n\r\n    useEffect(() => {\r\n        comAddPageFieldFunc({ state, setState, fieldData })\r\n    }, [fieldData])\r\n    {/*End */ }\r\n\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n\r\n        let userAcc = undefined\r\n        if ((editDataGatingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGatingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        //   if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGatingFromList === undefined)) {\r\n            setEditData(editDataGatingFromList);\r\n            setPageMode(pageModeProps);\r\n            setDriverList_dropdown_Select({\r\n                value: editDataGatingFromList.Driver,\r\n                label: editDataGatingFromList.DriverName\r\n            });\r\n            setVehicleType_dropdown_Select({\r\n                value: editDataGatingFromList.VehicleType,\r\n                label: editDataGatingFromList.VehicleTypeName\r\n            });\r\n            let division = editDataGatingFromList.VehicleDivisions.map((index) => {\r\n                return {\r\n                    label: index.DivisionName,\r\n                    value: index.Division\r\n                }\r\n            })\r\n            setDivisionData(division)\r\n            dispatch(editVehicleTypeSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGatingFromList.VehicleTypeName))\r\n            return\r\n        }\r\n\r\n        else if (!(propsPageMode === undefined)) {\r\n            setPageMode(propsPageMode)\r\n        }\r\n    }, [editDataGatingFromList, propsPageMode]);\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForVehicleMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/VehicleList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForVehicleListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n    useEffect(() => {\r\n        dispatch(getMethodForVehicleList());\r\n        dispatch(getMethod_DriverList_ForDropDown());\r\n        dispatch(getMethod_VehicleTypes_ForDropDown());\r\n        dispatch(get_Division_ForDropDown());\r\n    }, [dispatch]);\r\n\r\n    const DivisionType_DropdownOptions = Divisions.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function DivisionType_DropDown_handller(e) {\r\n        setDivisionType_dropdown_Select(e)\r\n    }\r\n\r\n    const DriverList_DropdownOptions = DriverList_redux.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function DriverList_DropDown_handller(e) {\r\n        setDriverList_dropdown_Select(e)\r\n    }\r\n\r\n    const VehicleType_DropdownOptions = VehicleTypes.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function VehicleType_DropDown_handller(e) {\r\n        setVehicleType_dropdown_Select(e)\r\n    }\r\n\r\n    // const VehicleList_DropdownOptions = VehicleList_redux.map((data) => ({\r\n    //     value: data.id,\r\n    //     label: data.Name\r\n    // }));\r\n\r\n    // function VehicleList_DropDown_handller(e) {\r\n    //     setVehicleList_dropdown_Select(e)\r\n    // }\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            var division = divisionData.map(i => ({ Division: i.value }))\r\n            const jsonBody = JSON.stringify({\r\n                VehicleNumber: values.VehicleNumber,\r\n                Description: values.Description,\r\n                Driver: values.DriverName.value,\r\n                VehicleType: values.Vehicletype.value,\r\n                VehicleDivisions: values.division.value,\r\n            });\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateVehicleTypeID(jsonBody, EditData.id));\r\n            }\r\n            else {\r\n                dispatch(PostMethodForVehicleMaster(jsonBody));\r\n                console.log(\"jsonBody\", jsonBody)\r\n            }\r\n        }\r\n    };\r\n\r\n    /// Role Table Validation\r\n    function AddDivisionHandler() {\r\n        const find = divisionData.find((element) => {\r\n            return element.value === divisionType_dropdown_Select.value\r\n        });\r\n\r\n        if (divisionType_dropdown_Select.length <= 0) {\r\n            dispatch(AlertState({\r\n                Type: 3, Status: true,\r\n                Message: \"Select One Role\",\r\n            }));\r\n        }\r\n        else if (find === undefined) {\r\n            setDivisionData([...divisionData, divisionType_dropdown_Select]);\r\n        }\r\n        else {\r\n            dispatch(AlertState({\r\n                Type: 4, Status: true,\r\n                Message: \"DivisionType already Exists \",\r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    // For Delete Button in table\r\n    function UserRoles_DeleteButton_Handller(tableValue) {\r\n        setDivisionData(divisionData.filter(\r\n            (item) => !(item.value === tableValue)\r\n        )\r\n        )\r\n    }\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n\r\n                                                    <Row className=\"mt-3\">\r\n                                                        <Col md=\"3\">\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                                <Label htmlFor=\"validationCustom01\"> {fieldLabel.DriverName} </Label>\r\n                                                                <Col sm={12}>\r\n                                                                    <Select\r\n                                                                        name=\"DriverName\"\r\n                                                                        Value={values.DriverName}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                        onChange={onChangeDropDown}\r\n                                                                        options={DriverList_DropdownOptions}\r\n\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n\r\n                                                        <Col md=\"1\">  </Col>\r\n                                                        <Col md=\"3\">\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                                <Label htmlFor=\"validationCustom01\">  {fieldLabel.VehicleType} </Label>\r\n                                                                <Col sm={12}>\r\n                                                                    <Select\r\n                                                                        name=\"VehicleType\"\r\n                                                                        Value={values.Vehicletype}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                        onChange={onChangeDropDown}\r\n                                                                        options={VehicleType_DropdownOptions}\r\n\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n\r\n                                                        <Col md=\"1\">\r\n                                                        </Col>\r\n                                                        <Col md=\"4\">\r\n                                                            <FormGroup className=\"mb-2 col col-sm-8 \">\r\n                                                                <Label htmlFor=\"validationCustom01\"> {fieldLabel.VehicleNumber} </Label>\r\n                                                                <Input\r\n                                                                    name=\"VehicleNumber\"\r\n                                                                    id=\"VehicleNumber\"\r\n                                                                    value={EditData.VehicleNumber}\r\n                                                                    type=\"text\"\r\n                                                                    placeholder=\"Please Enter VehicleNumber\"\r\n                                                                    autoComplete='off'\r\n                                                                    onChange={(e) => {\r\n                                                                        onChangeText(e)\r\n                                                                        dispatch(BreadcrumbShow(e.target.value))\r\n                                                                    }}\r\n                                                                // tel: {\r\n                                                                //     pattern: /^[A-Z]{2}[ -]{0,1}[0-9]{2}[ -]{0,1}[A-Z]{1,2}[ -]{0,1}[0-9]{1,4}$/,\r\n                                                                //     errorMessage: \"Please Enter valid VehicleNumber.(Ex:MH 15 AA 1234)\"\r\n                                                                // }\r\n\r\n\r\n                                                                />\r\n                                                                {isError.VehicleNumber.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.VehicleNumber}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n\r\n                                                        </Col>\r\n\r\n                                                        <Row>\r\n                                                            <Col md=\"3\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label htmlFor=\"validationCustom01\"> {fieldLabel.Description}  </Label>\r\n                                                                    <Input\r\n                                                                        name=\"Description\"\r\n                                                                        id=\"Description\"\r\n                                                                        value={EditData.Description}\r\n                                                                        type=\"text\"\r\n                                                                        placeholder=\"Please Enter Description\"\r\n                                                                        autoComplete='off'\r\n                                                                        onChange={(e) => {\r\n                                                                            onChangeText(e)\r\n                                                                            dispatch(BreadcrumbShow(e.target.value))\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    {isError.VehicleNumber.length > 0 && (\r\n                                                                        <span className=\"invalid-feedback\">{isError.VehicleNumber}</span>\r\n                                                                    )}\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"col col-sm-3\">\r\n                                                                <Label htmlFor=\"validationCustom21\">{fieldLabel.Division}</Label>\r\n                                                                <Select\r\n                                                                    name=\"Division\"\r\n                                                                    Value={values.VehicleDivisions}\r\n                                                                    isSearchable={false}\r\n                                                                    className=\"react-dropdown\"\r\n                                                                    classNamePrefix=\"dropdown\"\r\n                                                                    onChange={onChangeDropDown}\r\n                                                                    options={DivisionType_DropdownOptions}\r\n\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                            <Col sm={1} style={{ marginTop: '28px' }} >\r\n                                                                {\" \"}\r\n                                                                <Button\r\n                                                                    type=\"button\"\r\n                                                                    className=\"btn btn-sm mt-1 mb-0 btn-light  btn-outline-primary  \"\r\n                                                                    onClick={() =>\r\n                                                                        AddDivisionHandler()\r\n                                                                    }\r\n                                                                >\r\n                                                                    <i className=\"dripicons-plus \"></i>\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                            <Col sm={3} style={{ marginTop: '28px' }}>\r\n                                                                {divisionData.length > 0 ? (\r\n\r\n                                                                    <div className=\"table-responsive\">\r\n                                                                        <Table className=\"table table-bordered  text-center\">\r\n                                                                            <Thead >\r\n                                                                                <tr>\r\n                                                                                    <th>Division Type</th>\r\n\r\n                                                                                    <th>Action</th>\r\n                                                                                </tr>\r\n                                                                            </Thead>\r\n                                                                            <Tbody>\r\n                                                                                {divisionData.map((TableValue) => (\r\n                                                                                    <tr>\r\n                                                                                        <td>\r\n                                                                                            {TableValue.label}\r\n                                                                                        </td>\r\n                                                                                        <td>\r\n                                                                                            <i className=\"mdi mdi-trash-can d-block text-danger font-size-20\" onClick={() => {\r\n                                                                                                UserRoles_DeleteButton_Handller(TableValue.value)\r\n                                                                                            }} >\r\n                                                                                            </i>\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                ))}\r\n                                                                            </Tbody>\r\n                                                                        </Table>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                    <>\r\n                                                                    </>\r\n                                                                )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Vehicle Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Vehicle Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default VehicleMaster\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}