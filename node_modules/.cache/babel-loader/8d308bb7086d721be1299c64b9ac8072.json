{"ast":null,"code":"import _objectSpread from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Row,Col,Modal,Button}from\"reactstrap\";import MetaTags from'react-meta-tags';// datatable related plugins\nimport BootstrapTable from'react-bootstrap-table-next';import paginationFactory,{PaginationProvider,PaginationListStandalone}from'react-bootstrap-table2-paginator';import ToolkitProvider from'react-bootstrap-table2-toolkit';//Import Breadcrumb\nimport Breadcrumb from\"../../../components/Common/Breadcrumb\";import\"../../../assets/scss/CustomTable2/datatables.scss\";import{useDispatch,useSelector}from\"react-redux\";import{getRoleAccessListPage,PostMethod_ForCopyRoleAccessFor_Role_Success}from\"../../../store/actions\";import{AlertState}from\"../../../store/actions\";import{useHistory}from\"react-router-dom\";import RoleAccessCopyFunctionality from\"./RoleAccessCopyFunctionality\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RoleAccessListPage=function RoleAccessListPage(){var dispatch=useDispatch();var history=useHistory();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),userPageAccessState=_useState2[0],setUserPageAccessState=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modal_center=_useState4[0],setmodal_center=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),copy_user_RowData=_useState6[0],setCopy_user_RowData=_useState6[1];var _useSelector=useSelector(function(state){return{TableListData:state.RoleAccessReducer.RoleAccessListPage,RoleAccessModifiedinSingleArray:state.Login.RoleAccessUpdateData,PostMessage_ForCopyRoleAccess:state.RoleAccessReducer.PostMessage_ForCopyRoleAccess};}),TableListData=_useSelector.TableListData,RoleAccessModifiedinSingleArray=_useSelector.RoleAccessModifiedinSingleArray,PostMessage_ForCopyRoleAccess=_useSelector.PostMessage_ForCopyRoleAccess;// useEffect(() => {\n//     const userAcc = CommonGetRoleAccessFunction(history)\n//     if (!(userAcc === undefined)) {\n//         setUserPageAccessState(userAcc)\n//     }\n// }, [history])\nuseEffect(function(){// debugger\n// const userAcc = CommonGetRoleAccessFunction(history)\nvar locationPath=history.location.pathname;var userAcc=RoleAccessModifiedinSingleArray.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(!(userAcc===undefined)){setUserPageAccessState(userAcc);}},[RoleAccessModifiedinSingleArray]);//  This UseEffect => Featch Modules List data  First Rendering\nuseEffect(function(){dispatch(getRoleAccessListPage());},[]);var EditPageHandler=function EditPageHandler(rowData){debugger;if(rowData.Division_id===null){rowData.Division_id=0;}// let RelatedPageID = 0\n// const userPageAccess = history.location.state\nvar RelatedPageID=userPageAccessState.RelatedPageID;var found=RoleAccessModifiedinSingleArray.find(function(element){return element.id===RelatedPageID;});if(!(found===undefined)){history.push({pathname:\"/\".concat(found.ActualPagePath),// pathname: `/${found.ActualPagePath}`,\n// state: { fromDashboardAccess: true, UserDetails: found, EditData: rowData }\nstate:rowData// relatatedPage:\"/UserMaster\"\n});}};useEffect(function(){if(PostMessage_ForCopyRoleAccess.Status===true&&PostMessage_ForCopyRoleAccess.StatusCode===200){dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({Status:false}));dispatch(getRoleAccessListPage());// GoButton_Handler()\ntog_center();dispatch(AlertState({Type:1,Status:true,Message:PostMessage_ForCopyRoleAccess.Message,AfterResponseAction:false}));}else if(PostMessage_ForCopyRoleAccess.Status===true){dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(PostMessage_ForCopyRoleAccess.Message),RedirectPath:false,AfterResponseAction:false}));}},[PostMessage_ForCopyRoleAccess]);//select id for copy row\nvar CopyHandeler=function CopyHandeler(event){setCopy_user_RowData(event);tog_center();};//select id for delete row\nvar deleteHandeler=function deleteHandeler(id,name){dispatch(AlertState({Type:5,Status:true,Message:\"Are you sure you want to delete this item : \\\"\".concat(name,\"\\\"\"),RedirectPath:false,// PermissionAction: deleteItemID,\nID:id}));};// Modules list component table columns \nvar columns=[{dataField:'RoleName',text:'Role Name',sort:true},{dataField:'DivisionName',text:'Division Name',sort:true},{dataField:'CompanyName',text:'Company Name',sort:true},{text:\"Action\",hidden:!userPageAccessState.RoleAccess_IsEdit&&!userPageAccessState.RoleAccess_IsView&&!userPageAccessState.RoleAccess_IsDelete?true:false,formatter:function formatter(cellContent,RoleAccess){return/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-3\",style:{display:'flex',justifyContent:'center'},children:[/*#__PURE__*/_jsx(Button,{className:\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Copy RoleAccess\",onClick:function onClick(){CopyHandeler(RoleAccess);},children:\"copy\"}),userPageAccessState.RoleAccess_IsEdit?/*#__PURE__*/_jsxs(Button,{type:\"button\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Edit RoleAccess\",onClick:function onClick(){EditPageHandler(RoleAccess);},className:\"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\",children:[console.log(\"id\",RoleAccess),\" \",/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-pencil font-size-18\",id:\"edittooltip\"})]}):null,!userPageAccessState.RoleAccess_IsEdit&&userPageAccessState.RoleAccess_IsView?/*#__PURE__*/_jsx(Button,{type:\"button\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"View RoleAccess\",onClick:function onClick(){EditPageHandler(RoleAccess);},className:\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",children:/*#__PURE__*/_jsx(\"i\",{className:\"bx bxs-show font-size-18 \"})}):null,userPageAccessState.RoleAccess_IsDelete?/*#__PURE__*/_jsx(Button,{className:\"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Delete RoleAccess\",onClick:function onClick(){deleteHandeler(RoleAccess.id,RoleAccess.Name);},children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-delete font-size-18\"})}):null]});}}];var defaultSorted=[{dataField:'RoleName',order:'asc'}];var pageOptions={sizePerPage:10,totalSize:TableListData.length,// replace later with size(customers),\ncustom:true};// tag_center -- Control the Edit Modal show and close\nfunction tog_center(){setmodal_center(!modal_center);}if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"page-content\",children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsx(\"title\",{children:\"RoleAccess List Page| FoodERP-React FrontEnd\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid\",children:[/*#__PURE__*/_jsx(PaginationProvider,{pagination:paginationFactory(pageOptions),keyField:\"id\",columns:columns,data:TableListData,children:function children(_ref){var paginationProps=_ref.paginationProps,paginationTableProps=_ref.paginationTableProps;return/*#__PURE__*/_jsx(ToolkitProvider,{keyField:\"id\",columns:columns,data:TableListData,search:true,children:function children(toolkitProps){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Breadcrumb,{title:\"Count :\",breadcrumbItem:userPageAccessState.PageHeading,IsButtonVissible:userPageAccessState.RoleAccess_IsSave?true:false,SearchProps:toolkitProps.searchProps,IsSearchVissible:true,defaultSorted:defaultSorted,ExcelData:TableListData,isExcelButtonVisible:true,breadcrumbCount:\"RoleAccess Count: \".concat(TableListData.length)// RedirctPath={\"/moduleMaster\"}\n}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xl:\"12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsx(BootstrapTable,_objectSpread(_objectSpread({keyField:\"id\",responsive:true,bordered:true,striped:false,defaultSorted:defaultSorted,classes:\"table align-middle table-nowrap table-hover\",headerWrapperClasses:\"thead-light\"},toolkitProps.baseProps),paginationTableProps))})})}),/*#__PURE__*/_jsx(Row,{className:\"align-items-md-center mt-30\",children:/*#__PURE__*/_jsx(Col,{className:\"pagination pagination-rounded justify-content-end mb-2\",children:/*#__PURE__*/_jsx(PaginationListStandalone,_objectSpread({},paginationProps))})})]});}});}}),/*#__PURE__*/_jsx(Modal,{isOpen:modal_center,toggle:function toggle(){tog_center();},size:\"xl\",children:/*#__PURE__*/_jsx(RoleAccessCopyFunctionality,{state:copy_user_RowData})})]})]})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default RoleAccessListPage;","map":{"version":3,"names":["React","useEffect","useState","Row","Col","Modal","Button","MetaTags","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","Breadcrumb","useDispatch","useSelector","getRoleAccessListPage","PostMethod_ForCopyRoleAccessFor_Role_Success","AlertState","useHistory","RoleAccessCopyFunctionality","RoleAccessListPage","dispatch","history","userPageAccessState","setUserPageAccessState","modal_center","setmodal_center","copy_user_RowData","setCopy_user_RowData","state","TableListData","RoleAccessReducer","RoleAccessModifiedinSingleArray","Login","RoleAccessUpdateData","PostMessage_ForCopyRoleAccess","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","EditPageHandler","rowData","Division_id","RelatedPageID","found","element","id","push","Status","StatusCode","tog_center","Type","Message","AfterResponseAction","JSON","stringify","RedirectPath","CopyHandeler","event","deleteHandeler","name","ID","columns","dataField","text","sort","hidden","RoleAccess_IsEdit","RoleAccess_IsView","RoleAccess_IsDelete","formatter","cellContent","RoleAccess","display","justifyContent","console","log","Name","defaultSorted","order","pageOptions","sizePerPage","totalSize","length","custom","paginationProps","paginationTableProps","toolkitProps","PageHeading","RoleAccess_IsSave","searchProps","baseProps"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/RoleAccessPages/RoleAccessListPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Row, Col, Modal, Button } from \"reactstrap\"\r\nimport MetaTags from 'react-meta-tags'\r\n\r\n// datatable related plugins\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n    PaginationProvider, PaginationListStandalone,\r\n} from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\"\r\nimport \"../../../assets/scss/CustomTable2/datatables.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getRoleAccessListPage,\r\n    PostMethod_ForCopyRoleAccessFor_Role_Success,\r\n\r\n} from \"../../../store/actions\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RoleAccessCopyFunctionality from \"./RoleAccessCopyFunctionality\";\r\n\r\nconst RoleAccessListPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n    const [modal_center, setmodal_center] = useState(false);\r\n    const [copy_user_RowData, setCopy_user_RowData] = useState({});\r\n     \r\n\r\n    const { TableListData, RoleAccessModifiedinSingleArray,PostMessage_ForCopyRoleAccess } = useSelector((state) => ({\r\n        TableListData: state.RoleAccessReducer.RoleAccessListPage,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n        PostMessage_ForCopyRoleAccess: state.RoleAccessReducer.PostMessage_ForCopyRoleAccess,\r\n\r\n    }));\r\n\r\n    // useEffect(() => {\r\n    //     const userAcc = CommonGetRoleAccessFunction(history)\r\n    //     if (!(userAcc === undefined)) {\r\n    //         setUserPageAccessState(userAcc)\r\n    //     }\r\n    // }, [history])\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        // const userAcc = CommonGetRoleAccessFunction(history)\r\n        const locationPath = history.location.pathname\r\n        let userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n\r\n    //  This UseEffect => Featch Modules List data  First Rendering\r\n    useEffect(() => {\r\n        dispatch(getRoleAccessListPage());\r\n    }, []);\r\n\r\n    const EditPageHandler = (rowData) => {\r\n     debugger\r\n       if(rowData.Division_id===null) {\r\n        rowData.Division_id=0\r\n       }\r\n     \r\n        // let RelatedPageID = 0\r\n        // const userPageAccess = history.location.state\r\n\r\n        let  RelatedPageID = userPageAccessState.RelatedPageID\r\n\r\n        const found = RoleAccessModifiedinSingleArray.find((element) => {\r\n            return element.id === RelatedPageID\r\n        })\r\n\r\n        if (!(found === undefined)) {\r\n            history.push({\r\n                pathname: `/${found.ActualPagePath}`,\r\n                // pathname: `/${found.ActualPagePath}`,\r\n                // state: { fromDashboardAccess: true, UserDetails: found, EditData: rowData }\r\n                state:  rowData ,\r\n                // relatatedPage:\"/UserMaster\"\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n       \r\n        if ((PostMessage_ForCopyRoleAccess.Status === true) && (PostMessage_ForCopyRoleAccess.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({ Status: false }))\r\n\r\n            dispatch(getRoleAccessListPage());\r\n            // GoButton_Handler()\r\n            tog_center()   \r\n            dispatch(AlertState({\r\n                Type: 1,\r\n                Status: true,\r\n                Message: PostMessage_ForCopyRoleAccess.Message,\r\n                AfterResponseAction: false\r\n            }))\r\n        }\r\n        else if (PostMessage_ForCopyRoleAccess.Status === true) {\r\n            dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostMessage_ForCopyRoleAccess.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostMessage_ForCopyRoleAccess])\r\n\r\n    //select id for copy row\r\n    const CopyHandeler = (event) => {\r\n\r\n        setCopy_user_RowData(event)\r\n        tog_center()   \r\n    };\r\n\r\n\r\n\r\n    //select id for delete row\r\n    const deleteHandeler = (id, name) => {\r\n        dispatch(\r\n            AlertState({\r\n                Type: 5,\r\n                Status: true,\r\n                Message: `Are you sure you want to delete this item : \"${name}\"`,\r\n                RedirectPath: false,\r\n                // PermissionAction: deleteItemID,\r\n                ID: id,\r\n            })\r\n        );\r\n    };\r\n\r\n    // Modules list component table columns \r\n    const columns = [\r\n        {\r\n            dataField: 'RoleName',\r\n            text: 'Role Name',\r\n            sort: true\r\n        }, {\r\n            dataField: 'DivisionName',\r\n            text: 'Division Name',\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: 'CompanyName',\r\n            text: 'Company Name',\r\n            sort: true\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            hidden: (\r\n                !(userPageAccessState.RoleAccess_IsEdit)\r\n                && !(userPageAccessState.RoleAccess_IsView)\r\n                && !(userPageAccessState.RoleAccess_IsDelete)) ? true : false,\r\n\r\n            formatter: (cellContent, RoleAccess) => (\r\n\r\n                <div className=\"d-flex gap-3\" style={{ display: 'flex', justifyContent: 'center' }} >\r\n\r\n                       <Button\r\n                            className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Copy RoleAccess\"\r\n                            onClick={() => { CopyHandeler(RoleAccess); }}\r\n                        >\r\n                           copy\r\n                        </Button>\r\n\r\n\r\n                    {((userPageAccessState.RoleAccess_IsEdit)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Edit RoleAccess\"\r\n                            onClick={() => { EditPageHandler(RoleAccess); }}\r\n                            className=\"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\"\r\n                        >\r\n                            {console.log(\"id\", RoleAccess)} <i className=\"mdi mdi-pencil font-size-18\" id=\"edittooltip\"></i>\r\n                        </Button> : null}\r\n\r\n                    {(!(userPageAccessState.RoleAccess_IsEdit) && (userPageAccessState.RoleAccess_IsView)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"View RoleAccess\"\r\n                            onClick={() => { EditPageHandler(RoleAccess); }}\r\n                            className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n\r\n                        >\r\n                            <i className=\"bx bxs-show font-size-18 \"></i>\r\n                        </Button> : null}\r\n\r\n                    {(userPageAccessState.RoleAccess_IsDelete)\r\n                        ?\r\n                        <Button\r\n                            className=\"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Delete RoleAccess\"\r\n                            onClick={() => { deleteHandeler(RoleAccess.id, RoleAccess.Name); }}\r\n                        >\r\n                            <i className=\"mdi mdi-delete font-size-18\"></i>\r\n                        </Button>\r\n                        : null\r\n                    }\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const defaultSorted = [{\r\n        dataField: 'RoleName',\r\n        order: 'asc'\r\n    }];\r\n\r\n    const pageOptions = {\r\n        sizePerPage: 10,\r\n        totalSize: TableListData.length, // replace later with size(customers),\r\n        custom: true,\r\n    }\r\n\r\n    // tag_center -- Control the Edit Modal show and close\r\n    function tog_center() {\r\n        setmodal_center(!modal_center)\r\n    }\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\">\r\n                    <MetaTags>\r\n                        <title>RoleAccess List Page| FoodERP-React FrontEnd</title>\r\n                    </MetaTags>\r\n                    <div className=\"container-fluid\">\r\n                        <PaginationProvider\r\n                            pagination={paginationFactory(pageOptions)}\r\n                            keyField='id'\r\n                            columns={columns}\r\n                            data={TableListData}\r\n                        >\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                                <ToolkitProvider\r\n                                    keyField='id'\r\n                                    columns={columns}\r\n                                    data={TableListData}\r\n                                    search\r\n                                >\r\n                                    {toolkitProps => (\r\n                                        <React.Fragment>\r\n                                            <Breadcrumb\r\n                                                title={\"Count :\"}\r\n                                                breadcrumbItem={userPageAccessState.PageHeading}\r\n                                                IsButtonVissible={(userPageAccessState.RoleAccess_IsSave) ? true : false}\r\n                                                SearchProps={toolkitProps.searchProps}\r\n                                                IsSearchVissible={true}\r\n                                                defaultSorted={defaultSorted}\r\n                                                ExcelData={TableListData}\r\n                                                isExcelButtonVisible={true}\r\n                                                breadcrumbCount={`RoleAccess Count: ${TableListData.length}`}\r\n                                            // RedirctPath={\"/moduleMaster\"}\r\n                                            />\r\n                                            <Row>\r\n                                                <Col xl=\"12\">\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <BootstrapTable\r\n                                                            keyField={\"id\"}\r\n                                                            responsive\r\n                                                            bordered={true}\r\n                                                            striped={false}\r\n                                                            defaultSorted={defaultSorted}\r\n                                                            classes={\"table align-middle table-nowrap table-hover\"}\r\n                                                            headerWrapperClasses={\"thead-light\"}\r\n                                                            {...toolkitProps.baseProps}\r\n                                                            {...paginationTableProps}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row className=\"align-items-md-center mt-30\">\r\n                                                <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                    <PaginationListStandalone\r\n                                                        {...paginationProps}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                    }\r\n                                </ToolkitProvider>\r\n                            )\r\n                            }\r\n                        </PaginationProvider>\r\n                        <Modal\r\n                            isOpen={modal_center}\r\n                            toggle={() => { tog_center() }}\r\n                            size=\"xl\"\r\n                        >\r\n                            <RoleAccessCopyFunctionality  state={copy_user_RowData} />\r\n                           \r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default RoleAccessListPage\r\n"],"mappings":"iNAAA,MAAOA,MAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,KAAnB,CAA0BC,MAA1B,KAAwC,YAAxC,CACA,MAAOC,SAAP,KAAqB,iBAArB,CAEA;AACA,MAAOC,eAAP,KAA2B,4BAA3B,CACA,MAAOC,kBAAP,EACIC,kBADJ,CACwBC,wBADxB,KAEO,kCAFP,CAGA,MAAOC,gBAAP,KAA4B,gCAA5B,CAEA;AACA,MAAOC,WAAP,KAAuB,uCAAvB,CACA,MAAO,mDAAP,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACIC,qBADJ,CAEIC,4CAFJ,KAIO,wBAJP,CAKA,OAASC,UAAT,KAA2B,wBAA3B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,4BAAP,KAAwC,+BAAxC,C,wFAEA,GAAMC,mBAAkB,CAAG,QAArBA,mBAAqB,EAAM,CAE7B,GAAMC,SAAQ,CAAGR,WAAW,EAA5B,CACA,GAAMS,QAAO,CAAGJ,UAAU,EAA1B,CAEA,cAAsDjB,QAAQ,CAAC,EAAD,CAA9D,wCAAOsB,mBAAP,eAA4BC,sBAA5B,eACA,eAAwCvB,QAAQ,CAAC,KAAD,CAAhD,yCAAOwB,YAAP,eAAqBC,eAArB,eACA,eAAkDzB,QAAQ,CAAC,EAAD,CAA1D,yCAAO0B,iBAAP,eAA0BC,oBAA1B,eAGA,iBAAyFd,WAAW,CAAC,SAACe,KAAD,QAAY,CAC7GC,aAAa,CAAED,KAAK,CAACE,iBAAN,CAAwBX,kBADsE,CAE7GY,+BAA+B,CAAEH,KAAK,CAACI,KAAN,CAAYC,oBAFgE,CAG7GC,6BAA6B,CAAEN,KAAK,CAACE,iBAAN,CAAwBI,6BAHsD,CAAZ,EAAD,CAApG,CAAQL,aAAR,cAAQA,aAAR,CAAuBE,+BAAvB,cAAuBA,+BAAvB,CAAuDG,6BAAvD,cAAuDA,6BAAvD,CAOA;AACA;AACA;AACA;AACA;AACA;AAEAnC,SAAS,CAAC,UAAM,CACZ;AACA;AACA,GAAMoC,aAAY,CAAGd,OAAO,CAACe,QAAR,CAAiBC,QAAtC,CACA,GAAIC,QAAO,CAAGP,+BAA+B,CAACQ,IAAhC,CAAqC,SAACC,GAAD,CAAS,CACxD,MAAQ,WAAIA,GAAG,CAACC,cAAR,IAA6BN,YAArC,CACH,CAFa,CAAd,CAGA,GAAI,EAAEG,OAAO,GAAKI,SAAd,CAAJ,CAA8B,CAC1BnB,sBAAsB,CAACe,OAAD,CAAtB,CACH,CACJ,CAVQ,CAUN,CAACP,+BAAD,CAVM,CAAT,CAaA;AACAhC,SAAS,CAAC,UAAM,CACZqB,QAAQ,CAACN,qBAAqB,EAAtB,CAAR,CACH,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAM6B,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,OAAD,CAAa,CACpC,SACE,GAAGA,OAAO,CAACC,WAAR,GAAsB,IAAzB,CAA+B,CAC9BD,OAAO,CAACC,WAAR,CAAoB,CAApB,CACA,CAEA;AACA;AAEA,GAAKC,cAAa,CAAGxB,mBAAmB,CAACwB,aAAzC,CAEA,GAAMC,MAAK,CAAGhB,+BAA+B,CAACQ,IAAhC,CAAqC,SAACS,OAAD,CAAa,CAC5D,MAAOA,QAAO,CAACC,EAAR,GAAeH,aAAtB,CACH,CAFa,CAAd,CAIA,GAAI,EAAEC,KAAK,GAAKL,SAAZ,CAAJ,CAA4B,CACxBrB,OAAO,CAAC6B,IAAR,CAAa,CACTb,QAAQ,YAAMU,KAAK,CAACN,cAAZ,CADC,CAET;AACA;AACAb,KAAK,CAAGgB,OACR;AALS,CAAb,EAOH,CACJ,CAxBD,CA2BA7C,SAAS,CAAC,UAAM,CAEZ,GAAKmC,6BAA6B,CAACiB,MAA9B,GAAyC,IAA1C,EAAoDjB,6BAA6B,CAACkB,UAA9B,GAA6C,GAArG,CAA2G,CACvGhC,QAAQ,CAACL,4CAA4C,CAAC,CAAEoC,MAAM,CAAE,KAAV,CAAD,CAA7C,CAAR,CAEA/B,QAAQ,CAACN,qBAAqB,EAAtB,CAAR,CACA;AACAuC,UAAU,GACVjC,QAAQ,CAACJ,UAAU,CAAC,CAChBsC,IAAI,CAAE,CADU,CAEhBH,MAAM,CAAE,IAFQ,CAGhBI,OAAO,CAAErB,6BAA6B,CAACqB,OAHvB,CAIhBC,mBAAmB,CAAE,KAJL,CAAD,CAAX,CAAR,CAMH,CAZD,IAaK,IAAItB,6BAA6B,CAACiB,MAA9B,GAAyC,IAA7C,CAAmD,CACpD/B,QAAQ,CAACL,4CAA4C,CAAC,CAAEoC,MAAM,CAAE,KAAV,CAAD,CAA7C,CAAR,CACA/B,QAAQ,CAACJ,UAAU,CAAC,CAChBsC,IAAI,CAAE,CADU,CAEhBH,MAAM,CAAE,IAFQ,CAGhBI,OAAO,CAAEE,IAAI,CAACC,SAAL,CAAexB,6BAA6B,CAACqB,OAA7C,CAHO,CAIhBI,YAAY,CAAE,KAJE,CAKhBH,mBAAmB,CAAE,KALL,CAAD,CAAX,CAAR,CAOH,CACJ,CAzBQ,CAyBN,CAACtB,6BAAD,CAzBM,CAAT,CA2BA;AACA,GAAM0B,aAAY,CAAG,QAAfA,aAAe,CAACC,KAAD,CAAW,CAE5BlC,oBAAoB,CAACkC,KAAD,CAApB,CACAR,UAAU,GACb,CAJD,CAQA;AACA,GAAMS,eAAc,CAAG,QAAjBA,eAAiB,CAACb,EAAD,CAAKc,IAAL,CAAc,CACjC3C,QAAQ,CACJJ,UAAU,CAAC,CACPsC,IAAI,CAAE,CADC,CAEPH,MAAM,CAAE,IAFD,CAGPI,OAAO,yDAAkDQ,IAAlD,MAHA,CAIPJ,YAAY,CAAE,KAJP,CAKP;AACAK,EAAE,CAAEf,EANG,CAAD,CADN,CAAR,CAUH,CAXD,CAaA;AACA,GAAMgB,QAAO,CAAG,CACZ,CACIC,SAAS,CAAE,UADf,CAEIC,IAAI,CAAE,WAFV,CAGIC,IAAI,CAAE,IAHV,CADY,CAKT,CACCF,SAAS,CAAE,cADZ,CAECC,IAAI,CAAE,eAFP,CAGCC,IAAI,CAAE,IAHP,CALS,CAUZ,CACIF,SAAS,CAAE,aADf,CAEIC,IAAI,CAAE,cAFV,CAGIC,IAAI,CAAE,IAHV,CAVY,CAeZ,CACID,IAAI,CAAE,QADV,CAEIE,MAAM,CACF,CAAE/C,mBAAmB,CAACgD,iBAAtB,EACG,CAAEhD,mBAAmB,CAACiD,iBADzB,EAEG,CAAEjD,mBAAmB,CAACkD,mBAHrB,CAG6C,IAH7C,CAGoD,KALhE,CAOIC,SAAS,CAAE,mBAACC,WAAD,CAAcC,UAAd,qBAEP,aAAK,SAAS,CAAC,cAAf,CAA8B,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAArC,wBAEO,KAAC,MAAD,EACK,SAAS,CAAC,0GADf,CAEK,kBAAgB,SAFrB,CAE+B,qBAAmB,KAFlD,CAEwD,KAAK,CAAC,iBAF9D,CAGK,OAAO,CAAE,kBAAM,CAAEjB,YAAY,CAACe,UAAD,CAAZ,CAA2B,CAHjD,kBAFP,CAWOrD,mBAAmB,CAACgD,iBAAtB,cACG,MAAC,MAAD,EACI,IAAI,CAAC,QADT,CAEI,kBAAgB,SAFpB,CAE8B,qBAAmB,KAFjD,CAEuD,KAAK,CAAC,iBAF7D,CAGI,OAAO,CAAE,kBAAM,CAAE3B,eAAe,CAACgC,UAAD,CAAf,CAA8B,CAHnD,CAII,SAAS,CAAC,0GAJd,WAMKG,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAkBJ,UAAlB,CANL,kBAMoC,UAAG,SAAS,CAAC,6BAAb,CAA2C,EAAE,CAAC,aAA9C,EANpC,GADH,CAQe,IAnBpB,CAqBM,CAAErD,mBAAmB,CAACgD,iBAAtB,EAA6ChD,mBAAmB,CAACiD,iBAAlE,cACG,KAAC,MAAD,EACI,IAAI,CAAC,QADT,CAEI,kBAAgB,SAFpB,CAE8B,qBAAmB,KAFjD,CAEuD,KAAK,CAAC,iBAF7D,CAGI,OAAO,CAAE,kBAAM,CAAE5B,eAAe,CAACgC,UAAD,CAAf,CAA8B,CAHnD,CAII,SAAS,CAAC,0GAJd,uBAOI,UAAG,SAAS,CAAC,2BAAb,EAPJ,EADH,CASe,IA9BpB,CAgCMrD,mBAAmB,CAACkD,mBAArB,cAEG,KAAC,MAAD,EACI,SAAS,CAAC,wGADd,CAEI,kBAAgB,SAFpB,CAE8B,qBAAmB,KAFjD,CAEuD,KAAK,CAAC,mBAF7D,CAGI,OAAO,CAAE,kBAAM,CAAEV,cAAc,CAACa,UAAU,CAAC1B,EAAZ,CAAgB0B,UAAU,CAACK,IAA3B,CAAd,CAAiD,CAHtE,uBAKI,UAAG,SAAS,CAAC,6BAAb,EALJ,EAFH,CASK,IAzCV,GAFO,EAPf,CAfY,CAAhB,CAyEA,GAAMC,cAAa,CAAG,CAAC,CACnBf,SAAS,CAAE,UADQ,CAEnBgB,KAAK,CAAE,KAFY,CAAD,CAAtB,CAKA,GAAMC,YAAW,CAAG,CAChBC,WAAW,CAAE,EADG,CAEhBC,SAAS,CAAExD,aAAa,CAACyD,MAFT,CAEiB;AACjCC,MAAM,CAAE,IAHQ,CAApB,CAMA;AACA,QAASlC,WAAT,EAAsB,CAClB5B,eAAe,CAAC,CAACD,YAAF,CAAf,CACH,CAED,GAAI,EAAEF,mBAAmB,GAAK,EAA1B,CAAJ,CAAmC,CAC/B,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,aAAK,SAAS,CAAC,cAAf,wBACI,KAAC,QAAD,wBACI,uEADJ,EADJ,cAII,aAAK,SAAS,CAAC,iBAAf,wBACI,KAAC,kBAAD,EACI,UAAU,CAAEf,iBAAiB,CAAC4E,WAAD,CADjC,CAEI,QAAQ,CAAC,IAFb,CAGI,OAAO,CAAElB,OAHb,CAII,IAAI,CAAEpC,aAJV,UAMK,2BAAG2D,gBAAH,MAAGA,eAAH,CAAoBC,oBAApB,MAAoBA,oBAApB,oBACG,KAAC,eAAD,EACI,QAAQ,CAAC,IADb,CAEI,OAAO,CAAExB,OAFb,CAGI,IAAI,CAAEpC,aAHV,CAII,MAAM,KAJV,UAMK,kBAAA6D,YAAY,qBACT,MAAC,KAAD,CAAO,QAAP,yBACI,KAAC,UAAD,EACI,KAAK,CAAE,SADX,CAEI,cAAc,CAAEpE,mBAAmB,CAACqE,WAFxC,CAGI,gBAAgB,CAAGrE,mBAAmB,CAACsE,iBAArB,CAA0C,IAA1C,CAAiD,KAHvE,CAII,WAAW,CAAEF,YAAY,CAACG,WAJ9B,CAKI,gBAAgB,CAAE,IALtB,CAMI,aAAa,CAAEZ,aANnB,CAOI,SAAS,CAAEpD,aAPf,CAQI,oBAAoB,CAAE,IAR1B,CASI,eAAe,6BAAuBA,aAAa,CAACyD,MAArC,CACnB;AAVA,EADJ,cAaI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACI,YAAK,SAAS,CAAC,kBAAf,uBACI,KAAC,cAAD,8BACI,QAAQ,CAAE,IADd,CAEI,UAAU,KAFd,CAGI,QAAQ,CAAE,IAHd,CAII,OAAO,CAAE,KAJb,CAKI,aAAa,CAAEL,aALnB,CAMI,OAAO,CAAE,6CANb,CAOI,oBAAoB,CAAE,aAP1B,EAQQS,YAAY,CAACI,SARrB,EASQL,oBATR,EADJ,EADJ,EADJ,EAbJ,cA+BI,KAAC,GAAD,EAAK,SAAS,CAAC,6BAAf,uBACI,KAAC,GAAD,EAAK,SAAS,CAAC,wDAAf,uBACI,KAAC,wBAAD,kBACQD,eADR,EADJ,EADJ,EA/BJ,GADS,EANjB,EADH,EANL,EADJ,cA4DI,KAAC,KAAD,EACI,MAAM,CAAEhE,YADZ,CAEI,MAAM,CAAE,iBAAM,CAAE6B,UAAU,GAAI,CAFlC,CAGI,IAAI,CAAC,IAHT,uBAKI,KAAC,2BAAD,EAA8B,KAAK,CAAE3B,iBAArC,EALJ,EA5DJ,GAJJ,GADJ,EADJ,CA8EH,CA/ED,IAgFK,CACD,mBACI,KAAC,KAAD,CAAO,QAAP,IADJ,CAGH,CACJ,CAtSD,CAuSA,cAAeP,mBAAf"},"metadata":{},"sourceType":"module"}