{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\DriverPage\\\\DriverMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Label, Row } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { BreadcrumbShow } from \"../../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Tbody, Thead } from \"react-super-responsive-table\";\nimport { AlertState } from \"../../../store/actions\";\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\nimport { PostMethodForDriverMaster, getMethodForDriverList, PostMethod_ForDriverMasterSuccess, getMethod_ForDriverListSuccess, editDriverTypeSuccess } from \"../../../store/Administrator/DriverRedux/action\";\nimport { useHistory } from \"react-router-dom\"; // import { actionChannel } from \"redux-saga/effects\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DriverMaster = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let editDataGatingFromList = props.state;\n  let pageModeProps = props.pageMode;\n  const formRef = useRef(null);\n  const [pageMode, setPageMode] = useState(\"\");\n  const [userPageAccessState, setUserPageAccessState] = useState(123);\n  const [EditData, setEditData] = useState([]); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    PostAPIResponse,\n    DriverList,\n    RoleAccessModifiedinSingleArray\n  } = useSelector(state => ({\n    PostAPIResponse: state.VehicleReducer.PostDataMessage,\n    DriverList: state.VehicleReducer.DriverList,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData\n  }));\n  useEffect(() => {\n    dispatch(getMethodForDriverList());\n  }, [dispatch]); //userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = undefined;\n\n    if (editDataGatingFromList === undefined) {\n      let locationPath = history.location.pathname;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === locationPath;\n      });\n    } else if (!(editDataGatingFromList === undefined)) {\n      let relatatedPage = props.relatatedPage;\n      userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n        return `/${inx.ActualPagePath}` === relatatedPage;\n      });\n    }\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (!(userPageAccessState === '')) {\n      document.getElementById(\"txtName\").focus();\n    }\n\n    if (!(editDataGatingFromList === undefined)) {\n      setEditData(editDataGatingFromList);\n      setPageMode(pageModeProps);\n      dispatch(editDriverTypeSuccess({\n        Status: false\n      }));\n      dispatch(BreadcrumbShow(editDataGatingFromList.DriverMaster));\n      return;\n    }\n  }, [editDataGatingFromList]);\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      // setSubCategory_dropdown_Select('')\n      dispatch(PostMethod_ForDriverMasterSuccess({\n        Status: false\n      }));\n      formRef.current.reset();\n\n      if (pageMode === \"dropdownAdd\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: '/DriverList'\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(getMethod_ForDriverListSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n\n  const FormSubmitButton_Handler = (event, values) => {\n    const jsonBody = JSON.stringify({\n      Name: values.Name\n    });\n    dispatch(PostMethodForDriverMaster(jsonBody));\n  }; // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = '';\n\n  if (pageMode === \"edit\" || pageMode === \"copy\" || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"DriverMaster | FoodERP-React FrontEnd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n            breadcrumbItem: userPageAccessState.PageHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \" vh-10 0 text-black\",\n              style: {\n                backgroundColor: \"#whitesmoke\"\n              },\n              children: /*#__PURE__*/_jsxDEV(AvForm, {\n                onValidSubmit: (e, v) => {\n                  FormSubmitButton_Handler(e, v);\n                },\n                ref: formRef,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: \"DriverMaster \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 170,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                              name: \"Name\",\n                              id: \"txtName\",\n                              value: EditData.VehicleNumber,\n                              type: \"text\",\n                              placeholder: \"Please Enter DriverMaster\",\n                              autoComplete: \"off\",\n                              validate: {\n                                required: {\n                                  value: true,\n                                  errorMessage: 'Please Enter DriverMaster '\n                                }\n                              },\n                              onChange: e => {\n                                dispatch(BreadcrumbShow(e.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 171,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 169,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(Col, {\n                                sm: 2,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Update Party Type\",\n                                    className: \"btn btn-success w-md mt-3\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fas fa-edit me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 197,\n                                      columnNumber: 89\n                                    }, this), \"Update\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 192,\n                                    columnNumber: 85\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                    type: \"submit\",\n                                    \"data-mdb-toggle\": \"tooltip\",\n                                    \"data-mdb-placement\": \"top\",\n                                    title: \"Save Party Type\",\n                                    className: \"btn btn-primary w-md mt-3 \",\n                                    children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"fas fa-save me-2\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 208,\n                                      columnNumber: 91\n                                    }, this), \" Save\"]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 204,\n                                    columnNumber: 89\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 188,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 187,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 186,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 185,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(DriverMaster, \"+sC+ZdwayGQ3LM8ePleMNPUbPFQ=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = DriverMaster;\nexport default DriverMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverMaster\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","useDispatch","useSelector","Tbody","Thead","AlertState","CommonGetRoleAccessFunction","PostMethodForDriverMaster","getMethodForDriverList","PostMethod_ForDriverMasterSuccess","getMethod_ForDriverListSuccess","editDriverTypeSuccess","useHistory","DriverMaster","props","dispatch","history","editDataGatingFromList","state","pageModeProps","pageMode","formRef","setPageMode","userPageAccessState","setUserPageAccessState","EditData","setEditData","PostAPIResponse","DriverList","RoleAccessModifiedinSingleArray","VehicleReducer","PostDataMessage","Login","RoleAccessUpdateData","userAcc","undefined","locationPath","location","pathname","find","inx","ActualPagePath","relatatedPage","document","getElementById","focus","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","FormSubmitButton_Handler","event","values","jsonBody","Name","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","e","v","VehicleNumber","required","value","errorMessage","target","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/DriverMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Label,\r\n    Row,\r\n   \r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Tbody, Thead } from \"react-super-responsive-table\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport { PostMethodForDriverMaster, getMethodForDriverList, PostMethod_ForDriverMasterSuccess, getMethod_ForDriverListSuccess, editDriverTypeSuccess } from \"../../../store/Administrator/DriverRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { actionChannel } from \"redux-saga/effects\";\r\n\r\n\r\n\r\nconst DriverMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    let editDataGatingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    const formRef = useRef(null);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n    const [EditData, setEditData] = useState([]);\r\n\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const { PostAPIResponse, DriverList, RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n            PostAPIResponse: state.VehicleReducer.PostDataMessage,\r\n            DriverList: state.VehicleReducer.DriverList,\r\n            RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n\r\n        }));\r\n\r\n\r\n    useEffect(() => {\r\n         dispatch(getMethodForDriverList());\r\n        \r\n    }, [dispatch]);\r\n\r\n    //userAccess useEffect\r\n    useEffect(() => {\r\n\r\n        let userAcc = undefined\r\n        if ((editDataGatingFromList === undefined)) {\r\n\r\n            let locationPath = history.location.pathname\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === locationPath)\r\n            })\r\n        }\r\n        else if (!(editDataGatingFromList === undefined)) {\r\n            let relatatedPage = props.relatatedPage\r\n            userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n                return (`/${inx.ActualPagePath}` === relatatedPage)\r\n            })\r\n\r\n        }\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if (!(editDataGatingFromList === undefined)) {\r\n            \r\n            setEditData(editDataGatingFromList);\r\n            setPageMode(pageModeProps);\r\n\r\n            dispatch(editDriverTypeSuccess({ Status: false }))\r\n            dispatch(BreadcrumbShow(editDataGatingFromList.DriverMaster))\r\n            return\r\n        }\r\n    }, [editDataGatingFromList])\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            // setSubCategory_dropdown_Select('')\r\n            dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/DriverList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForDriverListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n\r\n    const FormSubmitButton_Handler = (event, values) => {\r\n        const jsonBody = JSON.stringify({\r\n            Name: values.Name,\r\n\r\n        });\r\n        dispatch(PostMethodForDriverMaster(jsonBody));\r\n    };\r\n\r\n    \r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((pageMode === \"edit\") || (pageMode === \"copy\") || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>DriverMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <AvForm onValidSubmit={(e, v) => { FormSubmitButton_Handler(e, v) }}\r\n                                    ref={formRef}>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">DriverMaster </Label>\r\n                                                            <AvField\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={EditData.VehicleNumber}\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Please Enter DriverMaster\"\r\n                                                                autoComplete='off'\r\n                                                                validate={{\r\n                                                                    required: { value: true, errorMessage: 'Please Enter DriverMaster ' },\r\n                                                                }}\r\n                                                                onChange={(e) => { dispatch(BreadcrumbShow(e.target.value)) }}\r\n                                                            />\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n                                                                                    \r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </AvForm>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DriverMaster\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAoD,OAApD;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,GAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,GARJ,QAUO,YAVP;AAWA,SAASC,OAAT,EAAkBC,MAAlB,QAAiC,gCAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,8BAA7B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,2BAAT,QAA4C,wDAA5C;AACA,SAASC,yBAAT,EAAoCC,sBAApC,EAA4DC,iCAA5D,EAA+FC,8BAA/F,EAA+HC,qBAA/H,QAA4J,iDAA5J;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;;;;AAIA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAE5B,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;EACA,MAAMe,OAAO,GAAGJ,UAAU,EAA1B;EAEA,IAAIK,sBAAsB,GAAGH,KAAK,CAACI,KAAnC;EACA,IAAIC,aAAa,GAAGL,KAAK,CAACM,QAA1B;EAEA,MAAMC,OAAO,GAAGpC,MAAM,CAAC,IAAD,CAAtB;EACA,MAAM,CAACmC,QAAD,EAAWE,WAAX,IAA0BpC,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACqC,mBAAD,EAAsBC,sBAAtB,IAAgDtC,QAAQ,CAAC,GAAD,CAA9D;EACA,MAAM,CAACuC,QAAD,EAAWC,WAAX,IAA0BxC,QAAQ,CAAC,EAAD,CAAxC,CAX4B,CAe5B;;EACA,MAAM;IAAEyC,eAAF;IAAmBC,UAAnB;IAA+BC;EAA/B,IAAmE3B,WAAW,CAAEgB,KAAD,KAAY;IACzFS,eAAe,EAAET,KAAK,CAACY,cAAN,CAAqBC,eADmD;IAEzFH,UAAU,EAAEV,KAAK,CAACY,cAAN,CAAqBF,UAFwD;IAGzFC,+BAA+B,EAAEX,KAAK,CAACc,KAAN,CAAYC;EAH4C,CAAZ,CAAD,CAApF;EAQAjD,SAAS,CAAC,MAAM;IACX+B,QAAQ,CAACP,sBAAsB,EAAvB,CAAR;EAEJ,CAHQ,EAGN,CAACO,QAAD,CAHM,CAAT,CAxB4B,CA6B5B;;EACA/B,SAAS,CAAC,MAAM;IAEZ,IAAIkD,OAAO,GAAGC,SAAd;;IACA,IAAKlB,sBAAsB,KAAKkB,SAAhC,EAA4C;MAExC,IAAIC,YAAY,GAAGpB,OAAO,CAACqB,QAAR,CAAiBC,QAApC;MACAJ,OAAO,GAAGL,+BAA+B,CAACU,IAAhC,CAAsCC,GAAD,IAAS;QACpD,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BL,YAArC;MACH,CAFS,CAAV;IAGH,CAND,MAOK,IAAI,EAAEnB,sBAAsB,KAAKkB,SAA7B,CAAJ,EAA6C;MAC9C,IAAIO,aAAa,GAAG5B,KAAK,CAAC4B,aAA1B;MACAR,OAAO,GAAGL,+BAA+B,CAACU,IAAhC,CAAsCC,GAAD,IAAS;QACpD,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BC,aAArC;MACH,CAFS,CAAV;IAIH;;IACD,IAAI,EAAER,OAAO,KAAKC,SAAd,CAAJ,EAA8B;MAC1BX,sBAAsB,CAACU,OAAD,CAAtB;IACH;EAEJ,CArBQ,EAqBN,CAACL,+BAAD,CArBM,CAAT,CA9B4B,CAqD5B;;EACA7C,SAAS,CAAC,MAAM;IAEZ,IAAI,EAAEuC,mBAAmB,KAAK,EAA1B,CAAJ,EAAmC;MAAEoB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC;IAA6C;;IAClF,IAAI,EAAE5B,sBAAsB,KAAKkB,SAA7B,CAAJ,EAA6C;MAEzCT,WAAW,CAACT,sBAAD,CAAX;MACAK,WAAW,CAACH,aAAD,CAAX;MAEAJ,QAAQ,CAACJ,qBAAqB,CAAC;QAAEmC,MAAM,EAAE;MAAV,CAAD,CAAtB,CAAR;MACA/B,QAAQ,CAACf,cAAc,CAACiB,sBAAsB,CAACJ,YAAxB,CAAf,CAAR;MACA;IACH;EACJ,CAZQ,EAYN,CAACI,sBAAD,CAZM,CAAT;EAeAjC,SAAS,CAAC,MAAM;IACZ,IAAK2C,eAAe,CAACmB,MAAhB,KAA2B,IAA5B,IAAsCnB,eAAe,CAACoB,UAAhB,KAA+B,GAAzE,EAA+E;MAC3E;MACAhC,QAAQ,CAACN,iCAAiC,CAAC;QAAEqC,MAAM,EAAE;MAAV,CAAD,CAAlC,CAAR;MACAzB,OAAO,CAAC2B,OAAR,CAAgBC,KAAhB;;MACA,IAAI7B,QAAQ,KAAK,aAAjB,EAAgC;QAC5BL,QAAQ,CAACV,UAAU,CAAC;UAChB6C,IAAI,EAAE,CADU;UAEhBJ,MAAM,EAAE,IAFQ;UAGhBK,OAAO,EAAExB,eAAe,CAACwB;QAHT,CAAD,CAAX,CAAR;MAKH,CAND,MAOK;QACDpC,QAAQ,CAACV,UAAU,CAAC;UAChB6C,IAAI,EAAE,CADU;UAEhBJ,MAAM,EAAE,IAFQ;UAGhBK,OAAO,EAAExB,eAAe,CAACwB,OAHT;UAIhBC,YAAY,EAAE;QAJE,CAAD,CAAX,CAAR;MAMH;IACJ,CAnBD,MAoBK,IAAIzB,eAAe,CAACmB,MAAhB,KAA2B,IAA/B,EAAqC;MACtC/B,QAAQ,CAACL,8BAA8B,CAAC;QAAEoC,MAAM,EAAE;MAAV,CAAD,CAA/B,CAAR;MACA/B,QAAQ,CAACV,UAAU,CAAC;QAChB6C,IAAI,EAAE,CADU;QAEhBJ,MAAM,EAAE,IAFQ;QAGhBK,OAAO,EAAEE,IAAI,CAACC,SAAL,CAAeC,WAAW,CAACJ,OAA3B,CAHO;QAIhBC,YAAY,EAAE,KAJE;QAKhBI,mBAAmB,EAAE;MALL,CAAD,CAAX,CAAR;IAOH;EACJ,CA/BQ,EA+BN,CAAC7B,eAAD,CA/BM,CAAT;;EAkCA,MAAM8B,wBAAwB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;IAChD,MAAMC,QAAQ,GAAGP,IAAI,CAACC,SAAL,CAAe;MAC5BO,IAAI,EAAEF,MAAM,CAACE;IADe,CAAf,CAAjB;IAIA9C,QAAQ,CAACR,yBAAyB,CAACqD,QAAD,CAA1B,CAAR;EACH,CAND,CAvG4B,CAiH5B;;;EACA,IAAIE,cAAc,GAAG,EAArB;;EACA,IAAK1C,QAAQ,KAAK,MAAd,IAA0BA,QAAQ,KAAK,MAAvC,IAAmDA,QAAQ,KAAK,aAApE,EAAoF;IAAE0C,cAAc,GAAG,OAAjB;EAA0B;;EAAA;;EAEhH,IAAI,EAAEvC,mBAAmB,KAAK,EAA1B,CAAJ,EAAmC;IAC/B,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,uBACI;QAAK,SAAS,EAAC,cAAf;QAA8B,KAAK,EAAE;UAAEwC,SAAS,EAAED;QAAb,CAArC;QAAA,uBACI,QAAC,SAAD;UAAW,KAAK,MAAhB;UAAA,wBACI,QAAC,QAAD;YAAA,uBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAII,QAAC,UAAD;YAAY,cAAc,EAAEvC,mBAAmB,CAACyC;UAAhD;YAAA;YAAA;YAAA;UAAA,QAJJ,eAMI,QAAC,IAAD;YAAM,SAAS,EAAC,YAAhB;YAAA,wBACI,QAAC,UAAD;cAAY,SAAS,EAAC,0BAAtB;cAAiD,KAAK,EAAE;gBAAEC,eAAe,EAAE;cAAnB,CAAxD;cAAA,wBACI;gBAAI,SAAS,EAAC,uBAAd;gBAAA,UAAuC1C,mBAAmB,CAAC2C;cAA3D;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAG,SAAS,EAAC,4BAAb;gBAAA,UAA2C3C,mBAAmB,CAAC4C;cAA/D;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAMI,QAAC,QAAD;cAAU,SAAS,EAAC,qBAApB;cAA0C,KAAK,EAAE;gBAAEF,eAAe,EAAE;cAAnB,CAAjD;cAAA,uBACI,QAAC,MAAD;gBAAQ,aAAa,EAAE,CAACG,CAAD,EAAIC,CAAJ,KAAU;kBAAEZ,wBAAwB,CAACW,CAAD,EAAIC,CAAJ,CAAxB;gBAAgC,CAAnE;gBACI,GAAG,EAAEhD,OADT;gBAAA,uBAEI,QAAC,GAAD;kBAAK,SAAS,EAAC,EAAf;kBAAA,uBACI,QAAC,GAAD;oBAAK,EAAE,EAAE,EAAT;oBAAA,uBACI,QAAC,IAAD;sBAAA,uBACI,QAAC,QAAD;wBAAU,KAAK,EAAE;0BAAE4C,eAAe,EAAE;wBAAnB,CAAjB;wBAAA,uBACI,QAAC,GAAD;0BAAA,wBACI,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACI,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADJ,eAEI,QAAC,OAAD;8BACI,IAAI,EAAC,MADT;8BAEI,EAAE,EAAC,SAFP;8BAGI,KAAK,EAAExC,QAAQ,CAAC6C,aAHpB;8BAII,IAAI,EAAC,MAJT;8BAKI,WAAW,EAAC,2BALhB;8BAMI,YAAY,EAAC,KANjB;8BAOI,QAAQ,EAAE;gCACNC,QAAQ,EAAE;kCAAEC,KAAK,EAAE,IAAT;kCAAeC,YAAY,EAAE;gCAA7B;8BADJ,CAPd;8BAUI,QAAQ,EAAGL,CAAD,IAAO;gCAAErD,QAAQ,CAACf,cAAc,CAACoE,CAAC,CAACM,MAAF,CAASF,KAAV,CAAf,CAAR;8BAA0C;4BAVjE;8BAAA;8BAAA;8BAAA;4BAAA,QAFJ;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QADJ,eAiBI,QAAC,SAAD;4BAAA,uBACI,QAAC,GAAD;8BAAA,uBACI,QAAC,GAAD;gCAAK,EAAE,EAAE,CAAT;gCAAA,uBACI;kCAAA,UAEQpD,QAAQ,KAAK,MAAb,GACIG,mBAAmB,CAACoD,iBAApB,gBACI;oCACI,IAAI,EAAC,QADT;oCAEI,mBAAgB,SAFpB;oCAE8B,sBAAmB,KAFjD;oCAEuD,KAAK,EAAC,mBAF7D;oCAGI,SAAS,EAAC,2BAHd;oCAAA,wBAKI;sCAAG,KAAK,EAAC;oCAAT;sCAAA;sCAAA;sCAAA;oCAAA,QALJ;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,gBASI,qCAVR,GAaQpD,mBAAmB,CAACqD,iBAApB,gBACI;oCACI,IAAI,EAAC,QADT;oCAEI,mBAAgB,SAFpB;oCAE8B,sBAAmB,KAFjD;oCAEuD,KAAK,EAAC,iBAF7D;oCAGI,SAAS,EAAC,4BAHd;oCAAA,6BAIE;sCAAG,SAAS,EAAC;oCAAb;sCAAA;sCAAA;sCAAA;oCAAA,QAJF;kCAAA;oCAAA;oCAAA;oCAAA;kCAAA,QADJ,gBAQI;gCAvBpB;kCAAA;kCAAA;kCAAA;gCAAA;8BADJ;gCAAA;gCAAA;gCAAA;8BAAA;4BADJ;8BAAA;8BAAA;8BAAA;4BAAA;0BADJ;4BAAA;4BAAA;4BAAA;0BAAA,QAjBJ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBADJ;wBAAA;wBAAA;wBAAA;sBAAA;oBADJ;sBAAA;sBAAA;sBAAA;oBAAA;kBADJ;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA;cAFJ;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA,QANJ;UAAA;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAsFH,CAvFD,MAwFK;IACD,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;AACJ,CAlND;;GAAM/D,Y;UAEeZ,W,EACDW,U,EAayDV,W;;;KAhBvEW,Y;AAoNN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}