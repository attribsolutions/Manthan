{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { getOrderListSuccess, deleteOrderIdSuccess, getSupplierSuccess, goButtonSuccess, postOrderSuccess, editOrderIdSuccess, updateOrderIdSuccess, getOrderListPageSuccess } from \"./actions\";\nimport { editOrderID_forOrderPage_ApiCall, UpdateOrder_ID_ApiCall, deleteOrderID_forOrderPage_ApiCall, OrderPage_Post_API, OrderPage_GetSupplier_API, OrderPage_GoButton_API, OrderPage_get_API, getOrderList_For_Listpage } from \"../../../helpers/backend_helper\";\nimport { GET_ORDER_LIST, UPDATE_ORDER_ID_FROM_ORDER_PAGE, EDIT_ORDER_FOR_ORDER_PAGE, DELETE_ORDER_FOR_ORDER_PAGE, GET_SUPPLIER, GO_BUTTON_FOR_ORDER_PAGE, POST_ORDER_FROM_ORDER_PAGE, GET_ORDER_LIST_PAGE } from \"./actionType\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\n\nfunction* goButtonGenFunc(_ref) {\n  let {\n    data,\n    hasEditVal\n  } = _ref;\n  debugger;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(OrderPage_GoButton_API, data);\n\n    if (hasEditVal) {\n      response.Data.forEach(element => {\n        hasEditVal.OrderItem.forEach(ele => {\n          if (element.id === ele.Item) {\n            element[\"inpRate\"] = ele.Rate;\n            element[\"inpQty\"] = ele.Quantity;\n            element[\"totalAmount\"] = ele.Amount;\n            element[\"UOM\"] = ele.Unit;\n            element[\"UOMLabel\"] = ele.UnitName;\n            element[\"inpBaseUnitQty\"] = ele.BaseUnitQuantity;\n          }\n        });\n      });\n    }\n\n    yield put(goButtonSuccess(response.Data));\n    yield put(SpinnerState(false));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* postOrder_GenFunc(_ref2) {\n  let {\n    data\n  } = _ref2;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(OrderPage_Post_API, data);\n    yield put(postOrderSuccess(response));\n    yield put(SpinnerState(false));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* editOrderGenFunc(_ref3) {\n  let {\n    id,\n    pageMode\n  } = _ref3;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(editOrderID_forOrderPage_ApiCall, id);\n    response.pageMode = pageMode;\n    yield put(SpinnerState(false));\n    debugger;\n    yield put(editOrderIdSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* DeleteOrder_GenratorFunction(_ref4) {\n  let {\n    id\n  } = _ref4;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(deleteOrderID_forOrderPage_ApiCall, id);\n    yield put(SpinnerState(false));\n    yield put(deleteOrderIdSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\n_c = DeleteOrder_GenratorFunction;\n\nfunction* UpdateOrder_ID_GenratorFunction(_ref5) {\n  let {\n    data,\n    id\n  } = _ref5;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(UpdateOrder_ID_ApiCall, data, id);\n    yield put(SpinnerState(false));\n    yield put(updateOrderIdSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // List Page API\n\n\n_c2 = UpdateOrder_ID_GenratorFunction;\n\nfunction* get_OrderListPage_GenratorFunction() {\n  debugger;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(getOrderList_For_Listpage);\n    yield put(SpinnerState(false));\n    yield put(getOrderListPageSuccess(response.Data));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* OrderPageSaga() {\n  yield takeEvery(GO_BUTTON_FOR_ORDER_PAGE, goButtonGenFunc);\n  yield takeEvery(POST_ORDER_FROM_ORDER_PAGE, postOrder_GenFunc);\n  yield takeEvery(EDIT_ORDER_FOR_ORDER_PAGE, editOrderGenFunc);\n  yield takeEvery(UPDATE_ORDER_ID_FROM_ORDER_PAGE, UpdateOrder_ID_GenratorFunction);\n  yield takeEvery(DELETE_ORDER_FOR_ORDER_PAGE, DeleteOrder_GenratorFunction);\n  yield takeEvery(GET_ORDER_LIST_PAGE, get_OrderListPage_GenratorFunction);\n}\n\n_c3 = OrderPageSaga;\nexport default OrderPageSaga;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DeleteOrder_GenratorFunction\");\n$RefreshReg$(_c2, \"UpdateOrder_ID_GenratorFunction\");\n$RefreshReg$(_c3, \"OrderPageSaga\");","map":{"version":3,"names":["call","put","takeEvery","getOrderListSuccess","deleteOrderIdSuccess","getSupplierSuccess","goButtonSuccess","postOrderSuccess","editOrderIdSuccess","updateOrderIdSuccess","getOrderListPageSuccess","editOrderID_forOrderPage_ApiCall","UpdateOrder_ID_ApiCall","deleteOrderID_forOrderPage_ApiCall","OrderPage_Post_API","OrderPage_GetSupplier_API","OrderPage_GoButton_API","OrderPage_get_API","getOrderList_For_Listpage","GET_ORDER_LIST","UPDATE_ORDER_ID_FROM_ORDER_PAGE","EDIT_ORDER_FOR_ORDER_PAGE","DELETE_ORDER_FOR_ORDER_PAGE","GET_SUPPLIER","GO_BUTTON_FOR_ORDER_PAGE","POST_ORDER_FROM_ORDER_PAGE","GET_ORDER_LIST_PAGE","SpinnerState","AlertState","goButtonGenFunc","data","hasEditVal","response","Data","forEach","element","OrderItem","ele","id","Item","Rate","Quantity","Amount","Unit","UnitName","BaseUnitQuantity","error","Type","Status","Message","postOrder_GenFunc","editOrderGenFunc","pageMode","DeleteOrder_GenratorFunction","UpdateOrder_ID_GenratorFunction","get_OrderListPage_GenratorFunction","OrderPageSaga"],"sources":["D:/GitProjects/Manthan/src/store/Purchase/OrderPageRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  getOrderListSuccess,\r\n  deleteOrderIdSuccess,\r\n  getSupplierSuccess,\r\n  goButtonSuccess,\r\n  postOrderSuccess,\r\n  editOrderIdSuccess,\r\n  updateOrderIdSuccess,\r\n  getOrderListPageSuccess,\r\n} from \"./actions\";\r\nimport {\r\n\r\n  editOrderID_forOrderPage_ApiCall,\r\n  UpdateOrder_ID_ApiCall,\r\n  deleteOrderID_forOrderPage_ApiCall,\r\n  OrderPage_Post_API,\r\n  OrderPage_GetSupplier_API,\r\n  OrderPage_GoButton_API,\r\n  OrderPage_get_API,\r\n  getOrderList_For_Listpage,\r\n} from \"../../../helpers/backend_helper\";\r\n\r\nimport {\r\n  GET_ORDER_LIST,\r\n  UPDATE_ORDER_ID_FROM_ORDER_PAGE,\r\n  EDIT_ORDER_FOR_ORDER_PAGE,\r\n  DELETE_ORDER_FOR_ORDER_PAGE,\r\n  GET_SUPPLIER,\r\n  GO_BUTTON_FOR_ORDER_PAGE,\r\n  POST_ORDER_FROM_ORDER_PAGE,\r\n  GET_ORDER_LIST_PAGE,\r\n} from \"./actionType\";\r\n\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\r\n\r\n\r\nfunction* goButtonGenFunc({ data, hasEditVal }) {\r\n  debugger\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(OrderPage_GoButton_API, data);\r\n    if (hasEditVal) {\r\n      response.Data.forEach(element => {\r\n        hasEditVal.OrderItem.forEach(ele => {\r\n          if (element.id === ele.Item) {\r\n            element[\"inpRate\"] = ele.Rate\r\n            element[\"inpQty\"] = ele.Quantity\r\n            element[\"totalAmount\"] = ele.Amount\r\n            element[\"UOM\"] = ele.Unit\r\n            element[\"UOMLabel\"] = ele.UnitName\r\n            element[\"inpBaseUnitQty\"] = ele.BaseUnitQuantity\r\n\r\n          }\r\n        })\r\n      });\r\n    }\r\n    yield put(goButtonSuccess(response.Data));\r\n    yield put(SpinnerState(false))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* postOrder_GenFunc({ data }) {\r\n\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(OrderPage_Post_API, data);\r\n    yield put(postOrderSuccess(response));\r\n    yield put(SpinnerState(false))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* editOrderGenFunc({ id, pageMode }) {\r\n\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(editOrderID_forOrderPage_ApiCall, id);\r\n    response.pageMode = pageMode\r\n    yield put(SpinnerState(false))\r\n    debugger\r\n    yield put(editOrderIdSuccess(response));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* DeleteOrder_GenratorFunction({ id }) {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(deleteOrderID_forOrderPage_ApiCall, id);\r\n    yield put(SpinnerState(false))\r\n    yield put(deleteOrderIdSuccess(response));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* UpdateOrder_ID_GenratorFunction({ data, id }) {\r\n\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(UpdateOrder_ID_ApiCall, data, id);\r\n    yield put(SpinnerState(false))\r\n    yield put(updateOrderIdSuccess(response))\r\n  }\r\n  catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// List Page API\r\nfunction* get_OrderListPage_GenratorFunction() {\r\n  debugger\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(getOrderList_For_Listpage);\r\n    yield put(SpinnerState(false))\r\n    yield put(getOrderListPageSuccess(response.Data))\r\n\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* OrderPageSaga() {\r\n \r\n  yield takeEvery(GO_BUTTON_FOR_ORDER_PAGE, goButtonGenFunc);\r\n  yield takeEvery(POST_ORDER_FROM_ORDER_PAGE, postOrder_GenFunc);\r\n  yield takeEvery(EDIT_ORDER_FOR_ORDER_PAGE, editOrderGenFunc);\r\n  yield takeEvery(UPDATE_ORDER_ID_FROM_ORDER_PAGE, UpdateOrder_ID_GenratorFunction)\r\n  yield takeEvery(DELETE_ORDER_FOR_ORDER_PAGE, DeleteOrder_GenratorFunction);\r\n  yield takeEvery(GET_ORDER_LIST_PAGE, get_OrderListPage_GenratorFunction);\r\n}\r\n\r\nexport default OrderPageSaga;\r\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,SACEC,mBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,gBALF,EAMEC,kBANF,EAOEC,oBAPF,EAQEC,uBARF,QASO,WATP;AAUA,SAEEC,gCAFF,EAGEC,sBAHF,EAIEC,kCAJF,EAKEC,kBALF,EAMEC,yBANF,EAOEC,sBAPF,EAQEC,iBARF,EASEC,yBATF,QAUO,iCAVP;AAYA,SACEC,cADF,EAEEC,+BAFF,EAGEC,yBAHF,EAIEC,2BAJF,EAKEC,YALF,EAMEC,wBANF,EAOEC,0BAPF,EAQEC,mBARF,QASO,cATP;AAWA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,UAAT,QAA2B,yCAA3B;;AAGA,UAAUC,eAAV,OAAgD;EAAA,IAAtB;IAAEC,IAAF;IAAQC;EAAR,CAAsB;EAC9C;EACA,MAAM9B,GAAG,CAAC0B,YAAY,CAAC,IAAD,CAAb,CAAT;;EACA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMhC,IAAI,CAACgB,sBAAD,EAAyBc,IAAzB,CAA3B;;IACA,IAAIC,UAAJ,EAAgB;MACdC,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,OAAO,IAAI;QAC/BJ,UAAU,CAACK,SAAX,CAAqBF,OAArB,CAA6BG,GAAG,IAAI;UAClC,IAAIF,OAAO,CAACG,EAAR,KAAeD,GAAG,CAACE,IAAvB,EAA6B;YAC3BJ,OAAO,CAAC,SAAD,CAAP,GAAqBE,GAAG,CAACG,IAAzB;YACAL,OAAO,CAAC,QAAD,CAAP,GAAoBE,GAAG,CAACI,QAAxB;YACAN,OAAO,CAAC,aAAD,CAAP,GAAyBE,GAAG,CAACK,MAA7B;YACAP,OAAO,CAAC,KAAD,CAAP,GAAiBE,GAAG,CAACM,IAArB;YACAR,OAAO,CAAC,UAAD,CAAP,GAAsBE,GAAG,CAACO,QAA1B;YACAT,OAAO,CAAC,gBAAD,CAAP,GAA4BE,GAAG,CAACQ,gBAAhC;UAED;QACF,CAVD;MAWD,CAZD;IAaD;;IACD,MAAM5C,GAAG,CAACK,eAAe,CAAC0B,QAAQ,CAACC,IAAV,CAAhB,CAAT;IACA,MAAMhC,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;EACD,CAnBD,CAmBE,OAAOmB,KAAP,EAAc;IACd,MAAM7C,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAAC2B,UAAU,CAAC;MACnBmB,IAAI,EAAE,CADa;MAEnBC,MAAM,EAAE,IAFW;MAELC,OAAO,EAAE;IAFJ,CAAD,CAAX,CAAT;EAID;AACF;;AAED,UAAUC,iBAAV,QAAsC;EAAA,IAAV;IAAEpB;EAAF,CAAU;EAEpC,MAAM7B,GAAG,CAAC0B,YAAY,CAAC,IAAD,CAAb,CAAT;;EACA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMhC,IAAI,CAACc,kBAAD,EAAqBgB,IAArB,CAA3B;IACA,MAAM7B,GAAG,CAACM,gBAAgB,CAACyB,QAAD,CAAjB,CAAT;IACA,MAAM/B,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;EACD,CAJD,CAIE,OAAOmB,KAAP,EAAc;IACd,MAAM7C,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAAC2B,UAAU,CAAC;MACnBmB,IAAI,EAAE,CADa;MAEnBC,MAAM,EAAE,IAFW;MAELC,OAAO,EAAE;IAFJ,CAAD,CAAX,CAAT;EAID;AACF;;AAED,UAAUE,gBAAV,QAA6C;EAAA,IAAlB;IAAEb,EAAF;IAAMc;EAAN,CAAkB;EAE3C,MAAMnD,GAAG,CAAC0B,YAAY,CAAC,IAAD,CAAb,CAAT;;EACA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMhC,IAAI,CAACW,gCAAD,EAAmC2B,EAAnC,CAA3B;IACAN,QAAQ,CAACoB,QAAT,GAAoBA,QAApB;IACA,MAAMnD,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA;IACA,MAAM1B,GAAG,CAACO,kBAAkB,CAACwB,QAAD,CAAnB,CAAT;EACD,CAND,CAME,OAAOc,KAAP,EAAc;IACd,MAAM7C,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAAC2B,UAAU,CAAC;MACnBmB,IAAI,EAAE,CADa;MAEnBC,MAAM,EAAE,IAFW;MAELC,OAAO,EAAE;IAFJ,CAAD,CAAX,CAAT;EAID;AACF;;AAED,UAAUI,4BAAV,QAA+C;EAAA,IAAR;IAAEf;EAAF,CAAQ;EAC7C,MAAMrC,GAAG,CAAC0B,YAAY,CAAC,IAAD,CAAb,CAAT;;EACA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMhC,IAAI,CAACa,kCAAD,EAAqCyB,EAArC,CAA3B;IACA,MAAMrC,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAACG,oBAAoB,CAAC4B,QAAD,CAArB,CAAT;EACD,CAJD,CAIE,OAAOc,KAAP,EAAc;IACd,MAAM7C,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAAC2B,UAAU,CAAC;MACnBmB,IAAI,EAAE,CADa;MAEnBC,MAAM,EAAE,IAFW;MAELC,OAAO,EAAE;IAFJ,CAAD,CAAX,CAAT;EAID;AACF;;KAbSI,4B;;AAeV,UAAUC,+BAAV,QAAwD;EAAA,IAAd;IAAExB,IAAF;IAAQQ;EAAR,CAAc;;EAEtD,IAAI;IACF,MAAMrC,GAAG,CAAC0B,YAAY,CAAC,IAAD,CAAb,CAAT;IACA,MAAMK,QAAQ,GAAG,MAAMhC,IAAI,CAACY,sBAAD,EAAyBkB,IAAzB,EAA+BQ,EAA/B,CAA3B;IACA,MAAMrC,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAACQ,oBAAoB,CAACuB,QAAD,CAArB,CAAT;EACD,CALD,CAMA,OAAOc,KAAP,EAAc;IACZ,MAAM7C,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAAC2B,UAAU,CAAC;MACnBmB,IAAI,EAAE,CADa;MAEnBC,MAAM,EAAE,IAFW;MAELC,OAAO,EAAE;IAFJ,CAAD,CAAX,CAAT;EAID;AACF,C,CAED;;;MAjBUK,+B;;AAkBV,UAAUC,kCAAV,GAA+C;EAC7C;EACA,MAAMtD,GAAG,CAAC0B,YAAY,CAAC,IAAD,CAAb,CAAT;;EACA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMhC,IAAI,CAACkB,yBAAD,CAA3B;IACA,MAAMjB,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAACS,uBAAuB,CAACsB,QAAQ,CAACC,IAAV,CAAxB,CAAT;EAED,CALD,CAKE,OAAOa,KAAP,EAAc;IACd,MAAM7C,GAAG,CAAC0B,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAM1B,GAAG,CAAC2B,UAAU,CAAC;MACnBmB,IAAI,EAAE,CADa;MAEnBC,MAAM,EAAE,IAFW;MAELC,OAAO,EAAE;IAFJ,CAAD,CAAX,CAAT;EAID;AACF;;AAED,UAAUO,aAAV,GAA0B;EAExB,MAAMtD,SAAS,CAACsB,wBAAD,EAA2BK,eAA3B,CAAf;EACA,MAAM3B,SAAS,CAACuB,0BAAD,EAA6ByB,iBAA7B,CAAf;EACA,MAAMhD,SAAS,CAACmB,yBAAD,EAA4B8B,gBAA5B,CAAf;EACA,MAAMjD,SAAS,CAACkB,+BAAD,EAAkCkC,+BAAlC,CAAf;EACA,MAAMpD,SAAS,CAACoB,2BAAD,EAA8B+B,4BAA9B,CAAf;EACA,MAAMnD,SAAS,CAACwB,mBAAD,EAAsB6B,kCAAtB,CAAf;AACD;;MARSC,a;AAUV,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}