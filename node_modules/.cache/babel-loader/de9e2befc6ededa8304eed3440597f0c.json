{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Order\\\\OrderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Modal, Row } from \"reactstrap\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"../../assets/scss/CustomTable2/datatables.scss\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { useHistory } from \"react-router-dom\";\nimport { getOrderListPage } from \"../../store/Purchase/OrderPageRedux/actions\";\nimport { AlertState } from \"../../store/actions\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\nimport { mySearchProps } from \"../../components/Common/CmponentRelatedCommonFile/SearchBox/MySearch\";\nimport { InvoiceFakeData } from \"./InvioceFakedata\";\nimport generate from \"../../Reports/InvioceReport/Page\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userPageAccessState, setUserPageAccessState] = useState(''); // get Access redux data\n\n  const {\n    tableList,\n    deleteMsg,\n    userAccess\n  } = useSelector(state => ({\n    tableList: state.OrderPageReducer.OrderListPage,\n    deleteMsg: state.OrderPageReducer.deleteMsgForListPage,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageFieldList\n  }));\n  console.log(userAccess);\n  useEffect(() => {\n    const locationPath = history.location.pathname;\n    let userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [userAccess]); //  This UseEffect => Featch Modules List data  First Rendering\n\n  useEffect(() => {\n    dispatch(getOrderListPage());\n  }, []); // useEffect(() => {\n  //     if ((deleteMsg.Status === true) && (deleteMsg.StatusCode === 200)) {\n  //         dispatch(deleteGSTListPageSuccess({ Status: false }));\n  //         dispatch(\n  //             AlertState({\n  //                 Type: 1,\n  //                 Status: true,\n  //                 Message: deleteMsg.Message,\n  //                 AfterResponseAction: getGSTListPage,\n  //             })\n  //         );\n  //     } else if (deleteMsg.Status === true) {\n  //         dispatch(deleteGSTListPageSuccess({ Status: false }));\n  //         dispatch(\n  //             AlertState({\n  //                 Type: 3,\n  //                 Status: true,\n  //                 Message: JSON.stringify(deleteMsg.Message),\n  //             })\n  //         );\n  //     }\n  // }, [deleteMsg]);\n  //select id for delete row\n\n  const deleteHandeler = id => {\n    debugger;\n    dispatch(AlertState({\n      Type: 5,\n      Status: true,\n      Message: `Are you sure you want to delete this Order `,\n      RedirectPath: false,\n      // PermissionAction: deleteGSTListPage,\n      ID: id\n    }));\n  };\n\n  const EditPageHandler = rowData => {\n    debugger;\n    let RelatedPageID = userPageAccessState.RelatedPageID;\n    const found = userAccess.find(element => {\n      return element.id === RelatedPageID;\n    });\n\n    if (!(found === undefined)) {\n      history.push({\n        pathname: `/${found.ActualPagePath}`,\n        editValue: rowData,\n        pageMode: 'edit'\n      });\n    }\n  };\n\n  function onPrintHandeler(id) {\n    // dispatch(editOrder_forOrderPage(id));\n    // if (!(editOrderData.length === 0)) {\n    //   console.log(\"datataat\", editOrderData)\n    generate(InvoiceFakeData);\n  }\n\n  const pageOptions = {\n    sizePerPage: 10,\n    totalSize: tableList.length,\n    custom: true\n  };\n  const pagesListColumns = [{\n    text: \"Customer\",\n    dataField: \"Customer\",\n    sort: true\n  }, {\n    text: \"OrderAmount\",\n    dataField: \"OrderAmount\",\n    sort: true\n  }, {\n    text: \"OrderDate\",\n    dataField: \"OrderDate\",\n    sort: true\n  }, {\n    text: \"Action\",\n    dataField: \"\",\n    hidden: !userPageAccessState.RoleAccess_IsEdit && !userPageAccessState.RoleAccess_IsView && !userPageAccessState.RoleAccess_IsDelete ? true : false,\n    formatter: (cellContent, Role) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-3\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Edit Order\",\n        onClick: () => {\n          EditPageHandler(Role);\n        },\n        className: \"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-pencil font-size-18\",\n          id: \"edittooltip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this) : null, !userPageAccessState.RoleAccess_IsEdit && userPageAccessState.RoleAccess_IsView ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"View Order\",\n        onClick: () => {\n          EditPageHandler(Role);\n        },\n        className: \"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bxs-show font-size-18 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }, this) : null, userPageAccessState.RoleAccess_IsDelete ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Delete Order\",\n        onClick: () => {\n          deleteHandeler(Role.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-delete font-size-18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }, this) : null, userPageAccessState.RoleAccess_IsPrint ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"badge badge-soft-info font-size-12 btn\\r btn-info waves-effect waves-light w-xxs border border-light\",\n        onClick: onPrintHandeler,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"mdi mdi-shredder font-size-18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this)\n  }];\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Orders| FoodERP-React FrontEnd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(PaginationProvider, {\n            pagination: paginationFactory(pageOptions),\n            children: _ref => {\n              let {\n                paginationProps,\n                paginationTableProps\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                keyField: \"id\",\n                columns: pagesListColumns,\n                data: tableList,\n                search: true,\n                children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n                    title: \"Count :\",\n                    breadcrumbItem: userPageAccessState.PageHeading,\n                    IsButtonVissible: userPageAccessState.RoleAccess_IsSave ? true : false,\n                    SearchProps: toolkitProps.searchProps,\n                    breadcrumbCount: `GST Count: ${tableList.length}`,\n                    IsSearchVissible: true,\n                    isExcelButtonVisible: true,\n                    ExcelData: tableList,\n                    RedirctPath: \"/Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      xl: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"table-responsive\",\n                        children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n                          keyField: \"id\",\n                          responsive: true,\n                          bordered: true,\n                          striped: false // cellEdit={cellEditFactory({ mode: 'dbclick' ,blurToSave: true})}\n                          // defaultSorted={commonDefaultSorted(\"Name\")}\n                          ,\n                          classes: \"table align-middle table-nowrap table-hover\",\n                          noDataIndication: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-danger text-center \",\n                            children: \"Items Not available\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 246,\n                            columnNumber: 79\n                          }, this),\n                          headerWrapperClasses: \"thead-light\",\n                          ...toolkitProps.baseProps,\n                          ...paginationTableProps\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 57\n                        }, this), mySearchProps(toolkitProps.searchProps)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"align-items-md-center mt-30\",\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      className: \"pagination pagination-rounded justify-content-end mb-2\",\n                      children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(OrderList, \"7IHT7b2EwiGtepEGynKMCxuWvak=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = OrderList;\nexport default OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useEffect","useState","Button","Col","Modal","Row","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","Search","BootstrapTable","useSelector","useDispatch","MetaTags","useHistory","getOrderListPage","AlertState","Breadcrumb","mySearchProps","InvoiceFakeData","generate","OrderList","props","dispatch","history","userPageAccessState","setUserPageAccessState","tableList","deleteMsg","userAccess","state","OrderPageReducer","OrderListPage","deleteMsgForListPage","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","pageFieldList","console","log","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","deleteHandeler","id","Type","Status","Message","RedirectPath","ID","EditPageHandler","rowData","RelatedPageID","found","element","push","editValue","pageMode","onPrintHandeler","pageOptions","sizePerPage","totalSize","length","custom","pagesListColumns","text","dataField","sort","hidden","RoleAccess_IsEdit","RoleAccess_IsView","RoleAccess_IsDelete","formatter","cellContent","Role","display","justifyContent","RoleAccess_IsPrint","paginationProps","paginationTableProps","toolkitProps","PageHeading","RoleAccess_IsSave","searchProps","baseProps"],"sources":["D:/GitProjects/Manthan/src/pages/Order/OrderList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Modal, Row } from \"reactstrap\";\r\nimport paginationFactory, {\r\n    PaginationListStandalone,\r\n    PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../assets/scss/CustomTable2/datatables.scss\"\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getOrderListPage } from \"../../store/Purchase/OrderPageRedux/actions\";\r\nimport { AlertState } from \"../../store/actions\";\r\nimport Breadcrumb from \"../../components/Common/Breadcrumb\";\r\nimport { mySearchProps } from \"../../components/Common/CmponentRelatedCommonFile/SearchBox/MySearch\";\r\nimport { InvoiceFakeData } from \"./InvioceFakedata\";\r\nimport generate from \"../../Reports/InvioceReport/Page\";\r\n\r\nconst OrderList = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n    // get Access redux data\r\n    const {\r\n        tableList,\r\n        deleteMsg,\r\n        userAccess, } = useSelector(\r\n            (state) => ({\r\n                tableList: state.OrderPageReducer.OrderListPage,\r\n                deleteMsg: state.OrderPageReducer.deleteMsgForListPage,\r\n                userAccess: state.Login.RoleAccessUpdateData,\r\n                pageField: state.CommonPageFieldReducer.pageFieldList\r\n            })\r\n        );\r\n    console.log(userAccess)\r\n\r\n    useEffect(() => {\r\n        const locationPath = history.location.pathname\r\n        let userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n    }, [userAccess])\r\n\r\n    //  This UseEffect => Featch Modules List data  First Rendering\r\n    useEffect(() => {\r\n        dispatch(getOrderListPage());\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     if ((deleteMsg.Status === true) && (deleteMsg.StatusCode === 200)) {\r\n    //         dispatch(deleteGSTListPageSuccess({ Status: false }));\r\n    //         dispatch(\r\n    //             AlertState({\r\n    //                 Type: 1,\r\n    //                 Status: true,\r\n    //                 Message: deleteMsg.Message,\r\n    //                 AfterResponseAction: getGSTListPage,\r\n    //             })\r\n    //         );\r\n    //     } else if (deleteMsg.Status === true) {\r\n    //         dispatch(deleteGSTListPageSuccess({ Status: false }));\r\n    //         dispatch(\r\n    //             AlertState({\r\n    //                 Type: 3,\r\n    //                 Status: true,\r\n    //                 Message: JSON.stringify(deleteMsg.Message),\r\n    //             })\r\n    //         );\r\n    //     }\r\n    // }, [deleteMsg]);\r\n\r\n    //select id for delete row\r\n    const deleteHandeler = (id) => {\r\n        debugger\r\n        dispatch(\r\n            AlertState({\r\n                Type: 5,\r\n                Status: true,\r\n                Message: `Are you sure you want to delete this Order `,\r\n                RedirectPath: false,\r\n                // PermissionAction: deleteGSTListPage,\r\n                ID: id,\r\n            })\r\n        );\r\n    };\r\n\r\n    const EditPageHandler = (rowData) => {\r\n        debugger\r\n        let RelatedPageID = userPageAccessState.RelatedPageID\r\n\r\n        const found = userAccess.find((element) => {\r\n            return element.id === RelatedPageID\r\n        })\r\n\r\n        if (!(found === undefined)) {\r\n            history.push({\r\n                pathname: `/${found.ActualPagePath}`,\r\n                editValue: rowData,\r\n                pageMode: 'edit'\r\n            })\r\n        }\r\n    }\r\n\r\n    function onPrintHandeler(id) {\r\n        // dispatch(editOrder_forOrderPage(id));\r\n        // if (!(editOrderData.length === 0)) {\r\n        //   console.log(\"datataat\", editOrderData)\r\n        generate(InvoiceFakeData)\r\n    }\r\n    const pageOptions = {\r\n        sizePerPage: 10,\r\n        totalSize: tableList.length,\r\n        custom: true,\r\n    };\r\n\r\n    const pagesListColumns = [\r\n        {\r\n            text: \"Customer\",\r\n            dataField: \"Customer\",\r\n            sort: true,\r\n        },\r\n        {\r\n            text: \"OrderAmount\",\r\n            dataField: \"OrderAmount\",\r\n            sort: true,\r\n        },\r\n        {\r\n            text: \"OrderDate\",\r\n            dataField: \"OrderDate\",\r\n            sort: true,\r\n        },\r\n\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            hidden: (\r\n                !(userPageAccessState.RoleAccess_IsEdit)\r\n                && !(userPageAccessState.RoleAccess_IsView)\r\n                && !(userPageAccessState.RoleAccess_IsDelete)) ? true : false,\r\n\r\n            formatter: (cellContent, Role) => (\r\n                <div className=\"d-flex gap-3\" style={{ display: 'flex', justifyContent: 'center' }} >\r\n                    {((userPageAccessState.RoleAccess_IsEdit)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Edit Order\"\r\n                            onClick={() => { EditPageHandler(Role); }}\r\n                            className=\"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\"\r\n                        >\r\n                            <i className=\"mdi mdi-pencil font-size-18\" id=\"edittooltip\"></i>\r\n                        </Button>\r\n                        :\r\n                        null}\r\n\r\n                    {(!(userPageAccessState.RoleAccess_IsEdit) && (userPageAccessState.RoleAccess_IsView)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"View Order\"\r\n                            onClick={() => { EditPageHandler(Role); }}\r\n                            className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n\r\n                        >\r\n                            <i className=\"bx bxs-show font-size-18 \"></i>\r\n                        </Button> : null}\r\n\r\n                    {((userPageAccessState.RoleAccess_IsDelete))\r\n                        ?\r\n                        <Button\r\n                            className=\"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Delete Order\"\r\n                            onClick={() => { deleteHandeler(Role.id) }}\r\n                        >\r\n                            <i className=\"mdi mdi-delete font-size-18\"></i>\r\n                        </Button>\r\n                        : null\r\n                    }\r\n                    {((userPageAccessState.RoleAccess_IsPrint))\r\n                        ?\r\n                        <Button\r\n                            className=\"badge badge-soft-info font-size-12 btn\r\n                         btn-info waves-effect waves-light w-xxs border border-light\"\r\n                            onClick={onPrintHandeler}\r\n                        >\r\n                            <i class=\"mdi mdi-shredder font-size-18\"></i>\r\n                        </Button>\r\n                        : null\r\n                    }\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\">\r\n                    <MetaTags>\r\n                        <title>Orders| FoodERP-React FrontEnd</title>\r\n                    </MetaTags>\r\n                    <div className=\"container-fluid\">\r\n                        <PaginationProvider\r\n                            pagination={paginationFactory(pageOptions)}\r\n                        >\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                                <ToolkitProvider\r\n                                    keyField='id'\r\n                                    columns={pagesListColumns}\r\n                                    data={tableList}\r\n                                    search\r\n                                >\r\n                                    {toolkitProps => (\r\n                                        <React.Fragment>\r\n                                            <Breadcrumb\r\n                                                title={\"Count :\"}\r\n                                                breadcrumbItem={userPageAccessState.PageHeading}\r\n                                                IsButtonVissible={(userPageAccessState.RoleAccess_IsSave) ? true : false}\r\n                                                SearchProps={toolkitProps.searchProps}\r\n                                                breadcrumbCount={`GST Count: ${tableList.length}`}\r\n                                                IsSearchVissible={true}\r\n                                                isExcelButtonVisible={true}\r\n                                                ExcelData={tableList}\r\n                                                RedirctPath={\"/Order\"}\r\n                                            />\r\n\r\n\r\n                                            <Row>\r\n                                                <Col xl=\"12\">\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <BootstrapTable\r\n                                                            keyField={\"id\"}\r\n                                                            responsive\r\n                                                            bordered={true}\r\n                                                            striped={false}\r\n                                                            // cellEdit={cellEditFactory({ mode: 'dbclick' ,blurToSave: true})}\r\n                                                            // defaultSorted={commonDefaultSorted(\"Name\")}\r\n                                                            classes={\"table align-middle table-nowrap table-hover\"}\r\n                                                            noDataIndication={<div className=\"text-danger text-center \">Items Not available</div>}\r\n                                                            headerWrapperClasses={\"thead-light\"}\r\n                                                            {...toolkitProps.baseProps}\r\n                                                            {...paginationTableProps}\r\n                                                        />\r\n                                                        {mySearchProps(toolkitProps.searchProps)}\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row className=\"align-items-md-center mt-30\">\r\n                                                <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                    <PaginationListStandalone\r\n                                                        {...paginationProps}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                    }\r\n                                </ToolkitProvider>\r\n                            )\r\n                            }\r\n\r\n                        </PaginationProvider>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderList;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}