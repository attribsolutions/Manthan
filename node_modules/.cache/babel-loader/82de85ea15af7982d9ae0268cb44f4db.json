{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\SearchBox\\\\SearchBoxSecond.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './Search.scss';\nimport { Search } from \"react-bootstrap-table2-toolkit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet view = false;\n\nconst onchange = e => {\n  e.preventDefault();\n  view = e.target.value.length;\n};\n\nexport default function SearchBoxSecond() {\n  _s();\n\n  const {\n    SearchBar\n  } = Search;\n  const [searchRoleData, setSearchRoleData] = useState([]); // const  RoleAccessData=demoRolleAcess\n\n  const {\n    RoleAccessData,\n    searchProps\n  } = useSelector(state => ({\n    RoleAccessData: state.Login.RoleData,\n    searchProps: state.BreadcrumbReducer.searchProps\n  }));\n  useEffect(() => {\n    let SearchRoleData_initial = [];\n    RoleAccessData.map(i => {\n      i.ModuleData.map(index => {\n        SearchRoleData_initial.push(index);\n      });\n    });\n    setSearchRoleData(SearchRoleData_initial);\n  }, [RoleAccessData]);\n  useEffect(() => {\n    function autocomplete(inp, arr) {\n      /*the autocomplete function takes two arguments,\r\n      the text field element and an array of possible autocompleted values:*/\n      var currentFocus;\n      /*execute a function when someone writes in the text field:*/\n\n      inp.addEventListener(\"input\", function (e) {\n        var a,\n            b,\n            i,\n            val = this.value;\n        /*close any already open lists of autocompleted values*/\n\n        closeAllLists();\n\n        if (!val) {\n          return false;\n        } // var a = input.value\n\n\n        if (val[0] === \"/\") {\n          val = val.substring(1);\n        } else {\n          return false;\n        }\n\n        currentFocus = -1;\n        /*create a DIV element that will contain the items (values):*/\n\n        a = document.createElement(\"DIV\");\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n        a.setAttribute(\"class\", \"autocomplete-items\");\n        /*append the DIV element as a child of the autocomplete container:*/\n\n        this.parentNode.appendChild(a);\n        /*for each item in the array...*/\n\n        for (i = 0; i < arr.length; i++) {\n          /*check if the item starts with the same letters as the text field value:*/\n          if (arr[i].Name.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n            /*create a DIV element for each matching element:*/\n            b = document.createElement(\"DIV\");\n            /*make the matching letters bold:*/\n\n            b.innerHTML = \"<strong>\" + arr[i].Name.substr(0, val.length) + \"</strong>\";\n            b.innerHTML += arr[i].Name.substr(val.length);\n            /*insert a input field that will hold the current array item's value:*/\n\n            b.innerHTML += \"<input type='hidden' id='\" + i + \"' value='\" + arr[i].Name + \"'>\"; //  var ActualPagePath=arr[i].ActualPagePath\n            // alert(ActualPagePath)\n\n            /*execute a function when someone clicks on the item value (DIV element):*/\n\n            b.addEventListener(\"click\", function (e) {\n              /*insert the value for the autocomplete text field:*/\n              inp.value = this.getElementsByTagName(\"input\")[0].value;\n              var input_id = this.getElementsByTagName(\"input\")[0].id; // alert(input_id)\n\n              var ActualPagePath = arr[input_id].ActualPagePath;\n              window.location.href = ActualPagePath; // window.open(ActualPagePath)\n\n              /*close the list of autocompleted values,\r\n              (or any other open lists of autocompleted values:*/\n\n              closeAllLists();\n            });\n            a.appendChild(b);\n          }\n        }\n      });\n      /*execute a function presses a key on the keyboard:*/\n\n      inp.addEventListener(\"keydown\", function (e) {\n        // debugger\n        var x = document.getElementById(this.id + \"autocomplete-list\");\n        if (x) x = x.getElementsByTagName(\"div\");\n\n        if (e.keyCode == 40) {\n          /*If the arrow DOWN key is pressed,\r\n          increase the currentFocus variable:*/\n          currentFocus++;\n          /*and and make the current item more visible:*/\n\n          addActive(x);\n        } else if (e.keyCode == 38) {\n          //up\n\n          /*If the arrow UP key is pressed,\r\n          decrease the currentFocus variable:*/\n          currentFocus--;\n          /*and and make the current item more visible:*/\n\n          addActive(x);\n        } else if (e.keyCode == 13) {\n          /*If the ENTER key is pressed, prevent the form from being submitted,*/\n          e.preventDefault();\n\n          if (currentFocus > -1) {\n            /*and simulate a click on the \"active\" item:*/\n            if (x) x[currentFocus].click();\n          }\n        }\n      });\n\n      function addActive(x) {\n        /*a function to classify an item as \"active\":*/\n        if (!x) return false;\n        /*start by removing the \"active\" class on all items:*/\n\n        removeActive(x);\n        if (currentFocus >= x.length) currentFocus = 0;\n        if (currentFocus < 0) currentFocus = x.length - 1;\n        /*add class \"autocomplete-active\":*/\n\n        x[currentFocus].classList.add(\"autocomplete-active\");\n      }\n\n      function removeActive(x) {\n        /*a function to remove the \"active\" class from all autocomplete items:*/\n        for (var i = 0; i < x.length; i++) {\n          x[i].classList.remove(\"autocomplete-active\");\n        }\n      }\n\n      function closeAllLists(elmnt) {\n        /*close all autocomplete lists in the document,\r\n        except the one passed as an argument:*/\n        var x = document.getElementsByClassName(\"autocomplete-items\");\n\n        for (var i = 0; i < x.length; i++) {\n          if (elmnt != x[i] && elmnt != inp) {\n            x[i].parentNode.removeChild(x[i]);\n          }\n        }\n      }\n      /*execute a function when someone clicks in the document:*/\n\n\n      document.addEventListener(\"click\", function (e) {\n        closeAllLists(e.target);\n      });\n    }\n    /*An array containing all the country names in the world:*/\n\n\n    var countries = [{\n      ID: 2,\n      Name: \"Module List\",\n      DisplayIndex: 2,\n      Icon: \"Module List\",\n      ActualPagePath: \"/ModulesList\"\n    }, {\n      ID: 3,\n      Name: \"Modules Master\",\n      DisplayIndex: 1,\n      Icon: \"Modules Master\",\n      ActualPagePath: \"ModulesMaster\"\n    }, {\n      ID: 4,\n      Name: \"Company Master\",\n      DisplayIndex: 3,\n      Icon: \"Companys Master\",\n      ActualPagePath: \"companyMaster\"\n    }, {\n      ID: 5,\n      Name: \"Company List\",\n      DisplayIndex: 3,\n      Icon: \"CompanyList\",\n      ActualPagePath: \"companyList\"\n    }, {\n      ID: 6,\n      Name: \"Pages Master\",\n      DisplayIndex: 5,\n      Icon: \"pagesMaster\",\n      ActualPagePath: \"pagesMaster\"\n    }, {\n      ID: 7,\n      Name: \"Pages List\",\n      DisplayIndex: 3,\n      Icon: \"Pages List\",\n      ActualPagePath: \"PagesList\"\n    }, {\n      ID: 8,\n      Name: \"Users List\",\n      DisplayIndex: 8,\n      Icon: \"Users List\",\n      ActualPagePath: \"usersList\"\n    }, {\n      ID: 9,\n      Name: \"Users Master\",\n      DisplayIndex: 7,\n      Icon: \"Users Master\",\n      ActualPagePath: \"usersMaster\"\n    }, {\n      ID: 2,\n      Name: \"Module List1\",\n      DisplayIndex: 2,\n      Icon: \"Module List\",\n      ActualPagePath: \"/ModulesList\"\n    }, {\n      ID: 2,\n      Name: \"Module List2\",\n      DisplayIndex: 2,\n      Icon: \"Module List\",\n      ActualPagePath: \"/ModulesList\"\n    }, {\n      ID: 2,\n      Name: \"Module List3\",\n      DisplayIndex: 2,\n      Icon: \"Module List\",\n      ActualPagePath: \"/ModulesList\"\n    }, {\n      ID: 2,\n      Name: \"Module List4\",\n      DisplayIndex: 2,\n      Icon: \"Module List\",\n      ActualPagePath: \"/ModulesList\"\n    }];\n    /*initiate the autocomplete function on the \"myInput\" element, and pass along the countries array as possible autocomplete values:*/\n\n    autocomplete(document.getElementById(\"myInput\"), searchRoleData);\n  }, [searchRoleData]); // searchProps2 = searchProps\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MySearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBoxSecond, \"vgcehxLhnSQHxU8LXpM+poXmz8E=\", false, function () {\n  return [useSelector];\n});\n\n_c = SearchBoxSecond;\n\nlet props2 = function onSearch() {};\n\nexport const mySearchProps = props1 => {\n  props2 = props1;\n};\nlet input;\n\nconst handleClick = () => {\n  props2.onSearch(input.value);\n};\n\nfunction onChange2() {\n  debugger;\n  var a = input.value;\n\n  if (!(a[0] === \"/\")) {\n    const str = a.substring(1);\n    props2.onSearch(str);\n  }\n}\n\nconst MySearch = input => {\n  // let input;\n  const handleClick = () => {\n    var a = input.value;\n\n    if (!(a[0] === \"/\")) {\n      const str = a.substring(1);\n      props2.onSearch(str);\n    }\n  };\n\n  function onChange() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-search d-none d-lg-block \",\n    style: {\n      marginTop: \"-3px\"\n    },\n    autocomplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"myInput\",\n        className: \"form-control\",\n        placeholder: \"Search...\" // style={{ backgroundColor: 'pink' }}\n        // ref={n => input = n}\n        ,\n        type: \"text\",\n        onChange: handleClick,\n        name: \"myCountry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\" // onClick={handleClick}\n        ,\n        type: \"butten\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-search-alt align-middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = MySearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBoxSecond\");\n$RefreshReg$(_c2, \"MySearch\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Search","view","onchange","e","preventDefault","target","value","length","SearchBoxSecond","SearchBar","searchRoleData","setSearchRoleData","RoleAccessData","searchProps","state","Login","RoleData","BreadcrumbReducer","SearchRoleData_initial","map","i","ModuleData","index","push","autocomplete","inp","arr","currentFocus","addEventListener","a","b","val","closeAllLists","substring","document","createElement","setAttribute","id","parentNode","appendChild","Name","substr","toUpperCase","innerHTML","getElementsByTagName","input_id","ActualPagePath","window","location","href","x","getElementById","keyCode","addActive","click","removeActive","classList","add","remove","elmnt","getElementsByClassName","removeChild","countries","ID","DisplayIndex","Icon","props2","onSearch","mySearchProps","props1","input","handleClick","onChange2","str","MySearch","onChange","marginTop"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/SearchBox/SearchBoxSecond.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport './Search.scss'\r\nimport { Search } from \"react-bootstrap-table2-toolkit\";\r\nlet view = false;\r\nconst onchange = (e) => {\r\n    e.preventDefault();\r\n    view = e.target.value.length\r\n}\r\nexport default function SearchBoxSecond() {\r\n    const { SearchBar } = Search;\r\n\r\n    const [searchRoleData, setSearchRoleData] = useState([])\r\n    // const  RoleAccessData=demoRolleAcess\r\n\r\n    const { RoleAccessData, searchProps } = useSelector((state) => ({\r\n        RoleAccessData: state.Login.RoleData,\r\n        searchProps: state.BreadcrumbReducer.searchProps,\r\n    }));\r\n\r\n    useEffect(() => {\r\n\r\n        let SearchRoleData_initial = []\r\n\r\n        RoleAccessData.map((i) => {\r\n            i.ModuleData.map((index) => {\r\n                SearchRoleData_initial.push(index)\r\n            })\r\n        })\r\n        setSearchRoleData(SearchRoleData_initial)\r\n    }, [RoleAccessData])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        function autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n\r\n            inp.addEventListener(\"input\", function (e) {\r\n\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                if (!val) { return false; }\r\n                // var a = input.value\r\n\r\n                if (val[0] === \"/\") {\r\n                    val = val.substring(1);\r\n                } else {\r\n                    return false;\r\n                }\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                /*for each item in the array...*/\r\n                for (i = 0; i < arr.length; i++) {\r\n                    /*check if the item starts with the same letters as the text field value:*/\r\n                    if (arr[i].Name.substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + arr[i].Name.substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += arr[i].Name.substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += \"<input type='hidden' id='\" + i + \"' value='\" + arr[i].Name + \"'>\";\r\n                        //  var ActualPagePath=arr[i].ActualPagePath\r\n                        // alert(ActualPagePath)\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                            var input_id = this.getElementsByTagName(\"input\")[0].id;\r\n\r\n                            // alert(input_id)\r\n                            var ActualPagePath = arr[input_id].ActualPagePath\r\n                            window.location.href = (ActualPagePath)\r\n                            // window.open(ActualPagePath)\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                // debugger\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode == 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode == 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].click();\r\n                    }\r\n                }\r\n            });\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt != x[i] && elmnt != inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                closeAllLists(e.target);\r\n            });\r\n        }\r\n\r\n        /*An array containing all the country names in the world:*/\r\n\r\n\r\n\r\n        var countries = [\r\n            {\r\n                ID: 2,\r\n                Name: \"Module List\",\r\n                DisplayIndex: 2,\r\n                Icon: \"Module List\",\r\n                ActualPagePath: \"/ModulesList\"\r\n            },\r\n            {\r\n                ID: 3,\r\n                Name: \"Modules Master\",\r\n                DisplayIndex: 1,\r\n                Icon: \"Modules Master\",\r\n                ActualPagePath: \"ModulesMaster\"\r\n            },\r\n            {\r\n                ID: 4,\r\n                Name: \"Company Master\",\r\n                DisplayIndex: 3,\r\n                Icon: \"Companys Master\",\r\n                ActualPagePath: \"companyMaster\"\r\n            },\r\n            {\r\n                ID: 5,\r\n                Name: \"Company List\",\r\n                DisplayIndex: 3,\r\n                Icon: \"CompanyList\",\r\n                ActualPagePath: \"companyList\"\r\n            },\r\n            {\r\n                ID: 6,\r\n                Name: \"Pages Master\",\r\n                DisplayIndex: 5,\r\n                Icon: \"pagesMaster\",\r\n                ActualPagePath: \"pagesMaster\"\r\n            },\r\n            {\r\n                ID: 7,\r\n                Name: \"Pages List\",\r\n                DisplayIndex: 3,\r\n                Icon: \"Pages List\",\r\n                ActualPagePath: \"PagesList\"\r\n            },\r\n            {\r\n                ID: 8,\r\n                Name: \"Users List\",\r\n                DisplayIndex: 8,\r\n                Icon: \"Users List\",\r\n                ActualPagePath: \"usersList\"\r\n            },\r\n            {\r\n                ID: 9,\r\n                Name: \"Users Master\",\r\n                DisplayIndex: 7,\r\n                Icon: \"Users Master\",\r\n                ActualPagePath: \"usersMaster\"\r\n            },\r\n            {\r\n                ID: 2,\r\n                Name: \"Module List1\",\r\n                DisplayIndex: 2,\r\n                Icon: \"Module List\",\r\n                ActualPagePath: \"/ModulesList\"\r\n            }, {\r\n                ID: 2,\r\n                Name: \"Module List2\",\r\n                DisplayIndex: 2,\r\n                Icon: \"Module List\",\r\n                ActualPagePath: \"/ModulesList\"\r\n            }, {\r\n                ID: 2,\r\n                Name: \"Module List3\",\r\n                DisplayIndex: 2,\r\n                Icon: \"Module List\",\r\n                ActualPagePath: \"/ModulesList\"\r\n            }, {\r\n                ID: 2,\r\n                Name: \"Module List4\",\r\n                DisplayIndex: 2,\r\n                Icon: \"Module List\",\r\n                ActualPagePath: \"/ModulesList\"\r\n            },\r\n        ]\r\n\r\n\r\n        /*initiate the autocomplete function on the \"myInput\" element, and pass along the countries array as possible autocomplete values:*/\r\n        autocomplete(document.getElementById(\"myInput\"), searchRoleData);\r\n\r\n    }, [searchRoleData])\r\n\r\n    // searchProps2 = searchProps\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MySearch />\r\n        </React.Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\nlet props2 = function onSearch() { }\r\n\r\nexport const mySearchProps = (props1) => {\r\n    props2 = props1;\r\n};\r\n\r\nlet input;\r\nconst handleClick = () => {\r\n    props2.onSearch(input.value);\r\n};\r\nfunction onChange2() {\r\n    debugger\r\n    var a = input.value\r\n\r\n    if (!(a[0] === \"/\")) {\r\n        const str = a.substring(1);\r\n        props2.onSearch(str);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MySearch = input => {\r\n\r\n    // let input;\r\n    const handleClick = () => {\r\n        var a = input.value\r\n\r\n    if (!(a[0] === \"/\")) {\r\n        const str = a.substring(1);\r\n        props2.onSearch(str);\r\n    }\r\n    };\r\n    function onChange() {\r\n       \r\n    }\r\n    return (\r\n        <div className=\"app-search d-none d-lg-block \" style={{ marginTop: \"-3px\" }} autocomplete=\"off\">\r\n            <div className=\"position-relative\">\r\n                <input\r\n                    id=\"myInput\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                    // style={{ backgroundColor: 'pink' }}\r\n                    // ref={n => input = n}\r\n                    type=\"text\"\r\n                    onChange={handleClick}\r\n                    name=\"myCountry\"\r\n                />\r\n                <button className=\"btn btn-primary\"\r\n                    // onClick={handleClick}\r\n                    type=\"butten\">\r\n                    <i className=\"bx bx-search-alt align-middle\" />\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}