{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { delete_CompanyID, edit_CompanyID, fetch_CompanyList, getCompanyGroup, postSubmit_Company, updateCompany_ID } from \"../../../helpers/backend_helper\";\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { deleteCompanyIDSuccess, editCompanyIDSuccess, fetchCompanyListSuccess, getCompanyGroupSuccess, PostCompanySubmitSuccess, updateCompanyIDSuccess } from \"./actions\";\nimport { DELETE_COMPANY_ID, EDIT_COMPANY_ID, FETCH_COMPANY_LIST, GET_COMPANYGROUP, POST_COMPANY_SUBMIT, UPDATE_COMPANY_ID } from \"./actionType\";\n\nfunction* fetch_CompanyList_data() {\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(fetch_CompanyList);\n    yield put(fetchCompanyListSuccess(response.Data));\n    yield put(SpinnerState(false));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* SubmitCompanyModules(_ref) {\n  let {\n    data\n  } = _ref;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(postSubmit_Company, data);\n    yield put(SpinnerState(false));\n    yield put(PostCompanySubmitSuccess(response));\n    console.log(\"response\", response);\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\n_c = SubmitCompanyModules;\n\nfunction* deleteCompany_ID(_ref2) {\n  let {\n    id\n  } = _ref2;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(delete_CompanyID, id);\n    yield put(SpinnerState(false));\n    yield put(deleteCompanyIDSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* editCompany_ID(_ref3) {\n  let {\n    id\n  } = _ref3;\n\n  try {\n    const response = yield call(edit_CompanyID, id);\n    yield put(editCompanyIDSuccess(response));\n  } catch (error) {\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* update_Company(_ref4) {\n  let {\n    data,\n    ID\n  } = _ref4;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(updateCompany_ID, data, ID);\n    yield put(SpinnerState(false));\n    yield put(updateCompanyIDSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} /// CompanyGroupDropdown\n\n\nfunction* CompanyGroup() {\n  try {\n    const response = yield call(getCompanyGroup);\n    yield put(getCompanyGroupSuccess(response.Data));\n  } catch (error) {\n    console.log(\"CompanyGroup saga page error\", error);\n  }\n}\n\n_c2 = CompanyGroup;\n\nfunction* CompanySaga() {\n  yield takeEvery(FETCH_COMPANY_LIST, fetch_CompanyList_data);\n  yield takeEvery(EDIT_COMPANY_ID, editCompany_ID);\n  yield takeEvery(POST_COMPANY_SUBMIT, SubmitCompanyModules);\n  yield takeEvery(DELETE_COMPANY_ID, deleteCompany_ID);\n  yield takeEvery(UPDATE_COMPANY_ID, update_Company);\n  yield takeEvery(GET_COMPANYGROUP, CompanyGroup);\n}\n\n_c3 = CompanySaga;\nexport default CompanySaga;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SubmitCompanyModules\");\n$RefreshReg$(_c2, \"CompanyGroup\");\n$RefreshReg$(_c3, \"CompanySaga\");","map":{"version":3,"names":["call","put","takeEvery","delete_CompanyID","edit_CompanyID","fetch_CompanyList","getCompanyGroup","postSubmit_Company","updateCompany_ID","AlertState","SpinnerState","deleteCompanyIDSuccess","editCompanyIDSuccess","fetchCompanyListSuccess","getCompanyGroupSuccess","PostCompanySubmitSuccess","updateCompanyIDSuccess","DELETE_COMPANY_ID","EDIT_COMPANY_ID","FETCH_COMPANY_LIST","GET_COMPANYGROUP","POST_COMPANY_SUBMIT","UPDATE_COMPANY_ID","fetch_CompanyList_data","response","Data","error","Type","Status","Message","SubmitCompanyModules","data","console","log","deleteCompany_ID","id","editCompany_ID","update_Company","ID","CompanyGroup","CompanySaga"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/CompanyRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { delete_CompanyID, edit_CompanyID, fetch_CompanyList, getCompanyGroup, postSubmit_Company, updateCompany_ID } from \"../../../helpers/backend_helper\";\r\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\nimport {  deleteCompanyIDSuccess, editCompanyIDSuccess,  fetchCompanyListSuccess, getCompanyGroupSuccess, PostCompanySubmitSuccess, updateCompanyIDSuccess } from \"./actions\";\r\nimport {\r\n  DELETE_COMPANY_ID,\r\n  EDIT_COMPANY_ID,\r\n  FETCH_COMPANY_LIST,\r\n  GET_COMPANYGROUP,\r\n  POST_COMPANY_SUBMIT,\r\n  UPDATE_COMPANY_ID,\r\n\r\n} from \"./actionType\";\r\n\r\nfunction* fetch_CompanyList_data() {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(fetch_CompanyList);\r\n    yield put(fetchCompanyListSuccess(response.Data));\r\n    yield put(SpinnerState(false))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({ Type: 4, \r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* SubmitCompanyModules({ data }) {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(postSubmit_Company, data);\r\n    yield put(SpinnerState(false))\r\n    yield put(PostCompanySubmitSuccess(response));\r\n    console.log(\"response\",response)\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({ Type: 4, \r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* deleteCompany_ID({ id }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(delete_CompanyID, id);\r\n    yield put(SpinnerState(false))\r\n    yield put(deleteCompanyIDSuccess(response))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({ Type: 4, \r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* editCompany_ID({ id }) {\r\n  try {\r\n    const response = yield call(edit_CompanyID, id);\r\n    yield put(editCompanyIDSuccess(response));\r\n  } catch (error) {\r\n    yield put(AlertState({ Type: 4, \r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* update_Company({ data, ID }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(updateCompany_ID, data, ID);\r\n    yield put(SpinnerState(false))\r\n    yield put(updateCompanyIDSuccess(response))\r\n  }\r\n  \r\n  catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({ Type: 4, \r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n/// CompanyGroupDropdown\r\nfunction* CompanyGroup() {\r\n  try {\r\n  \r\n    const response = yield call(getCompanyGroup);\r\n    yield put(getCompanyGroupSuccess(response.Data));\r\n  } catch (error) {\r\n    console.log(\"CompanyGroup saga page error\", error);\r\n  }\r\n}\r\n\r\nfunction* CompanySaga() {\r\n  yield takeEvery(FETCH_COMPANY_LIST, fetch_CompanyList_data);\r\n  yield takeEvery(EDIT_COMPANY_ID, editCompany_ID);\r\n  yield takeEvery(POST_COMPANY_SUBMIT, SubmitCompanyModules);\r\n  yield takeEvery(DELETE_COMPANY_ID, deleteCompany_ID);\r\n  yield takeEvery(UPDATE_COMPANY_ID, update_Company);\r\n  yield takeEvery(GET_COMPANYGROUP, CompanyGroup);\r\n\r\n}\r\n\r\nexport default CompanySaga;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}