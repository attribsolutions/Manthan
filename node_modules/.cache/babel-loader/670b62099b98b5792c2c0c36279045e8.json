{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\RoleAccessPages\\\\RoleAccessListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Modal, Button } from \"reactstrap\";\nimport MetaTags from 'react-meta-tags'; // datatable related plugins\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit'; //Import Breadcrumb\n\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport \"../../../assets/scss/CustomeTable/datatables.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editModuleID, getRoleAccessListPage, PostMethod_ForCopyRoleAccessFor_Role_Success } from \"../../../store/actions\";\nimport { AlertState } from \"../../../store/actions\";\nimport PartyUIDemo from \"../PartyPages/PartyUIDemo\";\nimport { useHistory } from \"react-router-dom\";\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\nimport RoleAccessCopyFunctionality from \"./RoleAccessCopyFunctionality\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoleAccessListPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [modal_center, setmodal_center] = useState(false);\n  const [copy_user_RowData, setCopy_user_RowData] = useState({});\n  const {\n    TableListData,\n    RoleAccessModifiedinSingleArray,\n    PostMessage_ForCopyRoleAccess\n  } = useSelector(state => ({\n    TableListData: state.RoleAccessReducer.RoleAccessListPage,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\n    PostMessage_ForCopyRoleAccess: state.RoleAccessReducer.PostMessage_ForCopyRoleAccess\n  })); // useEffect(() => {\n  //     const userAcc = CommonGetRoleAccessFunction(history)\n  //     if (!(userAcc === undefined)) {\n  //         setUserPageAccessState(userAcc)\n  //     }\n  // }, [history])\n\n  useEffect(() => {\n    // debugger\n    // const userAcc = CommonGetRoleAccessFunction(history)\n    const locationPath = history.location.pathname;\n    let userAcc = RoleAccessModifiedinSingleArray.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (!(userAcc === undefined)) {\n      setUserPageAccessState(userAcc);\n    }\n  }, [RoleAccessModifiedinSingleArray]); //  This UseEffect => Featch Modules List data  First Rendering\n\n  useEffect(() => {\n    dispatch(getRoleAccessListPage());\n  }, []);\n\n  const EditPageHandler = data => {\n    //  debugger\n    const rowData = data; // let RelatedPageID = 0\n    // const userPageAccess = history.location.state\n\n    let RelatedPageID = userPageAccessState.RelatedPageID;\n    const found = RoleAccessModifiedinSingleArray.find(element => {\n      return element.id === RelatedPageID;\n    });\n\n    if (!(found === undefined)) {\n      history.push({\n        pathname: `/${found.ActualPagePath}`,\n        // pathname: `/${found.ActualPagePath}`,\n        // state: { fromDashboardAccess: true, UserDetails: found, EditData: rowData }\n        state: rowData // relatatedPage:\"/UserMaster\"\n\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (PostMessage_ForCopyRoleAccess.Status === true && PostMessage_ForCopyRoleAccess.StatusCode === 200) {\n      dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({\n        Status: false\n      }));\n      dispatch(getRoleAccessListPage()); // GoButton_Handler()\n\n      tog_center();\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: PostMessage_ForCopyRoleAccess.Message,\n        AfterResponseAction: false\n      }));\n    } else if (PostMessage_ForCopyRoleAccess.Status === true) {\n      dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostMessage_ForCopyRoleAccess.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostMessage_ForCopyRoleAccess]); //select id for copy row\n\n  const CopyHandeler = event => {\n    setCopy_user_RowData(event);\n    tog_center();\n  }; //select id for delete row\n\n\n  const deleteHandeler = (id, name) => {\n    dispatch(AlertState({\n      Type: 5,\n      Status: true,\n      Message: `Are you sure you want to delete this item : \"${name}\"`,\n      RedirectPath: false,\n      // PermissionAction: deleteItemID,\n      ID: id\n    }));\n  }; // Modules list component table columns \n\n\n  const columns = [{\n    dataField: 'RoleName',\n    text: 'Role Name',\n    sort: true\n  }, {\n    dataField: 'DivisionName',\n    text: 'Division Name',\n    sort: true\n  }, {\n    dataField: 'CompanyName',\n    text: 'Company Name',\n    sort: true\n  }, {\n    text: \"Action\",\n    hidden: !userPageAccessState.RoleAccess_IsEdit && !userPageAccessState.RoleAccess_IsView && !userPageAccessState.RoleAccess_IsDelete ? true : false,\n    formatter: (cellContent, RoleAccess) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-3\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Copy RoleAccess\",\n        onClick: () => {\n          CopyHandeler(RoleAccess);\n        },\n        children: \"copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 24\n      }, this), userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Edit RoleAccess\",\n        onClick: () => {\n          EditPageHandler(RoleAccess);\n        },\n        className: \"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\",\n        children: [console.log(\"id\", RoleAccess), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-pencil font-size-18\",\n          id: \"edittooltip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }, this) : null, !userPageAccessState.RoleAccess_IsEdit && userPageAccessState.RoleAccess_IsView ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"View RoleAccess\",\n        onClick: () => {\n          EditPageHandler(RoleAccess);\n        },\n        className: \"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bxs-show font-size-18 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }, this) : null, userPageAccessState.RoleAccess_IsDelete ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\",\n        \"data-mdb-toggle\": \"tooltip\",\n        \"data-mdb-placement\": \"top\",\n        title: \"Delete RoleAccess\",\n        onClick: () => {\n          deleteHandeler(RoleAccess.id, RoleAccess.Name);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-delete font-size-18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this)\n  }];\n  const defaultSorted = [{\n    dataField: 'Role',\n    order: 'asc'\n  }];\n  const pageOptions = {\n    sizePerPage: 10,\n    totalSize: TableListData.length,\n    // replace later with size(customers),\n    custom: true\n  }; // tag_center -- Control the Edit Modal show and close\n\n  function tog_center() {\n    setmodal_center(!modal_center);\n  }\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"RoleAccess List Page| FoodERP-React FrontEnd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(PaginationProvider, {\n            pagination: paginationFactory(pageOptions),\n            keyField: \"id\",\n            columns: columns,\n            data: TableListData,\n            children: _ref => {\n              let {\n                paginationProps,\n                paginationTableProps\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                keyField: \"id\",\n                columns: columns,\n                data: TableListData,\n                search: true,\n                children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n                    title: \"Count :\",\n                    breadcrumbItem: userPageAccessState.PageHeading,\n                    IsButtonVissible: userPageAccessState.RoleAccess_IsSave ? true : false,\n                    SearchProps: toolkitProps.searchProps,\n                    IsSearchVissible: true,\n                    defaultSorted: defaultSorted,\n                    ExcelData: TableListData,\n                    isExcelButtonVisible: true,\n                    breadcrumbCount: `RoleAccess Count: ${TableListData.length}` // RedirctPath={\"/moduleMaster\"}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      xl: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"table-responsive\",\n                        children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                          keyField: \"id\",\n                          responsive: true,\n                          bordered: true,\n                          striped: false,\n                          defaultSorted: defaultSorted,\n                          classes: \"table align-middle table-nowrap table-hover\",\n                          headerWrapperClasses: \"thead-light\",\n                          ...toolkitProps.baseProps,\n                          ...paginationTableProps\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"align-items-md-center mt-30\",\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      className: \"pagination pagination-rounded justify-content-end mb-2\",\n                      children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modal_center,\n            toggle: () => {\n              tog_center();\n            },\n            size: \"xl\",\n            children: /*#__PURE__*/_jsxDEV(RoleAccessCopyFunctionality, {\n              state: copy_user_RowData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(RoleAccessListPage, \"8LU+9nc7exqwoxEVyJFfH3d0okw=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = RoleAccessListPage;\nexport default RoleAccessListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleAccessListPage\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","Modal","Button","MetaTags","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","Breadcrumb","useDispatch","useSelector","editModuleID","getRoleAccessListPage","PostMethod_ForCopyRoleAccessFor_Role_Success","AlertState","PartyUIDemo","useHistory","CommonGetRoleAccessFunction","RoleAccessCopyFunctionality","RoleAccessListPage","dispatch","history","userPageAccessState","setUserPageAccessState","modal_center","setmodal_center","copy_user_RowData","setCopy_user_RowData","TableListData","RoleAccessModifiedinSingleArray","PostMessage_ForCopyRoleAccess","state","RoleAccessReducer","Login","RoleAccessUpdateData","locationPath","location","pathname","userAcc","find","inx","ActualPagePath","undefined","EditPageHandler","data","rowData","RelatedPageID","found","element","id","push","Status","StatusCode","tog_center","Type","Message","AfterResponseAction","JSON","stringify","RedirectPath","CopyHandeler","event","deleteHandeler","name","ID","columns","dataField","text","sort","hidden","RoleAccess_IsEdit","RoleAccess_IsView","RoleAccess_IsDelete","formatter","cellContent","RoleAccess","display","justifyContent","console","log","Name","defaultSorted","order","pageOptions","sizePerPage","totalSize","length","custom","paginationProps","paginationTableProps","toolkitProps","PageHeading","RoleAccess_IsSave","searchProps","baseProps"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/RoleAccessPages/RoleAccessListPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Row, Col, Modal, Button } from \"reactstrap\"\r\nimport MetaTags from 'react-meta-tags'\r\n\r\n// datatable related plugins\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n    PaginationProvider, PaginationListStandalone,\r\n} from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\"\r\nimport \"../../../assets/scss/CustomeTable/datatables.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    editModuleID,\r\n    getRoleAccessListPage,\r\n    PostMethod_ForCopyRoleAccessFor_Role_Success,\r\n\r\n} from \"../../../store/actions\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport PartyUIDemo from \"../PartyPages/PartyUIDemo\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport RoleAccessCopyFunctionality from \"./RoleAccessCopyFunctionality\";\r\n\r\nconst RoleAccessListPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [userPageAccessState, setUserPageAccessState] = useState('');\r\n    const [modal_center, setmodal_center] = useState(false);\r\n    const [copy_user_RowData, setCopy_user_RowData] = useState({});\r\n     \r\n\r\n    const { TableListData, RoleAccessModifiedinSingleArray,PostMessage_ForCopyRoleAccess } = useSelector((state) => ({\r\n        TableListData: state.RoleAccessReducer.RoleAccessListPage,\r\n        RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n        PostMessage_ForCopyRoleAccess: state.RoleAccessReducer.PostMessage_ForCopyRoleAccess,\r\n\r\n    }));\r\n\r\n    // useEffect(() => {\r\n    //     const userAcc = CommonGetRoleAccessFunction(history)\r\n    //     if (!(userAcc === undefined)) {\r\n    //         setUserPageAccessState(userAcc)\r\n    //     }\r\n    // }, [history])\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        // const userAcc = CommonGetRoleAccessFunction(history)\r\n        const locationPath = history.location.pathname\r\n        let userAcc = RoleAccessModifiedinSingleArray.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n        if (!(userAcc === undefined)) {\r\n            setUserPageAccessState(userAcc)\r\n        }\r\n    }, [RoleAccessModifiedinSingleArray])\r\n\r\n\r\n    //  This UseEffect => Featch Modules List data  First Rendering\r\n    useEffect(() => {\r\n        dispatch(getRoleAccessListPage());\r\n    }, []);\r\n\r\n    const EditPageHandler = (data) => {\r\n    //  debugger\r\n        const rowData =data\r\n     \r\n        // let RelatedPageID = 0\r\n        // const userPageAccess = history.location.state\r\n\r\n        let  RelatedPageID = userPageAccessState.RelatedPageID\r\n\r\n        const found = RoleAccessModifiedinSingleArray.find((element) => {\r\n            return element.id === RelatedPageID\r\n        })\r\n\r\n        if (!(found === undefined)) {\r\n            history.push({\r\n                pathname: `/${found.ActualPagePath}`,\r\n                // pathname: `/${found.ActualPagePath}`,\r\n                // state: { fromDashboardAccess: true, UserDetails: found, EditData: rowData }\r\n                state:  rowData ,\r\n                // relatatedPage:\"/UserMaster\"\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n       \r\n        if ((PostMessage_ForCopyRoleAccess.Status === true) && (PostMessage_ForCopyRoleAccess.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({ Status: false }))\r\n\r\n            dispatch(getRoleAccessListPage());\r\n            // GoButton_Handler()\r\n            tog_center()   \r\n            dispatch(AlertState({\r\n                Type: 1,\r\n                Status: true,\r\n                Message: PostMessage_ForCopyRoleAccess.Message,\r\n                AfterResponseAction: false\r\n            }))\r\n        }\r\n        else if (PostMessage_ForCopyRoleAccess.Status === true) {\r\n            dispatch(PostMethod_ForCopyRoleAccessFor_Role_Success({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(PostMessage_ForCopyRoleAccess.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostMessage_ForCopyRoleAccess])\r\n\r\n    //select id for copy row\r\n    const CopyHandeler = (event) => {\r\n\r\n        setCopy_user_RowData(event)\r\n        tog_center()   \r\n    };\r\n\r\n\r\n\r\n    //select id for delete row\r\n    const deleteHandeler = (id, name) => {\r\n        dispatch(\r\n            AlertState({\r\n                Type: 5,\r\n                Status: true,\r\n                Message: `Are you sure you want to delete this item : \"${name}\"`,\r\n                RedirectPath: false,\r\n                // PermissionAction: deleteItemID,\r\n                ID: id,\r\n            })\r\n        );\r\n    };\r\n\r\n    // Modules list component table columns \r\n    const columns = [\r\n        {\r\n            dataField: 'RoleName',\r\n            text: 'Role Name',\r\n            sort: true\r\n        }, {\r\n            dataField: 'DivisionName',\r\n            text: 'Division Name',\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: 'CompanyName',\r\n            text: 'Company Name',\r\n            sort: true\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            hidden: (\r\n                !(userPageAccessState.RoleAccess_IsEdit)\r\n                && !(userPageAccessState.RoleAccess_IsView)\r\n                && !(userPageAccessState.RoleAccess_IsDelete)) ? true : false,\r\n\r\n            formatter: (cellContent, RoleAccess) => (\r\n\r\n                <div className=\"d-flex gap-3\" style={{ display: 'flex', justifyContent: 'center' }} >\r\n\r\n                       <Button\r\n                            className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Copy RoleAccess\"\r\n                            onClick={() => { CopyHandeler(RoleAccess); }}\r\n                        >\r\n                           copy\r\n                        </Button>\r\n\r\n\r\n                    {((userPageAccessState.RoleAccess_IsEdit)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Edit RoleAccess\"\r\n                            onClick={() => { EditPageHandler(RoleAccess); }}\r\n                            className=\"badge badge-soft-success font-size-12 btn btn-success waves-effect waves-light w-xxs border border-light\"\r\n                        >\r\n                            {console.log(\"id\", RoleAccess)} <i className=\"mdi mdi-pencil font-size-18\" id=\"edittooltip\"></i>\r\n                        </Button> : null}\r\n\r\n                    {(!(userPageAccessState.RoleAccess_IsEdit) && (userPageAccessState.RoleAccess_IsView)) ?\r\n                        <Button\r\n                            type=\"button\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"View RoleAccess\"\r\n                            onClick={() => { EditPageHandler(RoleAccess); }}\r\n                            className=\"badge badge-soft-primary font-size-12 btn btn-primary waves-effect waves-light w-xxs border border-light\"\r\n\r\n                        >\r\n                            <i className=\"bx bxs-show font-size-18 \"></i>\r\n                        </Button> : null}\r\n\r\n                    {(userPageAccessState.RoleAccess_IsDelete)\r\n                        ?\r\n                        <Button\r\n                            className=\"badge badge-soft-danger font-size-12 btn btn-danger waves-effect waves-light w-xxs border border-light\"\r\n                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Delete RoleAccess\"\r\n                            onClick={() => { deleteHandeler(RoleAccess.id, RoleAccess.Name); }}\r\n                        >\r\n                            <i className=\"mdi mdi-delete font-size-18\"></i>\r\n                        </Button>\r\n                        : null\r\n                    }\r\n\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const defaultSorted = [{\r\n        dataField: 'Role',\r\n        order: 'asc'\r\n    }];\r\n\r\n    const pageOptions = {\r\n        sizePerPage: 10,\r\n        totalSize: TableListData.length, // replace later with size(customers),\r\n        custom: true,\r\n    }\r\n\r\n    // tag_center -- Control the Edit Modal show and close\r\n    function tog_center() {\r\n        setmodal_center(!modal_center)\r\n    }\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\">\r\n                    <MetaTags>\r\n                        <title>RoleAccess List Page| FoodERP-React FrontEnd</title>\r\n                    </MetaTags>\r\n                    <div className=\"container-fluid\">\r\n                        <PaginationProvider\r\n                            pagination={paginationFactory(pageOptions)}\r\n                            keyField='id'\r\n                            columns={columns}\r\n                            data={TableListData}\r\n                        >\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                                <ToolkitProvider\r\n                                    keyField='id'\r\n                                    columns={columns}\r\n                                    data={TableListData}\r\n                                    search\r\n                                >\r\n                                    {toolkitProps => (\r\n                                        <React.Fragment>\r\n                                            <Breadcrumb\r\n                                                title={\"Count :\"}\r\n                                                breadcrumbItem={userPageAccessState.PageHeading}\r\n                                                IsButtonVissible={(userPageAccessState.RoleAccess_IsSave) ? true : false}\r\n                                                SearchProps={toolkitProps.searchProps}\r\n                                                IsSearchVissible={true}\r\n                                                defaultSorted={defaultSorted}\r\n                                                ExcelData={TableListData}\r\n                                                isExcelButtonVisible={true}\r\n                                                breadcrumbCount={`RoleAccess Count: ${TableListData.length}`}\r\n                                            // RedirctPath={\"/moduleMaster\"}\r\n                                            />\r\n                                            <Row>\r\n                                                <Col xl=\"12\">\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <BootstrapTable\r\n                                                            keyField={\"id\"}\r\n                                                            responsive\r\n                                                            bordered={true}\r\n                                                            striped={false}\r\n                                                            defaultSorted={defaultSorted}\r\n                                                            classes={\"table align-middle table-nowrap table-hover\"}\r\n                                                            headerWrapperClasses={\"thead-light\"}\r\n                                                            {...toolkitProps.baseProps}\r\n                                                            {...paginationTableProps}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row className=\"align-items-md-center mt-30\">\r\n                                                <Col className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                                    <PaginationListStandalone\r\n                                                        {...paginationProps}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                    }\r\n                                </ToolkitProvider>\r\n                            )\r\n                            }\r\n                        </PaginationProvider>\r\n                        <Modal\r\n                            isOpen={modal_center}\r\n                            toggle={() => { tog_center() }}\r\n                            size=\"xl\"\r\n                        >\r\n                            <RoleAccessCopyFunctionality  state={copy_user_RowData} />\r\n                           \r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default RoleAccessListPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}