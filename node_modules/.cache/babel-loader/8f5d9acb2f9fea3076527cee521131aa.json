{"ast":null,"code":"import _objectSpread from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import{Card,CardBody,CardHeader,Col,Container,FormGroup,Input,Label,Row}from\"reactstrap\";import{AvField,AvForm}from\"availity-reactstrap-validation\";import Select from\"react-select\";import{MetaTags}from\"react-meta-tags\";import{BreadcrumbShow,commonPageField,commonPageFieldSuccess,getCategoryTypelist}from\"../../../store/actions\";import{useDispatch,useSelector}from\"react-redux\";import{editCategoryIDSuccess,PostMethodForCategory,PostMethod_ForCategoryAPISuccess,updateCategoryID}from\"../../../store/Administrator/CategoryRedux/action\";import{AlertState}from\"../../../store/actions\";import{CommonGetRoleAccessFunction}from\"../../../components/Common/CommonGetRoleAccessFunction\";import{useHistory}from\"react-router-dom\";import{comAddPageFieldFunc,formValChange,formValid,onChangeSelect,onChangeText}from\"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";import{SaveButton}from\"../../../components/CommonSaveButton\";import{CATEGORY_lIST}from\"../../../routes/route_url\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var CategoryMaster=function CategoryMaster(props){var editDataGetingFromList=props.state;var pageModeProps=props.pageMode;var formRef=useRef(null);var history=useHistory();var dispatch=useDispatch();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),EditData=_useState2[0],setEditData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),pageMode=_useState4[0],setPageMode=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modalCss=_useState6[0],setModalCss=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),CategoryTypes_dropdown_Select=_useState8[0],setCategoryTypes_dropdown_Select=_useState8[1];var _useState9=useState(123),_useState10=_slicedToArray(_useState9,2),userPageAccessState=_useState10[0],setUserPageAccessState=_useState10[1];//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{PostAPIResponse:state.CategoryReducer.PostDataMessage,CategoryAPI:state.categoryTypeReducer.categoryTypeListData,userAccess:state.Login.RoleAccessUpdateData,pageField:state.CommonPageFieldReducer.pageField};}),PostAPIResponse=_useSelector.PostAPIResponse,CategoryAPI=_useSelector.CategoryAPI,pageField=_useSelector.pageField,userAccess=_useSelector.userAccess;{/** Dyanamic Page access state and OnChange function */}{/*start */}var _useState11=useState({values:{id:\"\",Name:\"\",CategoryTypeName:\"\"},fieldLabel:{Name:'',CategoryTypeName:''},isError:{Name:\"\",CategoryTypeName:\"\"},hasValid:{Name:{regExp:'',inValidMsg:\"\",valid:false},CategoryTypeName:{regExp:'',inValidMsg:\"\",valid:false}},required:{}}),_useState12=_slicedToArray(_useState11,2),state=_useState12[0],setState=_useState12[1];var values=_objectSpread({},state.values);var isError=state.isError;var fieldLabel=state.fieldLabel;{/*End */}useEffect(function(){dispatch(commonPageFieldSuccess(null));dispatch(commonPageField(18));},[]);var location=_objectSpread({},history.location);var hasShowloction=location.hasOwnProperty(\"editValue\");var hasShowModal=props.hasOwnProperty(\"editValue\");// userAccess useEffect\nuseEffect(function(){var userAcc=null;var locationPath=location.pathname;if(hasShowModal){locationPath=props.masterPath;};userAcc=userAccess.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(userAcc){setUserPageAccessState(userAcc);};},[userAccess]);// This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\nuseEffect(function(){// if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\nif(hasShowloction||hasShowModal){var hasEditVal=null;if(hasShowloction){setPageMode(location.pageMode);hasEditVal=location.editValue;}else if(hasShowModal){hasEditVal=props.editValue;setPageMode(props.pageMode);setModalCss(true);}if(hasEditVal){var _hasEditVal=hasEditVal,id=_hasEditVal.id,Name=_hasEditVal.Name,CategoryTypeName=_hasEditVal.CategoryTypeName,CategoryType=_hasEditVal.CategoryType;var _state=_objectSpread({},state),_values=_state.values,_fieldLabel=_state.fieldLabel,hasValid=_state.hasValid,required=_state.required,_isError=_state.isError;hasValid.Name.valid=true;hasValid.CategoryTypeName.valid=true;_values.id=id;_values.Name=Name;_values.CategoryTypeName={label:CategoryTypeName,value:CategoryType};setState({values:_values,fieldLabel:_fieldLabel,hasValid:hasValid,required:required,isError:_isError});dispatch(BreadcrumbShow(hasEditVal.Name));}dispatch(editCategoryIDSuccess({Status:false}));}},[]);useEffect(function(){if(PostAPIResponse.Status===true&&PostAPIResponse.StatusCode===200){setCategoryTypes_dropdown_Select('');dispatch(PostMethod_ForCategoryAPISuccess({Status:false}));formRef.current.reset();if(pageMode===\"other\"){dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message,RedirectPath:CATEGORY_lIST}));}}else if(PostAPIResponse.Status===true){dispatch(PostMethod_ForCategoryAPISuccess({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(postMessage.Message),RedirectPath:false,AfterResponseAction:false}));}},[PostAPIResponse]);useEffect(function(){if(pageField){var fieldArr=pageField.PageFieldMaster;comAddPageFieldFunc({state:state,setState:setState,fieldArr:fieldArr});}},[pageField]);//get method for dropdown\nuseEffect(function(){dispatch(getCategoryTypelist());},[dispatch]);function handllerCategoryTypes(e){setCategoryTypes_dropdown_Select(e);}var CategoryTypesValues=CategoryAPI.map(function(Data){return{value:Data.id,label:Data.Name};});var formSubmitHandler=function formSubmitHandler(event){event.preventDefault();if(formValid(state,setState)){var jsonBody=JSON.stringify({Name:values.Name,CategoryType:values.CategoryTypeName.value});if(pageMode===\"edit\"){dispatch(updateCategoryID(jsonBody,values.id));console.log(\"jsonBody\",jsonBody);}else{dispatch(PostMethodForCategory(jsonBody));}}};// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(modalCss||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};if(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsxs(\"title\",{children:[userPageAccessState.PageHeading,\" | FoodERP-React FrontEnd\"]})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formSubmitHandler,ref:formRef,noValidate:true,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[fieldLabel.Name,\" \"]}),/*#__PURE__*/_jsx(Input,{name:\"Name\",id:\"txtName\",value:values.Name,type:\"text\",className:isError.Name.length>0?\"is-invalid form-control\":\"form-control\",placeholder:\"Please Enter Name\",autoComplete:\"off\",onChange:function onChange(event){onChangeText({event:event,state:state,setState:setState});dispatch(BreadcrumbShow(event.target.value));}}),isError.Name.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"invalid-feedback\",children:isError.Name})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[\" \",fieldLabel.CategoryTypeName,\" \"]}),/*#__PURE__*/_jsxs(Col,{sm:12,children:[/*#__PURE__*/_jsx(Select,{name:\"CategoryTypeName\",value:values.CategoryTypeName//   value={{label:\"abc\",value:1}}//default value set\n,isSearchable:false,className:\"react-dropdown\",classNamePrefix:\"dropdown\",options:CategoryTypesValues,onChange:function onChange(v,e){return onChangeSelect({e:e,v:v,state:state,setState:setState});}}),isError.CategoryTypeName.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"text-danger f-8\",children:/*#__PURE__*/_jsx(\"small\",{children:isError.CategoryTypeName})})]})]})})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:SaveButton({pageMode:pageMode,userPageAccessState:userPageAccessState,module:\"CategoryMaster\"})})})})]})})})})})})})]})]})})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default CategoryMaster;","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","AvField","AvForm","Select","MetaTags","BreadcrumbShow","commonPageField","commonPageFieldSuccess","getCategoryTypelist","useDispatch","useSelector","editCategoryIDSuccess","PostMethodForCategory","PostMethod_ForCategoryAPISuccess","updateCategoryID","AlertState","CommonGetRoleAccessFunction","useHistory","comAddPageFieldFunc","formValChange","formValid","onChangeSelect","onChangeText","SaveButton","CATEGORY_lIST","CategoryMaster","props","editDataGetingFromList","state","pageModeProps","pageMode","formRef","history","dispatch","EditData","setEditData","setPageMode","modalCss","setModalCss","CategoryTypes_dropdown_Select","setCategoryTypes_dropdown_Select","userPageAccessState","setUserPageAccessState","PostAPIResponse","CategoryReducer","PostDataMessage","CategoryAPI","categoryTypeReducer","categoryTypeListData","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","values","id","Name","CategoryTypeName","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","setState","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","CategoryType","label","value","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","fieldArr","PageFieldMaster","handllerCategoryTypes","e","CategoryTypesValues","map","Data","formSubmitHandler","event","preventDefault","jsonBody","console","log","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","v","module"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/CategoryPages/CategoryMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { AvField, AvForm, } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageField, commonPageFieldSuccess, getCategoryTypelist } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    editCategoryIDSuccess,\r\n    PostMethodForCategory,\r\n    PostMethod_ForCategoryAPISuccess,\r\n    updateCategoryID\r\n} from \"../../../store/Administrator/CategoryRedux/action\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValChange,\r\n    formValid,\r\n    onChangeSelect,\r\n    onChangeText,\r\n\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\r\nimport { CATEGORY_lIST } from \"../../../routes/route_url\";\r\n\r\n\r\nconst CategoryMaster = (props) => {\r\n\r\n    let editDataGetingFromList = props.state;\r\n    let pageModeProps = props.pageMode;\r\n\r\n    const formRef = useRef(null);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const [EditData, setEditData] = useState([]);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [modalCss, setModalCss] = useState(false);\r\n\r\n    const [CategoryTypes_dropdown_Select, setCategoryTypes_dropdown_Select] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(123);\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        PostAPIResponse,\r\n        CategoryAPI,\r\n        pageField,\r\n        userAccess } = useSelector((state) => ({\r\n            PostAPIResponse: state.CategoryReducer.PostDataMessage,\r\n            CategoryAPI: state.categoryTypeReducer.categoryTypeListData,\r\n            userAccess: state.Login.RoleAccessUpdateData,\r\n            pageField: state.CommonPageFieldReducer.pageField\r\n        }));\r\n\r\n\r\n    {/** Dyanamic Page access state and OnChange function */ }\r\n    {/*start */ }\r\n    const [state, setState] = useState({\r\n        values: {\r\n            id: \"\",\r\n            Name: \"\",\r\n            CategoryTypeName: \"\",\r\n\r\n        },\r\n        fieldLabel: {\r\n            Name: '',\r\n            CategoryTypeName: '',\r\n\r\n        },\r\n\r\n        isError: {\r\n            Name: \"\",\r\n            CategoryTypeName: \"\",\r\n\r\n        },\r\n\r\n        hasValid: {\r\n            Name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            CategoryTypeName: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n        },\r\n        required: {\r\n\r\n        }\r\n    })\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n    {/*End */ }\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));\r\n        dispatch(commonPageField(18))\r\n    }, []);\r\n\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n\r\n                const { id, Name, CategoryTypeName, CategoryType } = hasEditVal\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n                \r\n                hasValid.Name.valid = true;\r\n                hasValid.CategoryTypeName.valid = true;\r\n\r\n                values.id = id\r\n                values.Name = Name;\r\n                values.CategoryTypeName = { label: CategoryTypeName, value: CategoryType };\r\n\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(BreadcrumbShow(hasEditVal.Name))\r\n\r\n            }\r\n            dispatch(editCategoryIDSuccess({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            setCategoryTypes_dropdown_Select('')\r\n            dispatch(PostMethod_ForCategoryAPISuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"other\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: CATEGORY_lIST,\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(PostMethod_ForCategoryAPISuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })\r\n        }\r\n    }, [pageField])\r\n\r\n\r\n    //get method for dropdown\r\n    useEffect(() => {\r\n        dispatch(getCategoryTypelist());\r\n    }, [dispatch]);\r\n\r\n\r\n    function handllerCategoryTypes(e) {\r\n        setCategoryTypes_dropdown_Select(e)\r\n    }\r\n\r\n    const CategoryTypesValues = CategoryAPI.map((Data) => ({\r\n        value: Data.id,\r\n        label: Data.Name\r\n    }));\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                CategoryType: values.CategoryTypeName.value,\r\n            });\r\n\r\n            if (pageMode === \"edit\") {\r\n                dispatch(updateCategoryID(jsonBody, values.id,));\r\n                console.log(\"jsonBody\", jsonBody)\r\n            }\r\n            else {\r\n                dispatch(PostMethodForCategory(jsonBody));\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n                                                            <Input\r\n                                                                name=\"Name\"\r\n                                                                id=\"txtName\"\r\n                                                                value={values.Name}\r\n                                                                type=\"text\"\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                autoComplete='off'\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label htmlFor=\"validationCustom01\"> {fieldLabel.CategoryTypeName} </Label>\r\n                                                                    <Col sm={12}>\r\n                                                                        <Select\r\n                                                                            name=\"CategoryTypeName\"\r\n                                                                            value={values.CategoryTypeName}\r\n                                                                            //   value={{label:\"abc\",value:1}}//default value set\r\n                                                                            isSearchable={false}\r\n                                                                            className=\"react-dropdown\"\r\n                                                                            classNamePrefix=\"dropdown\"\r\n                                                                            options={CategoryTypesValues}\r\n                                                                            onChange={(v, e) => onChangeSelect({ e, v, state, setState })}\r\n                                                                        />\r\n                                                                        {isError.CategoryTypeName.length > 0 && (\r\n                                                                            <span className=\"text-danger f-8\"><small>{isError.CategoryTypeName}</small></span>\r\n                                                                        )}\r\n                                                                    </Col>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    {SaveButton({ pageMode, userPageAccessState, module: \"CategoryMaster\" })}\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup >\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default CategoryMaster\r\n\r\n"],"mappings":"iNAAA,MAAOA,MAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAoD,OAApD,CACA,MAAOC,WAAP,KAAuB,uCAAvB,CACA,OACIC,IADJ,CAEIC,QAFJ,CAGIC,UAHJ,CAIIC,GAJJ,CAKIC,SALJ,CAMIC,SANJ,CAOIC,KAPJ,CAQIC,KARJ,CASIC,GATJ,KAUO,YAVP,CAWA,OAASC,OAAT,CAAkBC,MAAlB,KAAiC,gCAAjC,CACA,MAAOC,OAAP,KAAmB,cAAnB,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,cAAT,CAAyBC,eAAzB,CAA0CC,sBAA1C,CAAkEC,mBAAlE,KAA6F,wBAA7F,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACIC,qBADJ,CAEIC,qBAFJ,CAGIC,gCAHJ,CAIIC,gBAJJ,KAKO,mDALP,CAMA,OAASC,UAAT,KAA2B,wBAA3B,CACA,OAASC,2BAAT,KAA4C,wDAA5C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OACIC,mBADJ,CAEIC,aAFJ,CAGIC,SAHJ,CAIIC,cAJJ,CAKIC,YALJ,KAOO,yEAPP,CAQA,OAASC,UAAT,KAA2B,sCAA3B,CACA,OAASC,aAAT,KAA8B,2BAA9B,C,wFAGA,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,CAACC,KAAD,CAAW,CAE9B,GAAIC,uBAAsB,CAAGD,KAAK,CAACE,KAAnC,CACA,GAAIC,cAAa,CAAGH,KAAK,CAACI,QAA1B,CAEA,GAAMC,QAAO,CAAG1C,MAAM,CAAC,IAAD,CAAtB,CACA,GAAM2C,QAAO,CAAGf,UAAU,EAA1B,CACA,GAAMgB,SAAQ,CAAGxB,WAAW,EAA5B,CAEA,cAAgCnB,QAAQ,CAAC,EAAD,CAAxC,wCAAO4C,QAAP,eAAiBC,WAAjB,eACA,eAAgC7C,QAAQ,CAAC,EAAD,CAAxC,yCAAOwC,QAAP,eAAiBM,WAAjB,eACA,eAAgC9C,QAAQ,CAAC,KAAD,CAAxC,yCAAO+C,QAAP,eAAiBC,WAAjB,eAEA,eAA0EhD,QAAQ,CAAC,EAAD,CAAlF,yCAAOiD,6BAAP,eAAsCC,gCAAtC,eACA,eAAsDlD,QAAQ,CAAC,GAAD,CAA9D,0CAAOmD,mBAAP,gBAA4BC,sBAA5B,gBAGA;AACA,iBAImBhC,WAAW,CAAC,SAACkB,KAAD,QAAY,CACnCe,eAAe,CAAEf,KAAK,CAACgB,eAAN,CAAsBC,eADJ,CAEnCC,WAAW,CAAElB,KAAK,CAACmB,mBAAN,CAA0BC,oBAFJ,CAGnCC,UAAU,CAAErB,KAAK,CAACsB,KAAN,CAAYC,oBAHW,CAInCC,SAAS,CAAExB,KAAK,CAACyB,sBAAN,CAA6BD,SAJL,CAAZ,EAAD,CAJ9B,CACIT,eADJ,cACIA,eADJ,CAEIG,WAFJ,cAEIA,WAFJ,CAGIM,SAHJ,cAGIA,SAHJ,CAIIH,UAJJ,cAIIA,UAJJ,CAYA,CAAC,uDAAyD,CAC1D,CAAC,UAAY,CACb,gBAA0B3D,QAAQ,CAAC,CAC/BgE,MAAM,CAAE,CACJC,EAAE,CAAE,EADA,CAEJC,IAAI,CAAE,EAFF,CAGJC,gBAAgB,CAAE,EAHd,CADuB,CAO/BC,UAAU,CAAE,CACRF,IAAI,CAAE,EADE,CAERC,gBAAgB,CAAE,EAFV,CAPmB,CAa/BE,OAAO,CAAE,CACLH,IAAI,CAAE,EADD,CAELC,gBAAgB,CAAE,EAFb,CAbsB,CAmB/BG,QAAQ,CAAE,CACNJ,IAAI,CAAE,CACFK,MAAM,CAAE,EADN,CAEFC,UAAU,CAAE,EAFV,CAGFC,KAAK,CAAE,KAHL,CADA,CAMNN,gBAAgB,CAAE,CACdI,MAAM,CAAE,EADM,CAEdC,UAAU,CAAE,EAFE,CAGdC,KAAK,CAAE,KAHO,CANZ,CAnBqB,CA+B/BC,QAAQ,CAAE,EA/BqB,CAAD,CAAlC,2CAAOpC,KAAP,gBAAcqC,QAAd,gBAmCA,GAAMX,OAAM,kBAAQ1B,KAAK,CAAC0B,MAAd,CAAZ,CACA,GAAQK,QAAR,CAAoB/B,KAApB,CAAQ+B,OAAR,CACA,GAAQD,WAAR,CAAuB9B,KAAvB,CAAQ8B,UAAR,CAGA,CAAC,QAAU,CAEXtE,SAAS,CAAC,UAAM,CACZ6C,QAAQ,CAAC1B,sBAAsB,CAAC,IAAD,CAAvB,CAAR,CACA0B,QAAQ,CAAC3B,eAAe,CAAC,EAAD,CAAhB,CAAR,CACH,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAM4D,SAAQ,kBAAQlC,OAAO,CAACkC,QAAhB,CAAd,CACA,GAAMC,eAAc,CAAGD,QAAQ,CAACE,cAAT,CAAwB,WAAxB,CAAvB,CACA,GAAMC,aAAY,CAAG3C,KAAK,CAAC0C,cAAN,CAAqB,WAArB,CAArB,CAEA;AACAhF,SAAS,CAAC,UAAM,CACZ,GAAIkF,QAAO,CAAG,IAAd,CACA,GAAIC,aAAY,CAAGL,QAAQ,CAACM,QAA5B,CAEA,GAAIH,YAAJ,CAAkB,CACdE,YAAY,CAAG7C,KAAK,CAAC+C,UAArB,CACH,EAEDH,OAAO,CAAGrB,UAAU,CAACyB,IAAX,CAAgB,SAACC,GAAD,CAAS,CAC/B,MAAQ,WAAIA,GAAG,CAACC,cAAR,IAA6BL,YAArC,CACH,CAFS,CAAV,CAIA,GAAID,OAAJ,CAAa,CACT5B,sBAAsB,CAAC4B,OAAD,CAAtB,CACH,EACJ,CAfQ,CAeN,CAACrB,UAAD,CAfM,CAAT,CAiBA;AACA7D,SAAS,CAAC,UAAM,CAEZ;AACA,GAAK+E,cAAc,EAAIE,YAAvB,CAAsC,CAElC,GAAIQ,WAAU,CAAG,IAAjB,CACA,GAAIV,cAAJ,CAAoB,CAChB/B,WAAW,CAAC8B,QAAQ,CAACpC,QAAV,CAAX,CACA+C,UAAU,CAAGX,QAAQ,CAACY,SAAtB,CACH,CAHD,IAIK,IAAIT,YAAJ,CAAkB,CACnBQ,UAAU,CAAGnD,KAAK,CAACoD,SAAnB,CACA1C,WAAW,CAACV,KAAK,CAACI,QAAP,CAAX,CACAQ,WAAW,CAAC,IAAD,CAAX,CACH,CAED,GAAIuC,UAAJ,CAAgB,CAEZ,gBAAqDA,UAArD,CAAQtB,EAAR,aAAQA,EAAR,CAAYC,IAAZ,aAAYA,IAAZ,CAAkBC,gBAAlB,aAAkBA,gBAAlB,CAAoCsB,YAApC,aAAoCA,YAApC,CACA,4BAAiEnD,KAAjE,EAAQ0B,OAAR,QAAQA,MAAR,CAAgBI,WAAhB,QAAgBA,UAAhB,CAA4BE,QAA5B,QAA4BA,QAA5B,CAAsCI,QAAtC,QAAsCA,QAAtC,CAAgDL,QAAhD,QAAgDA,OAAhD,CAEAC,QAAQ,CAACJ,IAAT,CAAcO,KAAd,CAAsB,IAAtB,CACAH,QAAQ,CAACH,gBAAT,CAA0BM,KAA1B,CAAkC,IAAlC,CAEAT,OAAM,CAACC,EAAP,CAAYA,EAAZ,CACAD,OAAM,CAACE,IAAP,CAAcA,IAAd,CACAF,OAAM,CAACG,gBAAP,CAA0B,CAAEuB,KAAK,CAAEvB,gBAAT,CAA2BwB,KAAK,CAAEF,YAAlC,CAA1B,CAEAd,QAAQ,CAAC,CAAEX,MAAM,CAANA,OAAF,CAAUI,UAAU,CAAVA,WAAV,CAAsBE,QAAQ,CAARA,QAAtB,CAAgCI,QAAQ,CAARA,QAAhC,CAA0CL,OAAO,CAAPA,QAA1C,CAAD,CAAR,CACA1B,QAAQ,CAAC5B,cAAc,CAACwE,UAAU,CAACrB,IAAZ,CAAf,CAAR,CAEH,CACDvB,QAAQ,CAACtB,qBAAqB,CAAC,CAAEuE,MAAM,CAAE,KAAV,CAAD,CAAtB,CAAR,CACH,CACJ,CAlCQ,CAkCN,EAlCM,CAAT,CAoCA9F,SAAS,CAAC,UAAM,CAEZ,GAAKuD,eAAe,CAACuC,MAAhB,GAA2B,IAA5B,EAAsCvC,eAAe,CAACwC,UAAhB,GAA+B,GAAzE,CAA+E,CAC3E3C,gCAAgC,CAAC,EAAD,CAAhC,CACAP,QAAQ,CAACpB,gCAAgC,CAAC,CAAEqE,MAAM,CAAE,KAAV,CAAD,CAAjC,CAAR,CACAnD,OAAO,CAACqD,OAAR,CAAgBC,KAAhB,GACA,GAAIvD,QAAQ,GAAK,OAAjB,CAA0B,CACtBG,QAAQ,CAAClB,UAAU,CAAC,CAChBuE,IAAI,CAAE,CADU,CAEhBJ,MAAM,CAAE,IAFQ,CAGhBK,OAAO,CAAE5C,eAAe,CAAC4C,OAHT,CAAD,CAAX,CAAR,CAKH,CAND,IAOK,CACDtD,QAAQ,CAAClB,UAAU,CAAC,CAChBuE,IAAI,CAAE,CADU,CAEhBJ,MAAM,CAAE,IAFQ,CAGhBK,OAAO,CAAE5C,eAAe,CAAC4C,OAHT,CAIhBC,YAAY,CAAEhE,aAJE,CAAD,CAAX,CAAR,CAMH,CACJ,CAnBD,IAoBK,IAAImB,eAAe,CAACuC,MAAhB,GAA2B,IAA/B,CAAqC,CACtCjD,QAAQ,CAACpB,gCAAgC,CAAC,CAAEqE,MAAM,CAAE,KAAV,CAAD,CAAjC,CAAR,CACAjD,QAAQ,CAAClB,UAAU,CAAC,CAChBuE,IAAI,CAAE,CADU,CAEhBJ,MAAM,CAAE,IAFQ,CAGhBK,OAAO,CAAEE,IAAI,CAACC,SAAL,CAAeC,WAAW,CAACJ,OAA3B,CAHO,CAIhBC,YAAY,CAAE,KAJE,CAKhBI,mBAAmB,CAAE,KALL,CAAD,CAAX,CAAR,CAOH,CACJ,CAhCQ,CAgCN,CAACjD,eAAD,CAhCM,CAAT,CAkCAvD,SAAS,CAAC,UAAM,CAEZ,GAAIgE,SAAJ,CAAe,CACX,GAAMyC,SAAQ,CAAGzC,SAAS,CAAC0C,eAA3B,CACA5E,mBAAmB,CAAC,CAAEU,KAAK,CAALA,KAAF,CAASqC,QAAQ,CAARA,QAAT,CAAmB4B,QAAQ,CAARA,QAAnB,CAAD,CAAnB,CACH,CACJ,CANQ,CAMN,CAACzC,SAAD,CANM,CAAT,CASA;AACAhE,SAAS,CAAC,UAAM,CACZ6C,QAAQ,CAACzB,mBAAmB,EAApB,CAAR,CACH,CAFQ,CAEN,CAACyB,QAAD,CAFM,CAAT,CAKA,QAAS8D,sBAAT,CAA+BC,CAA/B,CAAkC,CAC9BxD,gCAAgC,CAACwD,CAAD,CAAhC,CACH,CAED,GAAMC,oBAAmB,CAAGnD,WAAW,CAACoD,GAAZ,CAAgB,SAACC,IAAD,QAAW,CACnDlB,KAAK,CAAEkB,IAAI,CAAC5C,EADuC,CAEnDyB,KAAK,CAAEmB,IAAI,CAAC3C,IAFuC,CAAX,EAAhB,CAA5B,CAKA,GAAM4C,kBAAiB,CAAG,QAApBA,kBAAoB,CAACC,KAAD,CAAW,CACjCA,KAAK,CAACC,cAAN,GACA,GAAIlF,SAAS,CAACQ,KAAD,CAAQqC,QAAR,CAAb,CAAgC,CAC5B,GAAMsC,SAAQ,CAAGd,IAAI,CAACC,SAAL,CAAe,CAC5BlC,IAAI,CAAEF,MAAM,CAACE,IADe,CAE5BuB,YAAY,CAAEzB,MAAM,CAACG,gBAAP,CAAwBwB,KAFV,CAAf,CAAjB,CAKA,GAAInD,QAAQ,GAAK,MAAjB,CAAyB,CACrBG,QAAQ,CAACnB,gBAAgB,CAACyF,QAAD,CAAWjD,MAAM,CAACC,EAAlB,CAAjB,CAAR,CACAiD,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBF,QAAxB,EACH,CAHD,IAIK,CACDtE,QAAQ,CAACrB,qBAAqB,CAAC2F,QAAD,CAAtB,CAAR,CAEH,CACJ,CACJ,CAjBD,CAoBA;AACA,GAAIG,eAAc,CAAG,EAArB,CACA,GAAKrE,QAAD,EAAeP,QAAQ,GAAK,aAAhC,CAAgD,CAAE4E,cAAc,CAAG,OAAjB,CAA0B,EAE5E,GAAI,EAAEjE,mBAAmB,GAAK,EAA1B,CAAJ,CAAmC,CAC/B,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,YAAK,SAAS,CAAC,cAAf,CAA8B,KAAK,CAAE,CAAEkE,SAAS,CAAED,cAAb,CAArC,uBACI,MAAC,SAAD,EAAW,KAAK,KAAhB,wBACI,KAAC,QAAD,wBACI,yBAAQjE,mBAAmB,CAACmE,WAA5B,+BADJ,EADJ,cAII,KAAC,UAAD,EAAY,cAAc,CAAEnE,mBAAmB,CAACmE,WAAhD,EAJJ,cAMI,MAAC,IAAD,EAAM,SAAS,CAAC,YAAhB,wBACI,MAAC,UAAD,EAAY,SAAS,CAAC,0BAAtB,CAAiD,KAAK,CAAE,CAAEC,eAAe,CAAE,SAAnB,CAAxD,wBACI,WAAI,SAAS,CAAC,uBAAd,UAAuCpE,mBAAmB,CAACqE,eAA3D,EADJ,cAEI,UAAG,SAAS,CAAC,4BAAb,UAA2CrE,mBAAmB,CAACsE,sBAA/D,EAFJ,GADJ,cAMI,KAAC,QAAD,EAAU,SAAS,CAAC,qBAApB,CAA0C,KAAK,CAAE,CAAEF,eAAe,CAAE,aAAnB,CAAjD,uBACI,aAAM,QAAQ,CAAET,iBAAhB,CAAmC,GAAG,CAAErE,OAAxC,CAAiD,UAAU,KAA3D,uBACI,KAAC,GAAD,EAAK,SAAS,CAAC,EAAf,uBACI,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,uBACI,KAAC,IAAD,wBACI,KAAC,QAAD,EAAU,KAAK,CAAE,CAAE8E,eAAe,CAAE,YAAnB,CAAjB,uBACI,MAAC,GAAD,yBACI,MAAC,SAAD,EAAW,SAAS,CAAC,oBAArB,wBACI,MAAC,KAAD,EAAO,OAAO,CAAC,oBAAf,WAAqCnD,UAAU,CAACF,IAAhD,OADJ,cAEI,KAAC,KAAD,EACI,IAAI,CAAC,MADT,CAEI,EAAE,CAAC,SAFP,CAGI,KAAK,CAAEF,MAAM,CAACE,IAHlB,CAII,IAAI,CAAC,MAJT,CAKI,SAAS,CAAEG,OAAO,CAACH,IAAR,CAAawD,MAAb,CAAsB,CAAtB,CAA0B,yBAA1B,CAAsD,cALrE,CAMI,WAAW,CAAC,mBANhB,CAOI,YAAY,CAAC,KAPjB,CAQI,QAAQ,CAAE,kBAACX,KAAD,CAAW,CACjB/E,YAAY,CAAC,CAAE+E,KAAK,CAALA,KAAF,CAASzE,KAAK,CAALA,KAAT,CAAgBqC,QAAQ,CAARA,QAAhB,CAAD,CAAZ,CACAhC,QAAQ,CAAC5B,cAAc,CAACgG,KAAK,CAACY,MAAN,CAAahC,KAAd,CAAf,CAAR,CACH,CAXL,EAFJ,CAeKtB,OAAO,CAACH,IAAR,CAAawD,MAAb,CAAsB,CAAtB,eACG,aAAM,SAAS,CAAC,kBAAhB,UAAoCrD,OAAO,CAACH,IAA5C,EAhBR,GADJ,cAqBI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,uBACI,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACI,MAAC,KAAD,EAAO,OAAO,CAAC,oBAAf,eAAsCE,UAAU,CAACD,gBAAjD,OADJ,cAEI,MAAC,GAAD,EAAK,EAAE,CAAE,EAAT,wBACI,KAAC,MAAD,EACI,IAAI,CAAC,kBADT,CAEI,KAAK,CAAEH,MAAM,CAACG,gBACd;AAHJ,CAII,YAAY,CAAE,KAJlB,CAKI,SAAS,CAAC,gBALd,CAMI,eAAe,CAAC,UANpB,CAOI,OAAO,CAAEwC,mBAPb,CAQI,QAAQ,CAAE,kBAACiB,CAAD,CAAIlB,CAAJ,QAAU3E,eAAc,CAAC,CAAE2E,CAAC,CAADA,CAAF,CAAKkB,CAAC,CAADA,CAAL,CAAQtF,KAAK,CAALA,KAAR,CAAeqC,QAAQ,CAARA,QAAf,CAAD,CAAxB,EARd,EADJ,CAWKN,OAAO,CAACF,gBAAR,CAAyBuD,MAAzB,CAAkC,CAAlC,eACG,aAAM,SAAS,CAAC,iBAAhB,uBAAkC,uBAAQrD,OAAO,CAACF,gBAAhB,EAAlC,EAZR,GAFJ,GADJ,EADJ,EArBJ,cA4CI,KAAC,SAAD,wBACI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,UACKlC,UAAU,CAAC,CAAEO,QAAQ,CAARA,QAAF,CAAYW,mBAAmB,CAAnBA,mBAAZ,CAAiC0E,MAAM,CAAE,gBAAzC,CAAD,CADf,EADJ,EADJ,EA5CJ,GADJ,EADJ,EADJ,EADJ,EADJ,EADJ,EANJ,GANJ,GADJ,EADJ,EADJ,CAuFH,CAxFD,IAyFK,CACD,mBACI,KAAC,KAAD,CAAO,QAAP,IADJ,CAGH,CACJ,CA1TD,CA4TA,cAAe1F,eAAf"},"metadata":{},"sourceType":"module"}