{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { DeleteTermsAndCondtions_Success, PostMethod_ForTermsAndCondtionsMaster_Success, GetTermsAndCondtionsList, GetTermsAndCondtionsList_Success } from \"./actions\";\nimport { Post_TermsAndCondtions_Master_API, get_TermsAndCondtionsList_API, delete_TermsAndCondtions_API } from \"../../../helpers/backend_helper\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API, POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API, GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API } from \"./actionTypes\";\nimport { AlertState } from \"../../actions\"; // post api\n\nfunction* Post_Method_ForTermsAndCondtionsMaster_GenFun(_ref) {\n  let {\n    data\n  } = _ref;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(Post_TermsAndCondtions_Master_API, data);\n    yield put(SpinnerState(false));\n    yield put(PostMethod_ForTermsAndCondtionsMaster_Success(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // Get List Page API\n\n\n_c = Post_Method_ForTermsAndCondtionsMaster_GenFun;\n\nfunction* Get_TermsAndCondtions_GenratorFunction() {\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(get_TermsAndCondtionsList_API);\n    yield put(GetTermsAndCondtionsList_Success(response.Data));\n    yield put(SpinnerState(false));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // delete List Page API\n// function* Delete_TermsAndCondtions_GenratorFunction({id}) {\n//   debugger\n//   yield put(SpinnerState(true))\n//   try {\n//     const response = yield call(delete_TermsAndCondtions_API,id);\n//     yield put(DeleteTermsAndCondtions_Success(response));\n//     yield put(SpinnerState(false))\n//   } catch (error) {\n//     yield put(SpinnerState(false))\n//     yield put(AlertState({\n//       Type: 4,\n//       Status: true, Message: \"500 Error Message\",\n//     }));\n//   }\n// }\n\n\n_c2 = Get_TermsAndCondtions_GenratorFunction;\n\nfunction* TermsAndCondtionsSaga() {\n  yield takeEvery(POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API, Post_Method_ForTermsAndCondtionsMaster_GenFun);\n  yield takeEvery(GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Get_TermsAndCondtions_GenratorFunction); // yield takeEvery(DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Delete_TermsAndCondtions_GenratorFunction)\n}\n\n_c3 = TermsAndCondtionsSaga;\nexport default TermsAndCondtionsSaga;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Post_Method_ForTermsAndCondtionsMaster_GenFun\");\n$RefreshReg$(_c2, \"Get_TermsAndCondtions_GenratorFunction\");\n$RefreshReg$(_c3, \"TermsAndCondtionsSaga\");","map":{"version":3,"names":["call","put","takeEvery","DeleteTermsAndCondtions_Success","PostMethod_ForTermsAndCondtionsMaster_Success","GetTermsAndCondtionsList","GetTermsAndCondtionsList_Success","Post_TermsAndCondtions_Master_API","get_TermsAndCondtionsList_API","delete_TermsAndCondtions_API","SpinnerState","DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API","POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API","GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API","AlertState","Post_Method_ForTermsAndCondtionsMaster_GenFun","data","response","error","Type","Status","Message","Get_TermsAndCondtions_GenratorFunction","Data","TermsAndCondtionsSaga"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/TermsAndCondtionsRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { DeleteTermsAndCondtions_Success,PostMethod_ForTermsAndCondtionsMaster_Success, GetTermsAndCondtionsList, GetTermsAndCondtionsList_Success} from \"./actions\";\r\n\r\nimport {Post_TermsAndCondtions_Master_API,get_TermsAndCondtionsList_API,delete_TermsAndCondtions_API } from \"../../../helpers/backend_helper\";\r\n\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\n\r\nimport {  DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API,POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API,GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API } from \"./actionTypes\";\r\n\r\nimport { AlertState } from \"../../actions\";\r\n\r\n\r\n// post api\r\nfunction* Post_Method_ForTermsAndCondtionsMaster_GenFun({ data }) {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(Post_TermsAndCondtions_Master_API, data);\r\n    yield put(SpinnerState(false))\r\n    yield put(PostMethod_ForTermsAndCondtionsMaster_Success(response));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// Get List Page API\r\nfunction* Get_TermsAndCondtions_GenratorFunction() {\r\n  \r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(get_TermsAndCondtionsList_API);\r\n    \r\n    yield put(GetTermsAndCondtionsList_Success(response.Data));\r\n    yield put(SpinnerState(false))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// delete List Page API\r\n// function* Delete_TermsAndCondtions_GenratorFunction({id}) {\r\n//   debugger\r\n//   yield put(SpinnerState(true))\r\n//   try {\r\n//     const response = yield call(delete_TermsAndCondtions_API,id);\r\n    \r\n//     yield put(DeleteTermsAndCondtions_Success(response));\r\n//     yield put(SpinnerState(false))\r\n//   } catch (error) {\r\n//     yield put(SpinnerState(false))\r\n//     yield put(AlertState({\r\n//       Type: 4,\r\n//       Status: true, Message: \"500 Error Message\",\r\n//     }));\r\n//   }\r\n// }\r\n\r\n\r\nfunction* TermsAndCondtionsSaga () {\r\n  yield takeEvery(POST_METHOD_HANDLER_FOR_TERMSANDCONDITIONS_MASTER_API, Post_Method_ForTermsAndCondtionsMaster_GenFun)\r\n  yield takeEvery(GET_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Get_TermsAndCondtions_GenratorFunction)\r\n  // yield takeEvery(DELETE_METHOD_FOR_TERMSANDCONDITIONSLIST_API, Delete_TermsAndCondtions_GenratorFunction)\r\n\r\n}\r\n\r\nexport default TermsAndCondtionsSaga;"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,SAASC,+BAAT,EAAyCC,6CAAzC,EAAwFC,wBAAxF,EAAkHC,gCAAlH,QAAyJ,WAAzJ;AAEA,SAAQC,iCAAR,EAA0CC,6BAA1C,EAAwEC,4BAAxE,QAA4G,iCAA5G;AAEA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,SAAUC,4CAAV,EAAuDC,qDAAvD,EAA6GC,yCAA7G,QAA8J,eAA9J;AAEA,SAASC,UAAT,QAA2B,eAA3B,C,CAGA;;AACA,UAAUC,6CAAV,OAAkE;EAAA,IAAV;IAAEC;EAAF,CAAU;EAChE,MAAMf,GAAG,CAACS,YAAY,CAAC,IAAD,CAAb,CAAT;;EACA,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMjB,IAAI,CAACO,iCAAD,EAAoCS,IAApC,CAA3B;IACA,MAAMf,GAAG,CAACS,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAMT,GAAG,CAACG,6CAA6C,CAACa,QAAD,CAA9C,CAAT;EACD,CAJD,CAIE,OAAOC,KAAP,EAAc;IACd,MAAMjB,GAAG,CAACS,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAMT,GAAG,CAACa,UAAU,CAAC;MACnBK,IAAI,EAAE,CADa;MAEnBC,MAAM,EAAE,IAFW;MAELC,OAAO,EAAE;IAFJ,CAAD,CAAX,CAAT;EAID;AACF,C,CAED;;;KAfUN,6C;;AAgBV,UAAUO,sCAAV,GAAmD;EAEjD,MAAMrB,GAAG,CAACS,YAAY,CAAC,IAAD,CAAb,CAAT;;EACA,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMjB,IAAI,CAACQ,6BAAD,CAA3B;IAEA,MAAMP,GAAG,CAACK,gCAAgC,CAACW,QAAQ,CAACM,IAAV,CAAjC,CAAT;IACA,MAAMtB,GAAG,CAACS,YAAY,CAAC,KAAD,CAAb,CAAT;EACD,CALD,CAKE,OAAOQ,KAAP,EAAc;IACd,MAAMjB,GAAG,CAACS,YAAY,CAAC,KAAD,CAAb,CAAT;IACA,MAAMT,GAAG,CAACa,UAAU,CAAC;MACnBK,IAAI,EAAE,CADa;MAEnBC,MAAM,EAAE,IAFW;MAELC,OAAO,EAAE;IAFJ,CAAD,CAAX,CAAT;EAID;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MAjCUC,sC;;AAoCV,UAAUE,qBAAV,GAAmC;EACjC,MAAMtB,SAAS,CAACU,qDAAD,EAAwDG,6CAAxD,CAAf;EACA,MAAMb,SAAS,CAACW,yCAAD,EAA4CS,sCAA5C,CAAf,CAFiC,CAGjC;AAED;;MALSE,qB;AAOV,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}