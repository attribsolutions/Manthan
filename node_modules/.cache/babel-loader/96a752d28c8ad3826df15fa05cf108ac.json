{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\routes\\\\middleware\\\\Authmiddleware.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authmiddleware = _ref => {\n  let {\n    userPageAccess: userPageAccess,\n    history: history,\n    component: Component,\n    layout: Layout,\n    isAuthProtected,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuthProtected && !localStorage.getItem(\"token\")) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this);\n      } else if (userPageAccess === undefined) {// console.log(\"userPageAccess props if \", history)\n        // history.push(\"/Dashboard\")\n        // return (\n        //   <Redirect\n        //     to={{ pathname: \"/Dashboard\",  }}  />\n        // )\n      } else {\n        if (!userPageAccess.fromDashboardAccess) {// console.log(\"userPageAccess props else\", history)\n          // history.push(\"/Dashboard\")\n          // return (\n          //   <Redirect\n          //     to={{ pathname: \"/Dashboard\",  }}  />\n          // )\n        }\n      }\n\n      ;\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Authmiddleware;\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any,\n  userPageAccess: PropTypes.any,\n  history: PropTypes.object\n};\nexport default Authmiddleware;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authmiddleware\");","map":{"version":3,"names":["React","PropTypes","Route","Redirect","Authmiddleware","userPageAccess","history","component","Component","layout","Layout","isAuthProtected","rest","props","localStorage","getItem","pathname","state","from","location","undefined","fromDashboardAccess","propTypes","bool","any","object"],"sources":["D:/GitProjects/Manthan/src/routes/middleware/Authmiddleware.js"],"sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nconst Authmiddleware = ({\r\n  userPageAccess: userPageAccess,\r\n  history: history,\r\n  component: Component,\r\n  layout: Layout,\r\n  isAuthProtected,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => {\r\n      \r\n      if (isAuthProtected && !localStorage.getItem(\"token\")) {\r\n        return (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n        )\r\n      }\r\n      \r\n     else if ((userPageAccess === undefined)) {\r\n        // console.log(\"userPageAccess props if \", history)\r\n\r\n        // history.push(\"/Dashboard\")\r\n        // return (\r\n        //   <Redirect\r\n        //     to={{ pathname: \"/Dashboard\",  }}  />\r\n        // )\r\n      }\r\n      else {\r\n        if (!(userPageAccess.fromDashboardAccess)) {\r\n          // console.log(\"userPageAccess props else\", history)\r\n\r\n          // history.push(\"/Dashboard\")\r\n          // return (\r\n          //   <Redirect\r\n          //     to={{ pathname: \"/Dashboard\",  }}  />\r\n          // )\r\n        }\r\n      };\r\n\r\n\r\n      return (\r\n        <Layout>\r\n          <Component {...props} />\r\n        </Layout>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nAuthmiddleware.propTypes = {\r\n  isAuthProtected: PropTypes.bool,\r\n  component: PropTypes.any,\r\n  location: PropTypes.object,\r\n  layout: PropTypes.any,\r\n  userPageAccess: PropTypes.any,\r\n  history: PropTypes.object,\r\n}\r\n\r\nexport default Authmiddleware;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG;EAAA,IAAC;IACtBC,cAAc,EAAEA,cADM;IAEtBC,OAAO,EAAEA,OAFa;IAGtBC,SAAS,EAAEC,SAHW;IAItBC,MAAM,EAAEC,MAJc;IAKtBC,eALsB;IAMtB,GAAGC;EANmB,CAAD;EAAA,oBAQrB,QAAC,KAAD,OACMA,IADN;IAEE,MAAM,EAAEC,KAAK,IAAI;MAEf,IAAIF,eAAe,IAAI,CAACG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB,EAAuD;QACrD,oBACE,QAAC,QAAD;UACE,EAAE,EAAE;YAAEC,QAAQ,EAAE,QAAZ;YAAsBC,KAAK,EAAE;cAAEC,IAAI,EAAEL,KAAK,CAACM;YAAd;UAA7B;QADN;UAAA;UAAA;UAAA;QAAA,QADF;MAID,CALD,MAOI,IAAKd,cAAc,KAAKe,SAAxB,EAAoC,CACtC;QAEA;QACA;QACA;QACA;QACA;MACD,CARG,MASC;QACH,IAAI,CAAEf,cAAc,CAACgB,mBAArB,EAA2C,CACzC;UAEA;UACA;UACA;UACA;UACA;QACD;MACF;;MAAA;MAGD,oBACE,QAAC,MAAD;QAAA,uBACE,QAAC,SAAD,OAAeR;QAAf;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;EAtCH;IAAA;IAAA;IAAA;EAAA,QARqB;AAAA,CAAvB;;KAAMT,c;AAkDNA,cAAc,CAACkB,SAAf,GAA2B;EACzBX,eAAe,EAAEV,SAAS,CAACsB,IADF;EAEzBhB,SAAS,EAAEN,SAAS,CAACuB,GAFI;EAGzBL,QAAQ,EAAElB,SAAS,CAACwB,MAHK;EAIzBhB,MAAM,EAAER,SAAS,CAACuB,GAJO;EAKzBnB,cAAc,EAAEJ,SAAS,CAACuB,GALD;EAMzBlB,OAAO,EAAEL,SAAS,CAACwB;AANM,CAA3B;AASA,eAAerB,cAAf"},"metadata":{},"sourceType":"module"}