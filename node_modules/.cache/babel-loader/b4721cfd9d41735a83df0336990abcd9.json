{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\ItemPages\\\\ItemMaster.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import Breadcrumb from \"../../../components/Common/Breadcrumb\";\n// import {\n//   Card,\n//   CardBody,\n//   Col,\n//   Container,\n//   Row,\n//   Label,\n//   CardHeader,\n//   FormGroup,\n// } from \"reactstrap\";\n// import {\n//   AvForm,\n//   AvField,\n//   AvInput,\n// } from \"availity-reactstrap-validation\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { AlertState } from \"../../../store/Utilites/CostumeAlert/actions\";\n// import {\n//   editItemSuccess,\n//   getItemGroup_ForDropDown,\n//   postItemData,\n//   PostItemDataSuccess,\n//   updateItemID,\n// } from \"../../../store/Administrator/ItemsRedux/action\";\n// import Select from \"react-select\";\n// import { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\n// import { MetaTags } from \"react-meta-tags\";\n// import { useHistory } from \"react-router-dom\";\n// import { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\n// const ItemsMaster = (props) => {\n//   const formRef = useRef(null);\n//   const dispatch = useDispatch();\n//   const history = useHistory()\n//   //*** \"isEditdata get all data from ModuleID for Binding  Form controls\n//   let editDataGatingFromList = props.state;\n//   //'IsEdit'--if true then update data otherwise it will perfrom save operation\n//   const [EditData, setEditData] = useState([]);\n//   const [pageMode, setPageMode] = useState(\"save\");\n//   const [userPageAccessState, setUserPageAccessState] = useState('');\n//   const [itemGroupSelect, setItemGroupSelect] = useState(\"\");\n//   //Access redux store Data /  'save_ModuleSuccess' action data\n//   const { PostAPIResponse, ItemGroupList,RoleAccessModifiedinSingleArray } = useSelector((state) => ({\n//     PostAPIResponse: state.ItemMastersReducer.postMessage,\n//     ItemGroupList: state.ItemMastersReducer.ItemGroupList,\n//   }));\n//   // userAccess useEffect\n//   useEffect(() => {\n//     if ((editDataGatingFromList === undefined)) {\n//         const userAcc = CommonGetRoleAccessFunction(history)\n//         if (!(userAcc === undefined)) {\n//             setUserPageAccessState(userAcc)\n//         }\n//     } else {\n//         let RelatedPageID = history.location.state.UserDetails.RelatedPageID\n//         const userfound = RoleAccessModifiedinSingleArray.find((element) => {\n//             return element.id === RelatedPageID\n//         })\n//         setUserPageAccessState(userfound)\n//     }\n// }, [history])\n//   // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n//   useEffect(() => {\n//     if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n//     dispatch(getItemGroup_ForDropDown());\n//     if (!(editDataGatingFromList === undefined)) {\n//       setEditData(editDataGatingFromList);\n//       setItemGroupSelect({\n//         value: editDataGatingFromList.ItemGroup_id,\n//         label: editDataGatingFromList.ItemGroupName,\n//       });\n//       setPageMode(\"edit\");\n//       dispatch(editItemSuccess({ Status: false }));\n//       dispatch(editItemSuccess({ Status: false }));\n//       dispatch(BreadcrumbShow(editDataGatingFromList.Name));\n//       return;\n//     }\n//   }, [editDataGatingFromList]);\n//   useEffect(() => {\n//     if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n//       dispatch(PostItemDataSuccess({ Status: false }));\n//       setItemGroupSelect('')\n//       formRef.current.reset();\n//       if (pageMode === \"other\") {\n//         dispatch(\n//           AlertState({\n//             Type: 1,\n//             Status: true,\n//             Message: PostAPIResponse.Message,\n//           })\n//         );\n//       } else {\n//         dispatch(\n//           AlertState({\n//             Type: 1,\n//             Status: true,\n//             Message: PostAPIResponse.Message,\n//             RedirectPath: \"/ItemList\",\n//             AfterResponseAction: false,\n//           })\n//         );\n//       }\n//     } else if (PostAPIResponse.Status === true) {\n//       dispatch(PostItemDataSuccess({ Status: false }));\n//       dispatch(\n//         AlertState({\n//           Type: 4,\n//           Status: true,\n//           Message: JSON.stringify(PostAPIResponse.Message),\n//           RedirectPath: false,\n//           AfterResponseAction: false,\n//         })\n//       );\n//     }\n//   }, [PostAPIResponse]);\n//   //'Save' And 'Update' Button Handller\n//   const handleValidUpdate = (event, values) => {\n//     const jsonBody = JSON.stringify({\n//       Name: values.Name,\n//       GSTPercentage: values.GSTPercentage,\n//       MRP: values.MRP,\n//       ItemGroup: itemGroupSelect.value,\n//       isActive: values.isActive,\n//       Sequence: values.Sequence,\n//       BaseUnitID: values.BaseUnit,\n//       Rate: values.Rate,\n//       CreatedBy: 1,\n//       CreatedOn: \"2022-05-20T11:22:55.711483Z\",\n//       UpdatedBy: 1,\n//       UpdatedOn: \"2022-05-20T11:22:55.711483Z\",\n//     });\n// debugger\n//     if (pageMode === 'edit') {\n//       dispatch(updateItemID(jsonBody, EditData.id));\n//     }\n//     else {\n//       dispatch(postItemData(jsonBody));\n//     }\n//   };\n//   const ItemGroup_Options = ItemGroupList.map((index) => ({\n//     value: index.id,\n//     label: index.Name,\n//   }));\n//   function handllerItemGroupID(e) {\n//     setItemGroupSelect(e);\n//   }\n//   // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n//   var IsEditMode_Css = \"\";\n//   if (pageMode === \"edit\" || pageMode == \"other\") { IsEditMode_Css = \"-5.5%\" };\n//   if (!(userPageAccessState === '')) {\n//     return (\n//       <React.Fragment>\n//         <MetaTags>\n//           <title>Item Master| FoodERP-React FrontEnd</title>\n//         </MetaTags>\n//         <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\n//           <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\n//           <Container fluid>\n//             <Card className=\"text-black\" >\n//               <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\n//                 <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\n//                 <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\n//               </CardHeader>\n//               <CardBody\n//                 className=\" vh-10 0 text-black\"\n//                 style={{ backgroundColor: \"#whitesmoke\" }}\n//               >\n//                 <AvForm\n//                   onValidSubmit={(e, v) => {\n//                     handleValidUpdate(e, v);\n//                   }}\n//                   ref={formRef}\n//                 >\n//                   <Row>\n//                     <Col md={12}>\n//                       <Card>\n//                         <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\n//                           <Row>\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\n//                               <Label htmlFor=\"validationCustom01\">Name</Label>\n//                               <AvField\n//                                 name=\"Name\"\n//                                 id=\"txtName\"\n//                                 value={EditData.Name}\n//                                 type=\"text\"\n//                                 placeholder=\"Please Enter Name\"\n//                                 autoComplete=\"off\"\n//                                 validate={{\n//                                   required: {\n//                                     value: true,\n//                                     errorMessage: \"Please Enter Name\",\n//                                   },\n//                                 }}\n//                                 onChange={(e) => {\n//                                   dispatch(BreadcrumbShow(e.target.value));\n//                                 }}\n//                               />\n//                             </FormGroup>\n//                             <Col md=\"1\"> </Col>\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\n//                               <Label htmlFor=\"validationCustom01\">\n//                                 {\" \"}\n//                                 Item Group{\" \"}\n//                               </Label>\n//                               <Select\n//                                 name=\"ItemGroup\"\n//                                 id=\"txtItemGroup\"\n//                                 value={itemGroupSelect}\n//                                 options={ItemGroup_Options}\n//                                 onChange={(e) => {\n//                                   handllerItemGroupID(e);\n//                                 }}\n//                                 autocomplete=\"off\"\n//                               />\n//                             </FormGroup>\n//                           </Row>\n//                           <Row>\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\n//                               <Label htmlFor=\"validationCustom01\">\n//                                 GST (%)\n//                               </Label>\n//                               <AvField\n//                                 name=\"GSTPercentage\"\n//                                 value={EditData.GSTPercentage}\n//                                 id=\"txtGST\"\n//                                 type=\"text\"\n//                                 placeholder=\"Please Enter GST (%)\"\n//                                 autoComplete=\"off\"\n//                                 validate={{\n//                                   number: true,\n//                                   required: {\n//                                     value: true,\n//                                     errorMessage: \"Please Enter  GST (%)\",\n//                                   },\n//                                 }}\n//                               />\n//                             </FormGroup>\n//                             <Col md=\"1\"> </Col>\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\n//                               <Label htmlFor=\"validationCustom01\">\n//                                 Base Unit\n//                               </Label>\n//                               <AvField\n//                                 name=\"BaseUnit\"\n//                                 value={EditData.BaseUnitID_id}\n//                                 id=\"txtBaseUnit\"\n//                                 type=\"text\"\n//                                 placeholder=\"Please Enter BaseUnit\"\n//                                 autoComplete=\"off\"\n//                                 validate={{\n//                                   number: true,\n//                                   required: {\n//                                     value: true,\n//                                     errorMessage: \"Please Enter BaseUnit\",\n//                                   },\n//                                 }}\n//                               />\n//                             </FormGroup>\n//                           </Row>\n//                           <Row>\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\n//                               <Label htmlFor=\"validationCustom01\">Rate</Label>\n//                               <AvField\n//                                 name=\"Rate\"\n//                                 value={EditData.Rate}\n//                                 id=\"txtRate\"\n//                                 type=\"text\"\n//                                 placeholder=\"Please Enter Rate\"\n//                                 autoComplete=\"off\"\n//                                 validate={{\n//                                   number: true,\n//                                   required: {\n//                                     value: true,\n//                                     errorMessage: \"Please Enter Rate\",\n//                                   },\n//                                 }}\n//                               />\n//                             </FormGroup>\n//                             <Col md=\"1\"> </Col>\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\n//                               <Label htmlFor=\"validationCustom01\">MRP</Label>\n//                               <AvField\n//                                 name=\"MRP\"\n//                                 id=\"txtMRP\"\n//                                 value={EditData.MRP}\n//                                 type=\"text\"\n//                                 placeholder=\"Please Enter MRP\"\n//                                 autoComplete=\"off\"\n//                                 validate={{\n//                                   number: true,\n//                                   required: {\n//                                     value: true,\n//                                     errorMessage: \"Please Enter MRP\",\n//                                   },\n//                                 }}\n//                               />\n//                             </FormGroup>\n//                           </Row>\n//                           <Row>\n//                             <FormGroup className=\"mb-3 col col-sm-4 \">\n//                               <Label htmlFor=\"validationCustom01\">Sequence</Label>\n//                               <AvField\n//                                 name=\"Sequence\"\n//                                 value={EditData.Sequence}\n//                                 id=\"txtSequence\"\n//                                 type=\"text\"\n//                                 placeholder=\"Please Enter Sequence\"\n//                                 autoComplete=\"off\"\n//                                 validate={{\n//                                   number: true,\n//                                   required: {\n//                                     value: true,\n//                                     errorMessage: \"Please Enter Sequence\",\n//                                   },\n//                                 }}\n//                               />\n//                             </FormGroup>\n//                             <Col md=\"1\"> </Col>\n//                             <FormGroup className=\"mb-2 col col-sm-6\">\n//                               <Row className=\"justify-content-md-left\">\n//                                 <Label\n//                                   htmlFor=\"horizontal-firstname-input\"\n//                                   className=\"col-sm-2 col-form-label mt-4\"\n//                                 >\n//                                   Active\n//                                 </Label>\n//                                 <Col md={2} style={{ marginTop: \"30px\" }}>\n//                                   {/* <AvInput\n//                                       checked={(EditData.ID === 0) ? false : EditData.IsActive}\n//                                       name=\"IsActive\"\n//                                       type=\"checkbox\"\n//                                       id=\"switch1\"\n//                                       switch=\"none\"\n//                                       defaultChecked />\n//                                     <Label className=\"me-1\" htmlFor=\"switch1\" data-on-label=\"Yes\" data-off-label=\"No\"></Label> */}\n//                                   <div\n//                                     className=\"form-check form-switch form-switch-md mb-3\"\n//                                     dir=\"ltr\"\n//                                   >\n//                                     <AvInput\n//                                       type=\"checkbox\"\n//                                       className=\"form-check-input\"\n//                                       id=\"customSwitchsizemd\"\n//                                       defaultChecked={EditData.isActive}\n//                                       name=\"isActive\"\n//                                     />\n//                                     <label\n//                                       className=\"form-check-label\"\n//                                       htmlFor=\"customSwitchsizemd\"\n//                                     ></label>\n//                                   </div>\n//                                 </Col>\n//                               </Row>\n//                             </FormGroup>\n//                           </Row>\n//                           <FormGroup >\n//                             <Row >\n//                               <Col sm={2}>\n//                                 <div>\n//                                   {\n//                                     pageMode === \"edit\" ?\n//                                       userPageAccessState.RoleAccess_IsEdit ?\n//                                         <button\n//                                           type=\"submit\"\n//                                           data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Module\"\n//                                           className=\"btn btn-success w-md\"\n//                                         >\n//                                           <i class=\"fas fa-edit me-2\"></i>Update\n//                                         </button>\n//                                         :\n//                                         <></>\n//                                       : (\n//                                         userPageAccessState.RoleAccess_IsSave ?\n//                                           <button\n//                                             type=\"submit\"\n//                                             data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Module\"\n//                                             className=\"btn btn-primary w-md\"\n//                                           > <i className=\"fas fa-save me-2\"></i> Save\n//                                           </button>\n//                                           :\n//                                           <></>\n//                                       )\n//                                   }\n//                                 </div>\n//                               </Col>\n//                             </Row>\n//                           </FormGroup >\n//                         </CardBody>\n//                       </Card>\n//                     </Col>\n//                   </Row>\n//                 </AvForm>\n//               </CardBody>\n//             </Card>\n//           </Container>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n//   else {\n//     return (\n//       <React.Fragment></React.Fragment>\n//     )\n//   }\n// };\n// export default ItemsMaster;\nimport React, { useEffect, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { Button, Card, CardBody, CardHeader, CardText, CardTitle, Col, Container, FormGroup, Label, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classnames from \"classnames\";\nimport BreadcrumbDemo from \"../../../components/Common/CmponentRelatedCommonFile/BreadcrumbDemo\";\nimport { AvField, AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { fetchCompanyList } from \"../../../store/Administrator/CompanyRedux/actions\";\nimport { getBaseUnit_ForDropDown, get_CategoryTypes_ForDropDown, get_Category_ForDropDown, get_SubCategory_ForDropDown } from \"../../../store/Administrator/ItemsRedux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemsMaster = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [activeTab1, setactiveTab1] = useState(\"5\");\n  const [companyList_dropdown_Select, setCompanyList_dropdown_Select] = useState(\"\");\n  const [BaseUnit_dropdown_Select, setBaseUnit_dropdown_Select] = useState(\"\");\n  const [categoryType_dropdown_Select, setCategoryType_dropdown_Select] = useState([{\n    value: 0,\n    label: \"text0\"\n  }, {\n    value: 1,\n    label: \"text1\"\n  }]);\n  const [category_dropdown_Select, setCategory_dropdown_Select] = useState([]);\n  const [subCategory_dropdown_Select, setsubCategory_dropdown_Select] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [multiCat, setMultiCat] = useState([{\n    CategoryType: {\n      value: 0,\n      label: \"test0\"\n    },\n    Category: {\n      value: 0,\n      label: \"category test0\"\n    },\n    SubCategory: {\n      value: 0,\n      label: \"subCategory test0\"\n    }\n  }]);\n  const {\n    companyList,\n    BaseUnit,\n    CategoryType,\n    Category,\n    SubCategory\n  } = useSelector(state => ({\n    companyList: state.Company.companyList,\n    BaseUnit: state.ItemMastersReducer.BaseUnit,\n    CategoryType: state.ItemMastersReducer.CategoryType,\n    Category: state.ItemMastersReducer.Category,\n    SubCategory: state.ItemMastersReducer.SubCategory\n  }));\n  useEffect(() => {\n    dispatch(fetchCompanyList());\n    dispatch(getBaseUnit_ForDropDown());\n    dispatch(get_CategoryTypes_ForDropDown());\n    dispatch(get_Category_ForDropDown());\n    dispatch(get_SubCategory_ForDropDown());\n  }, [dispatch]);\n\n  const toggle1 = tab => {\n    if (activeTab1 !== tab) {\n      setactiveTab1(tab);\n    }\n  };\n\n  const Company_DropdownOptions = companyList.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function CompanyList_DropDown_handller(e) {\n    setCompanyList_dropdown_Select(e);\n  }\n\n  const BaseUnit_DropdownOptions = BaseUnit.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const CategoryType_DropdownOptions = CategoryType.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const Category_DropdownOptions = Category.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n  const SubCategory_DropdownOptions = SubCategory.map(data => ({\n    value: data.id,\n    label: data.Name\n  }));\n\n  function Common_DropDown_handller_tabe_2(event, key, type) {\n    var found = multiCat.find((i, k) => {\n      return k === key;\n    });\n    let newSelectValue = '';\n\n    if (type.CategoryType) {\n      newSelectValue = {\n        CategoryType: found.CategoryType,\n        Category: event,\n        SubCategory: found.SubCategory\n      };\n    } else if (type.Category) {\n      newSelectValue = {\n        CategoryType: event,\n        Category: found.Category,\n        SubCategory: found.SubCategory\n      };\n    } else {\n      newSelectValue = {\n        CategoryType: found.CategoryType,\n        Category: found.Category,\n        SubCategory: event\n      };\n    }\n\n    let newTabArr = multiCat.map((index, k) => {\n      return k === key ? newSelectValue : index;\n    });\n    setMultiCat(newTabArr);\n  }\n\n  function CategoryType_DropDown_handller(event, key) {\n    var found = multiCat.find((i, k) => {\n      return k === key;\n    });\n    let newSelectValue = {\n      CategoryType: event,\n      Category: found.Category,\n      SubCategory: found.SubCategory\n    };\n    let newTabArr = multiCat.map((index, k) => {\n      return k === key ? newSelectValue : index;\n    });\n    setMultiCat(newTabArr);\n  }\n\n  function SubCategory_DropDown_handller(event, key) {\n    var found = multiCat.find((i, k) => {\n      return k === key;\n    });\n    let newSelectValue = {\n      CategoryType: event,\n      Category: found.Category,\n      SubCategory: found.SubCategory\n    };\n    let newTabArr = multiCat.map((index, k) => {\n      return k === key ? newSelectValue : index;\n    });\n    setMultiCat(newTabArr);\n  }\n\n  function BaseUnit_DropDown_handller(e) {\n    setBaseUnit_dropdown_Select(e);\n  }\n\n  console.log('multiCat', multiCat);\n\n  function MuliSelectTab2Handler(key) {\n    debugger;\n    var newarr = [...multiCat, {\n      CategoryType: {\n        value: 0,\n        label: \"select\"\n      },\n      Category: {\n        value: 0,\n        label: \"select\"\n      },\n      SubCategory: {\n        value: 0,\n        label: \"select\"\n      }\n    }];\n    setMultiCat(newarr);\n  }\n\n  function MulitDeletrTab_2Handler(key) {\n    debugger;\n    var removeElseArrray = multiCat.filter((i, k) => {\n      return !(k === key);\n    });\n    setMultiCat(removeElseArrray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Tabs & Accordions | Minia - React Admin & Dashboard Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          children: [/*#__PURE__*/_jsxDEV(BreadcrumbDemo, {\n            title: \"Components\",\n            breadcrumbItem: \"Tabs & Accordions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                    className: \"h4\",\n                    children: \"Justify Tabs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(Nav, {\n                    tabs: true,\n                    className: \"nav-tabs-custom nav-justified\",\n                    children: [/*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"5\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"5\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 663,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 662,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Tab1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 665,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 653,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 652,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"6\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"6\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 679,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 678,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Tab2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 681,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 669,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 668,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"7\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"7\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 696,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 695,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Tab3\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 698,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 686,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 685,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"8\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"8\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 712,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 711,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Tab4\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 714,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 702,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 701,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"9\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"9\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 728,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 727,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Tab5\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 730,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 718,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 717,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                      children: /*#__PURE__*/_jsxDEV(NavLink, {\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        className: classnames({\n                          active: activeTab1 === \"10\"\n                        }),\n                        onClick: () => {\n                          toggle1(\"10\");\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-block d-sm-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-home\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 744,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 743,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"d-none d-sm-block\",\n                          children: \"Tab6\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 746,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 734,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n                    activeTab: activeTab1,\n                    className: \"p-3 text-muted\",\n                    children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"5\",\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: 12,\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          className: \"text-black\",\n                          children: /*#__PURE__*/_jsxDEV(CardBody, {\n                            style: {\n                              backgroundColor: \"whitesmoke\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Row, {\n                              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3 col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \"Name\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 759,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                  name: \"Name\",\n                                  value: \"\",\n                                  type: \"text\",\n                                  id: \"txtName\",\n                                  placeholder: \" Please Enter Name \",\n                                  autoComplete: \"off\",\n                                  validate: {\n                                    required: {\n                                      value: true,\n                                      errorMessage: 'Please Enter Name'\n                                    }\n                                  },\n                                  onChange: e => {\n                                    setName(e.target.value);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 760,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 758,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3 col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \"ShortName\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 771,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                  name: \"Name\",\n                                  value: \"\",\n                                  type: \"text\",\n                                  id: \"txtName\",\n                                  placeholder: \" Please Enter ShortName \",\n                                  autoComplete: \"off\",\n                                  validate: {\n                                    required: {\n                                      value: true,\n                                      errorMessage: 'Please Enter Name'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 772,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 770,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \" col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom21\",\n                                  children: \"Company\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 782,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                  value: companyList_dropdown_Select,\n                                  options: Company_DropdownOptions,\n                                  onChange: e => {\n                                    CompanyList_DropDown_handller(e);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 783,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 781,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \" col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom21\",\n                                  children: \"Base Unit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 791,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                  value: BaseUnit_dropdown_Select,\n                                  options: BaseUnit_DropdownOptions,\n                                  onChange: e => {\n                                    BaseUnit_DropDown_handller(e);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 792,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 790,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3 col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \"BarCode\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 800,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                  name: \"Name\",\n                                  value: \"\",\n                                  type: \"text\",\n                                  id: \"txtName\",\n                                  placeholder: \" Please Enter BarCode \",\n                                  autoComplete: \"off\",\n                                  validate: {\n                                    required: {\n                                      value: true,\n                                      errorMessage: 'Please Enter BarCode'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 801,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 799,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-3 col col-sm-4 \",\n                                children: [/*#__PURE__*/_jsxDEV(Label, {\n                                  htmlFor: \"validationCustom01\",\n                                  children: \"Sequence\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 811,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                  name: \"Name\",\n                                  value: \"\",\n                                  type: \"text\",\n                                  id: \"txtName\",\n                                  placeholder: \" Please Enter Sequence \",\n                                  autoComplete: \"off\",\n                                  validate: {\n                                    required: {\n                                      value: true,\n                                      errorMessage: 'Please Enter Sequence'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 812,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 810,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                className: \"mb-2 col col-sm-5\",\n                                children: /*#__PURE__*/_jsxDEV(Row, {\n                                  className: \"justify-content-md-left\",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"horizontal-firstname-input\",\n                                    className: \"col-sm-2 col-form-label\",\n                                    children: \"Active \"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 822,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                    md: 2,\n                                    style: {\n                                      marginTop: '9px'\n                                    },\n                                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"form-check form-switch form-switch-md mb-3\",\n                                      dir: \"ltr\",\n                                      children: /*#__PURE__*/_jsxDEV(AvInput, {\n                                        type: \"checkbox\",\n                                        className: \"form-check-input\",\n                                        id: \"customSwitchsizemd\",\n                                        checked: \"\",\n                                        defaultChecked: true,\n                                        name: \"isActive\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 826,\n                                        columnNumber: 81\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 825,\n                                      columnNumber: 77\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 823,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 821,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 820,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 756,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 755,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 754,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 753,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 752,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        md: 12,\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          className: \"text-black\",\n                          children: /*#__PURE__*/_jsxDEV(CardBody, {\n                            style: {\n                              backgroundColor: \"whitesmoke\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Row, {\n                              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                children: [\"Item Name :\", /*#__PURE__*/_jsxDEV(Label, {\n                                  className: \"text-primary\",\n                                  children: name\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 847,\n                                  columnNumber: 80\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 847,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 846,\n                              columnNumber: 61\n                            }, this), multiCat.map((index, key) => {\n                              return /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(Col, {\n                                  className: \" col col-11 \",\n                                  children: /*#__PURE__*/_jsxDEV(Row, {\n                                    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                      className: \" col col-sm-4 \",\n                                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                                        htmlFor: \"validationCustom21\",\n                                        children: \"Category Type\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 855,\n                                        columnNumber: 81\n                                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                        value: multiCat[key].CategoryType,\n                                        options: CategoryType_DropdownOptions,\n                                        onChange: e => {\n                                          Common_DropDown_handller_tabe_2(e, key, \"CategoryType\");\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 856,\n                                        columnNumber: 81\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 854,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                      className: \" col col-sm-4 \",\n                                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                                        htmlFor: \"validationCustom21\",\n                                        children: \"Category\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 864,\n                                        columnNumber: 81\n                                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                        value: multiCat[key].Category,\n                                        options: Category_DropdownOptions,\n                                        onChange: e => {\n                                          Common_DropDown_handller_tabe_2(e, key, \"Category\");\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 865,\n                                        columnNumber: 81\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 863,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                      className: \" col col-sm-4 \",\n                                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                                        htmlFor: \"validationCustom21\",\n                                        children: \"Sub Category\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 873,\n                                        columnNumber: 81\n                                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                        value: subCategory_dropdown_Select[key],\n                                        options: SubCategory_DropdownOptions,\n                                        onChange: e => {\n                                          Common_DropDown_handller_tabe_2(e, key, \"SubCategory\");\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 874,\n                                        columnNumber: 81\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 872,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 853,\n                                    columnNumber: 73\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 852,\n                                  columnNumber: 69\n                                }, this), multiCat.length === key + 1 ? /*#__PURE__*/_jsxDEV(Col, {\n                                  className: \"col col-1 mt-3\",\n                                  children: /*#__PURE__*/_jsxDEV(Button, {\n                                    className: \"btn btn-sm btn-light mt-3 \",\n                                    type: \"button\",\n                                    onClick: () => {\n                                      MuliSelectTab2Handler(key);\n                                    },\n                                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                      className: \"dripicons-plus\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 887,\n                                      columnNumber: 81\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 884,\n                                    columnNumber: 77\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 883,\n                                  columnNumber: 73\n                                }, this) : /*#__PURE__*/_jsxDEV(Col, {\n                                  className: \"col col-1 mt-3\",\n                                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                    className: \"mdi mdi-trash-can d-block text-danger font-size-20 mt-3\",\n                                    onClick: () => {\n                                      MulitDeletrTab_2Handler(key);\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 899,\n                                    columnNumber: 77\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 897,\n                                  columnNumber: 75\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 851,\n                                columnNumber: 72\n                              }, this);\n                            })]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 844,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 843,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 842,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"7\",\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          sm: \"12\",\n                          children: /*#__PURE__*/_jsxDEV(CardText, {\n                            className: \"mb-0\",\n                            children: \"Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify squid 8-bit cred pitchfork. Williamsburg banh mi whatever gluten-free, carles pitchfork biodiesel fixie etsy retro mlkshk vice blog. Scenester cred you probably haven't heard of them, vinyl craft beer blog stumptown. Pitchfork sustainable tofu synth chambray yr.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 920,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 919,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 918,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 917,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"8\",\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          sm: \"12\",\n                          children: /*#__PURE__*/_jsxDEV(CardText, {\n                            className: \"mb-0\",\n                            children: \"Trust fund seitan letterpress, keytar raw denim keffiyeh etsy art party before they sold out master cleanse gluten-free squid scenester freegan cosby sweater. Fanny pack portland seitan DIY, art party locavore wolf cliche high life echo park Austin. Cred vinyl keffiyeh DIY salvia PBR, banh mi before they sold out farm-to-table VHS viral locavore cosby sweater. Lomo wolf viral, mustache readymade thundercats keffiyeh craft beer marfa ethical. Wolf salvia freegan, sartorial keffiyeh echo park vegan.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 941,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 940,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 939,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 938,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"9\",\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          sm: \"12\",\n                          children: /*#__PURE__*/_jsxDEV(CardText, {\n                            className: \"mb-0\",\n                            children: \"Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify squid 8-bit cred pitchfork. Williamsburg banh mi whatever gluten-free, carles pitchfork biodiesel fixie etsy retro mlkshk vice blog. Scenester cred you probably haven't heard of them, vinyl craft beer blog stumptown. Pitchfork sustainable tofu synth chambray yr.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 959,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 958,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 957,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 956,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                      tabId: \"10\",\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          md: 12,\n                          children: /*#__PURE__*/_jsxDEV(Card, {\n                            className: \"text-black\",\n                            children: /*#__PURE__*/_jsxDEV(CardBody, {\n                              style: {\n                                backgroundColor: \"whitesmoke\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Row, {\n                                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                  children: [\"Item Name :\", /*#__PURE__*/_jsxDEV(Label, {\n                                    className: \"text-primary\",\n                                    children: name\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 982,\n                                    columnNumber: 84\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 982,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 981,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"MRP\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 986,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                    name: \"MRP\",\n                                    value: \"\",\n                                    type: \"text\",\n                                    id: \"txtName\",\n                                    placeholder: \" Please Enter MRP \",\n                                    autoComplete: \"off\",\n                                    validate: {\n                                      required: {\n                                        value: true,\n                                        errorMessage: 'Please Enter MRP '\n                                      }\n                                    },\n                                    onChange: e => {\n                                      setName(e.target.value);\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 987,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 985,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"GST\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 998,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                    name: \"GST\",\n                                    value: \"\",\n                                    type: \"text\",\n                                    id: \"txtName\",\n                                    placeholder: \" Please Enter GST \",\n                                    autoComplete: \"off\",\n                                    validate: {\n                                      required: {\n                                        value: true,\n                                        errorMessage: 'Please Enter GST'\n                                      }\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 999,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 997,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 984,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"HSN\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1011,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                    name: \"HSN\",\n                                    value: \"\",\n                                    type: \"text\",\n                                    id: \"txtName\",\n                                    placeholder: \" Please Enter HSN \",\n                                    autoComplete: \"off\",\n                                    validate: {\n                                      required: {\n                                        value: true,\n                                        errorMessage: 'Please Enter HSN'\n                                      }\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1012,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1010,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                                  className: \"mb-3 col col-sm-4 \",\n                                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                                    htmlFor: \"validationCustom01\",\n                                    children: \"Margin\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1022,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                                    name: \"Margin\",\n                                    value: \"\",\n                                    type: \"text\",\n                                    id: \"txtName\",\n                                    placeholder: \" Please Enter Margin \",\n                                    autoComplete: \"off\",\n                                    validate: {\n                                      required: {\n                                        value: true,\n                                        errorMessage: 'Please Enter Margin'\n                                      }\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1023,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1021,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1009,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 980,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 979,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 978,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 977,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 976,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 632,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemsMaster, \"Mjm4ey3AcbNI1O9jsTnw7M739cU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ItemsMaster;\nexport default ItemsMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsMaster\");","map":{"version":3,"names":["React","useEffect","useState","MetaTags","Button","Card","CardBody","CardHeader","CardText","CardTitle","Col","Container","FormGroup","Label","Nav","NavItem","NavLink","Row","TabContent","TabPane","Link","useDispatch","useSelector","classnames","BreadcrumbDemo","AvField","AvForm","AvInput","Select","fetchCompanyList","getBaseUnit_ForDropDown","get_CategoryTypes_ForDropDown","get_Category_ForDropDown","get_SubCategory_ForDropDown","ItemsMaster","dispatch","activeTab1","setactiveTab1","companyList_dropdown_Select","setCompanyList_dropdown_Select","BaseUnit_dropdown_Select","setBaseUnit_dropdown_Select","categoryType_dropdown_Select","setCategoryType_dropdown_Select","value","label","category_dropdown_Select","setCategory_dropdown_Select","subCategory_dropdown_Select","setsubCategory_dropdown_Select","name","setName","multiCat","setMultiCat","CategoryType","Category","SubCategory","companyList","BaseUnit","state","Company","ItemMastersReducer","toggle1","tab","Company_DropdownOptions","map","data","id","Name","CompanyList_DropDown_handller","e","BaseUnit_DropdownOptions","CategoryType_DropdownOptions","Category_DropdownOptions","SubCategory_DropdownOptions","Common_DropDown_handller_tabe_2","event","key","type","found","find","i","k","newSelectValue","newTabArr","index","CategoryType_DropDown_handller","SubCategory_DropDown_handller","BaseUnit_DropDown_handller","console","log","MuliSelectTab2Handler","newarr","MulitDeletrTab_2Handler","removeElseArrray","filter","cursor","active","backgroundColor","required","errorMessage","target","marginTop","length"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/ItemPages/ItemMaster.js"],"sourcesContent":["// import React, { useEffect, useRef, useState } from \"react\";\r\n// import Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Col,\r\n//   Container,\r\n//   Row,\r\n//   Label,\r\n//   CardHeader,\r\n//   FormGroup,\r\n// } from \"reactstrap\";\r\n// import {\r\n//   AvForm,\r\n//   AvField,\r\n//   AvInput,\r\n// } from \"availity-reactstrap-validation\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// import { AlertState } from \"../../../store/Utilites/CostumeAlert/actions\";\r\n// import {\r\n//   editItemSuccess,\r\n//   getItemGroup_ForDropDown,\r\n//   postItemData,\r\n//   PostItemDataSuccess,\r\n//   updateItemID,\r\n// } from \"../../../store/Administrator/ItemsRedux/action\";\r\n// import Select from \"react-select\";\r\n// import { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\r\n// import { MetaTags } from \"react-meta-tags\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\n\r\n// const ItemsMaster = (props) => {\r\n\r\n//   const formRef = useRef(null);\r\n//   const dispatch = useDispatch();\r\n//   const history = useHistory()\r\n\r\n//   //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n//   let editDataGatingFromList = props.state;\r\n\r\n//   //'IsEdit'--if true then update data otherwise it will perfrom save operation\r\n//   const [EditData, setEditData] = useState([]);\r\n//   const [pageMode, setPageMode] = useState(\"save\");\r\n//   const [userPageAccessState, setUserPageAccessState] = useState('');\r\n//   const [itemGroupSelect, setItemGroupSelect] = useState(\"\");\r\n\r\n//   //Access redux store Data /  'save_ModuleSuccess' action data\r\n//   const { PostAPIResponse, ItemGroupList,RoleAccessModifiedinSingleArray } = useSelector((state) => ({\r\n//     PostAPIResponse: state.ItemMastersReducer.postMessage,\r\n//     ItemGroupList: state.ItemMastersReducer.ItemGroupList,\r\n//   }));\r\n\r\n//   // userAccess useEffect\r\n//   useEffect(() => {\r\n//     if ((editDataGatingFromList === undefined)) {\r\n//         const userAcc = CommonGetRoleAccessFunction(history)\r\n//         if (!(userAcc === undefined)) {\r\n//             setUserPageAccessState(userAcc)\r\n//         }\r\n//     } else {\r\n//         let RelatedPageID = history.location.state.UserDetails.RelatedPageID\r\n//         const userfound = RoleAccessModifiedinSingleArray.find((element) => {\r\n//             return element.id === RelatedPageID\r\n//         })\r\n//         setUserPageAccessState(userfound)\r\n//     }\r\n\r\n// }, [history])\r\n\r\n//   // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n//   useEffect(() => {\r\n\r\n//     if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n//     dispatch(getItemGroup_ForDropDown());\r\n//     if (!(editDataGatingFromList === undefined)) {\r\n//       setEditData(editDataGatingFromList);\r\n//       setItemGroupSelect({\r\n//         value: editDataGatingFromList.ItemGroup_id,\r\n//         label: editDataGatingFromList.ItemGroupName,\r\n//       });\r\n//       setPageMode(\"edit\");\r\n//       dispatch(editItemSuccess({ Status: false }));\r\n//       dispatch(editItemSuccess({ Status: false }));\r\n//       dispatch(BreadcrumbShow(editDataGatingFromList.Name));\r\n//       return;\r\n//     }\r\n//   }, [editDataGatingFromList]);\r\n\r\n//   useEffect(() => {\r\n//     if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\r\n//       dispatch(PostItemDataSuccess({ Status: false }));\r\n//       setItemGroupSelect('')\r\n//       formRef.current.reset();\r\n//       if (pageMode === \"other\") {\r\n//         dispatch(\r\n//           AlertState({\r\n//             Type: 1,\r\n//             Status: true,\r\n//             Message: PostAPIResponse.Message,\r\n//           })\r\n//         );\r\n//       } else {\r\n//         dispatch(\r\n//           AlertState({\r\n//             Type: 1,\r\n//             Status: true,\r\n//             Message: PostAPIResponse.Message,\r\n//             RedirectPath: \"/ItemList\",\r\n//             AfterResponseAction: false,\r\n//           })\r\n//         );\r\n//       }\r\n//     } else if (PostAPIResponse.Status === true) {\r\n//       dispatch(PostItemDataSuccess({ Status: false }));\r\n//       dispatch(\r\n//         AlertState({\r\n//           Type: 4,\r\n//           Status: true,\r\n//           Message: JSON.stringify(PostAPIResponse.Message),\r\n//           RedirectPath: false,\r\n//           AfterResponseAction: false,\r\n//         })\r\n//       );\r\n//     }\r\n//   }, [PostAPIResponse]);\r\n\r\n//   //'Save' And 'Update' Button Handller\r\n//   const handleValidUpdate = (event, values) => {\r\n//     const jsonBody = JSON.stringify({\r\n//       Name: values.Name,\r\n//       GSTPercentage: values.GSTPercentage,\r\n//       MRP: values.MRP,\r\n//       ItemGroup: itemGroupSelect.value,\r\n//       isActive: values.isActive,\r\n//       Sequence: values.Sequence,\r\n//       BaseUnitID: values.BaseUnit,\r\n//       Rate: values.Rate,\r\n//       CreatedBy: 1,\r\n//       CreatedOn: \"2022-05-20T11:22:55.711483Z\",\r\n//       UpdatedBy: 1,\r\n//       UpdatedOn: \"2022-05-20T11:22:55.711483Z\",\r\n//     });\r\n// debugger\r\n//     if (pageMode === 'edit') {\r\n//       dispatch(updateItemID(jsonBody, EditData.id));\r\n//     }\r\n//     else {\r\n//       dispatch(postItemData(jsonBody));\r\n//     }\r\n//   };\r\n\r\n//   const ItemGroup_Options = ItemGroupList.map((index) => ({\r\n//     value: index.id,\r\n//     label: index.Name,\r\n//   }));\r\n\r\n//   function handllerItemGroupID(e) {\r\n//     setItemGroupSelect(e);\r\n//   }\r\n\r\n//   // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n//   var IsEditMode_Css = \"\";\r\n//   if (pageMode === \"edit\" || pageMode == \"other\") { IsEditMode_Css = \"-5.5%\" };\r\n\r\n//   if (!(userPageAccessState === '')) {\r\n//     return (\r\n//       <React.Fragment>\r\n//         <MetaTags>\r\n//           <title>Item Master| FoodERP-React FrontEnd</title>\r\n//         </MetaTags>\r\n//         <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n//           <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n//           <Container fluid>\r\n\r\n//             <Card className=\"text-black\" >\r\n//               <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n//                 <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n//                 <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n//               </CardHeader>\r\n//               <CardBody\r\n//                 className=\" vh-10 0 text-black\"\r\n//                 style={{ backgroundColor: \"#whitesmoke\" }}\r\n//               >\r\n//                 <AvForm\r\n//                   onValidSubmit={(e, v) => {\r\n//                     handleValidUpdate(e, v);\r\n//                   }}\r\n//                   ref={formRef}\r\n//                 >\r\n//                   <Row>\r\n//                     <Col md={12}>\r\n//                       <Card>\r\n//                         <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n//                           <Row>\r\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\r\n//                               <Label htmlFor=\"validationCustom01\">Name</Label>\r\n//                               <AvField\r\n//                                 name=\"Name\"\r\n//                                 id=\"txtName\"\r\n//                                 value={EditData.Name}\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Please Enter Name\"\r\n//                                 autoComplete=\"off\"\r\n//                                 validate={{\r\n//                                   required: {\r\n//                                     value: true,\r\n//                                     errorMessage: \"Please Enter Name\",\r\n//                                   },\r\n//                                 }}\r\n//                                 onChange={(e) => {\r\n//                                   dispatch(BreadcrumbShow(e.target.value));\r\n//                                 }}\r\n//                               />\r\n//                             </FormGroup>\r\n//                             <Col md=\"1\"> </Col>\r\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\r\n//                               <Label htmlFor=\"validationCustom01\">\r\n//                                 {\" \"}\r\n//                                 Item Group{\" \"}\r\n//                               </Label>\r\n//                               <Select\r\n//                                 name=\"ItemGroup\"\r\n//                                 id=\"txtItemGroup\"\r\n//                                 value={itemGroupSelect}\r\n//                                 options={ItemGroup_Options}\r\n//                                 onChange={(e) => {\r\n//                                   handllerItemGroupID(e);\r\n//                                 }}\r\n//                                 autocomplete=\"off\"\r\n//                               />\r\n//                             </FormGroup>\r\n//                           </Row>\r\n\r\n//                           <Row>\r\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\r\n//                               <Label htmlFor=\"validationCustom01\">\r\n//                                 GST (%)\r\n//                               </Label>\r\n//                               <AvField\r\n//                                 name=\"GSTPercentage\"\r\n//                                 value={EditData.GSTPercentage}\r\n//                                 id=\"txtGST\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Please Enter GST (%)\"\r\n//                                 autoComplete=\"off\"\r\n//                                 validate={{\r\n//                                   number: true,\r\n//                                   required: {\r\n//                                     value: true,\r\n//                                     errorMessage: \"Please Enter  GST (%)\",\r\n//                                   },\r\n//                                 }}\r\n//                               />\r\n//                             </FormGroup>\r\n\r\n//                             <Col md=\"1\"> </Col>\r\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\r\n//                               <Label htmlFor=\"validationCustom01\">\r\n//                                 Base Unit\r\n//                               </Label>\r\n//                               <AvField\r\n//                                 name=\"BaseUnit\"\r\n//                                 value={EditData.BaseUnitID_id}\r\n//                                 id=\"txtBaseUnit\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Please Enter BaseUnit\"\r\n//                                 autoComplete=\"off\"\r\n//                                 validate={{\r\n//                                   number: true,\r\n//                                   required: {\r\n//                                     value: true,\r\n//                                     errorMessage: \"Please Enter BaseUnit\",\r\n//                                   },\r\n//                                 }}\r\n//                               />\r\n//                             </FormGroup>\r\n//                           </Row>\r\n\r\n//                           <Row>\r\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\r\n//                               <Label htmlFor=\"validationCustom01\">Rate</Label>\r\n//                               <AvField\r\n//                                 name=\"Rate\"\r\n//                                 value={EditData.Rate}\r\n//                                 id=\"txtRate\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Please Enter Rate\"\r\n//                                 autoComplete=\"off\"\r\n//                                 validate={{\r\n//                                   number: true,\r\n//                                   required: {\r\n//                                     value: true,\r\n//                                     errorMessage: \"Please Enter Rate\",\r\n//                                   },\r\n//                                 }}\r\n//                               />\r\n//                             </FormGroup>\r\n\r\n//                             <Col md=\"1\"> </Col>\r\n//                             <FormGroup className=\"mb-2 col col-sm-4 \">\r\n//                               <Label htmlFor=\"validationCustom01\">MRP</Label>\r\n//                               <AvField\r\n//                                 name=\"MRP\"\r\n//                                 id=\"txtMRP\"\r\n//                                 value={EditData.MRP}\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Please Enter MRP\"\r\n//                                 autoComplete=\"off\"\r\n//                                 validate={{\r\n//                                   number: true,\r\n//                                   required: {\r\n//                                     value: true,\r\n//                                     errorMessage: \"Please Enter MRP\",\r\n//                                   },\r\n//                                 }}\r\n//                               />\r\n//                             </FormGroup>\r\n//                           </Row>\r\n\r\n//                           <Row>\r\n//                             <FormGroup className=\"mb-3 col col-sm-4 \">\r\n//                               <Label htmlFor=\"validationCustom01\">Sequence</Label>\r\n//                               <AvField\r\n//                                 name=\"Sequence\"\r\n//                                 value={EditData.Sequence}\r\n//                                 id=\"txtSequence\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Please Enter Sequence\"\r\n//                                 autoComplete=\"off\"\r\n//                                 validate={{\r\n//                                   number: true,\r\n//                                   required: {\r\n//                                     value: true,\r\n//                                     errorMessage: \"Please Enter Sequence\",\r\n//                                   },\r\n//                                 }}\r\n//                               />\r\n//                             </FormGroup>\r\n\r\n//                             <Col md=\"1\"> </Col>\r\n//                             <FormGroup className=\"mb-2 col col-sm-6\">\r\n//                               <Row className=\"justify-content-md-left\">\r\n//                                 <Label\r\n//                                   htmlFor=\"horizontal-firstname-input\"\r\n//                                   className=\"col-sm-2 col-form-label mt-4\"\r\n//                                 >\r\n//                                   Active\r\n//                                 </Label>\r\n//                                 <Col md={2} style={{ marginTop: \"30px\" }}>\r\n//                                   {/* <AvInput\r\n//                                       checked={(EditData.ID === 0) ? false : EditData.IsActive}\r\n//                                       name=\"IsActive\"\r\n//                                       type=\"checkbox\"\r\n//                                       id=\"switch1\"\r\n//                                       switch=\"none\"\r\n//                                       defaultChecked />\r\n//                                     <Label className=\"me-1\" htmlFor=\"switch1\" data-on-label=\"Yes\" data-off-label=\"No\"></Label> */}\r\n//                                   <div\r\n//                                     className=\"form-check form-switch form-switch-md mb-3\"\r\n//                                     dir=\"ltr\"\r\n//                                   >\r\n//                                     <AvInput\r\n//                                       type=\"checkbox\"\r\n//                                       className=\"form-check-input\"\r\n//                                       id=\"customSwitchsizemd\"\r\n//                                       defaultChecked={EditData.isActive}\r\n//                                       name=\"isActive\"\r\n//                                     />\r\n//                                     <label\r\n//                                       className=\"form-check-label\"\r\n//                                       htmlFor=\"customSwitchsizemd\"\r\n//                                     ></label>\r\n//                                   </div>\r\n//                                 </Col>\r\n//                               </Row>\r\n//                             </FormGroup>\r\n//                           </Row>\r\n//                           <FormGroup >\r\n//                             <Row >\r\n//                               <Col sm={2}>\r\n//                                 <div>\r\n//                                   {\r\n//                                     pageMode === \"edit\" ?\r\n//                                       userPageAccessState.RoleAccess_IsEdit ?\r\n//                                         <button\r\n//                                           type=\"submit\"\r\n//                                           data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Module\"\r\n//                                           className=\"btn btn-success w-md\"\r\n//                                         >\r\n//                                           <i class=\"fas fa-edit me-2\"></i>Update\r\n//                                         </button>\r\n//                                         :\r\n//                                         <></>\r\n//                                       : (\r\n//                                         userPageAccessState.RoleAccess_IsSave ?\r\n//                                           <button\r\n//                                             type=\"submit\"\r\n//                                             data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Module\"\r\n//                                             className=\"btn btn-primary w-md\"\r\n//                                           > <i className=\"fas fa-save me-2\"></i> Save\r\n//                                           </button>\r\n//                                           :\r\n//                                           <></>\r\n//                                       )\r\n//                                   }\r\n//                                 </div>\r\n//                               </Col>\r\n//                             </Row>\r\n//                           </FormGroup >\r\n//                         </CardBody>\r\n//                       </Card>\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </AvForm>\r\n//               </CardBody>\r\n//             </Card>\r\n//           </Container>\r\n//         </div>\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n//   else {\r\n//     return (\r\n//       <React.Fragment></React.Fragment>\r\n//     )\r\n//   }\r\n// };\r\n// export default ItemsMaster;\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport MetaTags from \"react-meta-tags\"\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardText,\r\n    CardTitle,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Label,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    TabContent,\r\n    TabPane,\r\n} from \"reactstrap\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classnames from \"classnames\"\r\nimport BreadcrumbDemo from \"../../../components/Common/CmponentRelatedCommonFile/BreadcrumbDemo\"\r\nimport { AvField, AvForm, AvInput } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\nimport { fetchCompanyList } from \"../../../store/Administrator/CompanyRedux/actions\"\r\nimport { getBaseUnit_ForDropDown, get_CategoryTypes_ForDropDown, get_Category_ForDropDown, get_SubCategory_ForDropDown } from \"../../../store/Administrator/ItemsRedux/action\";\r\n\r\nconst ItemsMaster = () => {\r\n    const dispatch = useDispatch();\r\n    const [activeTab1, setactiveTab1] = useState(\"5\")\r\n    const [companyList_dropdown_Select, setCompanyList_dropdown_Select] = useState(\"\");\r\n\r\n    const [BaseUnit_dropdown_Select, setBaseUnit_dropdown_Select] = useState(\"\");\r\n    const [categoryType_dropdown_Select, setCategoryType_dropdown_Select] = useState([{ value: 0, label: \"text0\" },\r\n    { value: 1, label: \"text1\" }]);\r\n    const [category_dropdown_Select, setCategory_dropdown_Select] = useState([]);\r\n    const [subCategory_dropdown_Select, setsubCategory_dropdown_Select] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [multiCat, setMultiCat] = useState([{\r\n        CategoryType: { value: 0, label: \"test0\" },\r\n        Category: { value: 0, label: \"category test0\" },\r\n        SubCategory: { value: 0, label: \"subCategory test0\" }\r\n    },\r\n    ]);\r\n\r\n\r\n    const { companyList, BaseUnit, CategoryType, Category, SubCategory } = useSelector((state) => ({\r\n        companyList: state.Company.companyList,\r\n        BaseUnit: state.ItemMastersReducer.BaseUnit,\r\n        CategoryType: state.ItemMastersReducer.CategoryType,\r\n        Category: state.ItemMastersReducer.Category,\r\n        SubCategory: state.ItemMastersReducer.SubCategory,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCompanyList());\r\n        dispatch(getBaseUnit_ForDropDown());\r\n        dispatch(get_CategoryTypes_ForDropDown());\r\n        dispatch(get_Category_ForDropDown());\r\n        dispatch(get_SubCategory_ForDropDown());\r\n    }, [dispatch]);\r\n\r\n    const toggle1 = tab => {\r\n        if (activeTab1 !== tab) {\r\n            setactiveTab1(tab)\r\n        }\r\n    }\r\n\r\n    const Company_DropdownOptions = companyList.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function CompanyList_DropDown_handller(e) {\r\n        setCompanyList_dropdown_Select(e)\r\n    }\r\n\r\n    const BaseUnit_DropdownOptions = BaseUnit.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n    const CategoryType_DropdownOptions = CategoryType.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n\r\n    const Category_DropdownOptions = Category.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    const SubCategory_DropdownOptions = SubCategory.map((data) => ({\r\n        value: data.id,\r\n        label: data.Name\r\n    }));\r\n\r\n    function Common_DropDown_handller_tabe_2(event, key, type) {\r\n        var found = multiCat.find((i, k) => {\r\n            return (k === key)\r\n        })\r\n        let newSelectValue = ''\r\n\r\n\r\n        if (type.CategoryType) {\r\n            newSelectValue = {\r\n                CategoryType: found.CategoryType,\r\n                Category: event,\r\n                SubCategory: found.SubCategory\r\n            }\r\n        }\r\n        else if (type.Category) {\r\n            newSelectValue = {\r\n                CategoryType: event,\r\n                Category: found.Category,\r\n                SubCategory: found.SubCategory\r\n            }\r\n        } else {\r\n            newSelectValue = {\r\n                CategoryType: found.CategoryType,\r\n                Category: found.Category,\r\n                SubCategory: event\r\n            }\r\n        }\r\n\r\n        let newTabArr = multiCat.map((index, k) => {\r\n            return (k === key) ? newSelectValue : index\r\n        })\r\n        setMultiCat(newTabArr)\r\n    }\r\n\r\n    function CategoryType_DropDown_handller(event, key) {\r\n\r\n        var found = multiCat.find((i, k) => {\r\n            return (k === key)\r\n        })\r\n        let newSelectValue = {\r\n            CategoryType: event,\r\n            Category: found.Category,\r\n            SubCategory: found.SubCategory\r\n        }\r\n\r\n        let newTabArr = multiCat.map((index, k) => {\r\n            return (k === key) ? newSelectValue : index\r\n        })\r\n        setMultiCat(newTabArr)\r\n\r\n    }\r\n    function SubCategory_DropDown_handller(event, key) {\r\n\r\n        var found = multiCat.find((i, k) => {\r\n            return (k === key)\r\n        })\r\n        let newSelectValue = {\r\n            CategoryType: event,\r\n            Category: found.Category,\r\n            SubCategory: found.SubCategory\r\n        }\r\n\r\n        let newTabArr = multiCat.map((index, k) => {\r\n            return (k === key) ? newSelectValue : index\r\n        })\r\n        setMultiCat(newTabArr)\r\n\r\n    }\r\n\r\n    function BaseUnit_DropDown_handller(e) {\r\n        setBaseUnit_dropdown_Select(e)\r\n    }\r\n    console.log('multiCat', multiCat)\r\n\r\n\r\n\r\n    function MuliSelectTab2Handler(key) {\r\n        debugger\r\n\r\n        var newarr = [...multiCat, {\r\n            CategoryType: { value: 0, label: \"select\" },\r\n            Category: { value: 0, label: \"select\" },\r\n            SubCategory: { value: 0, label: \"select\" }\r\n        }]\r\n\r\n        setMultiCat(newarr)\r\n    }\r\n    function MulitDeletrTab_2Handler(key) {\r\n        debugger\r\n        var removeElseArrray = multiCat.filter((i, k) => {\r\n            return !(k === key)\r\n        })\r\n\r\n        setMultiCat(removeElseArrray)\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"page-content\">\r\n                <MetaTags>\r\n                    <title>Tabs & Accordions | Minia - React Admin & Dashboard Template</title>\r\n                </MetaTags>\r\n                <Container fluid>\r\n                    <AvForm >\r\n                        {/* Render Breadcrumbs */}\r\n                        <BreadcrumbDemo title=\"Components\" breadcrumbItem=\"Tabs & Accordions\" />\r\n                        <Row>\r\n\r\n\r\n                            <Col lg={12}>\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <CardTitle className=\"h4\">Justify Tabs</CardTitle>\r\n\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <Nav tabs className=\"nav-tabs-custom nav-justified\">\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"5\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"5\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Tab1</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"6\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"6\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Tab2</span>\r\n\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"7\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"7\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Tab3</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"8\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"8\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Tab4</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"9\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"9\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Tab5</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    className={classnames({\r\n                                                        active: activeTab1 === \"10\",\r\n                                                    })}\r\n                                                    onClick={() => {\r\n                                                        toggle1(\"10\")\r\n                                                    }}\r\n                                                >\r\n                                                    <span className=\"d-block d-sm-none\">\r\n                                                        <i className=\"fas fa-home\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"d-none d-sm-block\">Tab6</span>\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                        </Nav>\r\n\r\n                                        <TabContent activeTab={activeTab1} className=\"p-3 text-muted\">\r\n                                            <TabPane tabId=\"5\">\r\n                                                <Col md={12}  >\r\n                                                    <Card className=\"text-black\">\r\n                                                        <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                            <Row>\r\n\r\n                                                                <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom01\">Name</Label>\r\n                                                                    <AvField name=\"Name\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                        placeholder=\" Please Enter Name \"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        validate={{\r\n                                                                            required: { value: true, errorMessage: 'Please Enter Name' },\r\n                                                                        }}\r\n                                                                        onChange={(e) => { (setName(e.target.value)) }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom01\">ShortName</Label>\r\n                                                                    <AvField name=\"Name\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                        placeholder=\" Please Enter ShortName \"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        validate={{\r\n                                                                            required: { value: true, errorMessage: 'Please Enter Name' },\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\" col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom21\">Company</Label>\r\n                                                                    <Select\r\n                                                                        value={companyList_dropdown_Select}\r\n                                                                        options={Company_DropdownOptions}\r\n                                                                        onChange={(e) => { CompanyList_DropDown_handller(e) }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\" col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom21\">Base Unit</Label>\r\n                                                                    <Select\r\n                                                                        value={BaseUnit_dropdown_Select}\r\n                                                                        options={BaseUnit_DropdownOptions}\r\n                                                                        onChange={(e) => { BaseUnit_DropDown_handller(e) }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom01\">BarCode</Label>\r\n                                                                    <AvField name=\"Name\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                        placeholder=\" Please Enter BarCode \"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        validate={{\r\n                                                                            required: { value: true, errorMessage: 'Please Enter BarCode' },\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n\r\n                                                                <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                    <Label htmlFor=\"validationCustom01\">Sequence</Label>\r\n                                                                    <AvField name=\"Name\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                        placeholder=\" Please Enter Sequence \"\r\n                                                                        autoComplete=\"off\"\r\n                                                                        validate={{\r\n                                                                            required: { value: true, errorMessage: 'Please Enter Sequence' },\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                                <FormGroup className=\"mb-2 col col-sm-5\">\r\n                                                                    <Row className=\"justify-content-md-left\">\r\n                                                                        <Label htmlFor=\"horizontal-firstname-input\" className=\"col-sm-2 col-form-label\" >Active </Label>\r\n                                                                        <Col md={2} style={{ marginTop: '9px' }} >\r\n\r\n                                                                            <div className=\"form-check form-switch form-switch-md mb-3\" dir=\"ltr\">\r\n                                                                                <AvInput type=\"checkbox\" className=\"form-check-input\" id=\"customSwitchsizemd\"\r\n                                                                                    checked={\"\"}\r\n                                                                                    defaultChecked={true}\r\n                                                                                    name=\"isActive\"\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </FormGroup>\r\n                                                            </Row>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n\r\n                                            </TabPane>\r\n                                            <TabPane tabId=\"6\">\r\n                                                <Col md={12}  >\r\n                                                    <Card className=\"text-black\">\r\n                                                        <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n                                                            <Row>\r\n                                                                <h5>Item Name :<Label className=\"text-primary\" >{name}</Label></h5>\r\n                                                            </Row>\r\n                                                            {multiCat.map((index, key) => {\r\n\r\n                                                                return <Row>\r\n                                                                    <Col className=\" col col-11 \">\r\n                                                                        <Row>\r\n                                                                            <FormGroup className=\" col col-sm-4 \" >\r\n                                                                                <Label htmlFor=\"validationCustom21\">Category Type</Label>\r\n                                                                                <Select\r\n                                                                                    value={multiCat[key].CategoryType}\r\n                                                                                    options={CategoryType_DropdownOptions}\r\n                                                                                    onChange={(e) => { Common_DropDown_handller_tabe_2(e, key, \"CategoryType\") }}\r\n                                                                                />\r\n                                                                            </FormGroup>\r\n\r\n                                                                            <FormGroup className=\" col col-sm-4 \" >\r\n                                                                                <Label htmlFor=\"validationCustom21\">Category</Label>\r\n                                                                                <Select\r\n                                                                                    value={multiCat[key].Category}\r\n                                                                                    options={Category_DropdownOptions}\r\n                                                                                    onChange={(e) => { Common_DropDown_handller_tabe_2(e, key, \"Category\") }}\r\n                                                                                />\r\n                                                                            </FormGroup>\r\n\r\n                                                                            <FormGroup className=\" col col-sm-4 \" >\r\n                                                                                <Label htmlFor=\"validationCustom21\">Sub Category</Label>\r\n                                                                                <Select\r\n                                                                                    value={subCategory_dropdown_Select[key]}\r\n                                                                                    options={SubCategory_DropdownOptions}\r\n                                                                                    onChange={(e) => { Common_DropDown_handller_tabe_2(e, key, \"SubCategory\") }}\r\n                                                                                />\r\n                                                                            </FormGroup>\r\n                                                                        </Row>\r\n                                                                    </Col>\r\n                                                                    {(multiCat.length === key + 1) ?\r\n                                                                        <Col className=\"col col-1 mt-3\">\r\n                                                                            <Button className=\"btn btn-sm btn-light mt-3 \"\r\n                                                                                type=\"button\"\r\n                                                                                onClick={() => { MuliSelectTab2Handler(key) }} >\r\n                                                                                <i className=\"dripicons-plus\"></i></Button>\r\n                                                                            {/* \r\n\r\n                                                                                <i\r\n                                                                                className=\"dripicons-plus text-primary font-size-20 mt-3\"\r\n                                                                                onClick={() => {\r\n                                                                                    MuliSelectTab2Handler(key);\r\n                                                                                }}\r\n                                                                            ></i> */}\r\n                                                                        </Col>\r\n                                                                        : <Col className=\"col col-1 mt-3\">\r\n\r\n                                                                            <i\r\n                                                                                className=\"mdi mdi-trash-can d-block text-danger font-size-20 mt-3\"\r\n                                                                                onClick={() => {\r\n                                                                                    MulitDeletrTab_2Handler(key);\r\n                                                                                }}\r\n                                                                            ></i>\r\n\r\n                                                                        </Col>}\r\n                                                                </Row>\r\n\r\n\r\n                                                            })}\r\n\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n\r\n                                            </TabPane>\r\n                                            <TabPane tabId=\"7\">\r\n                                                <Row>\r\n                                                    <Col sm=\"12\">\r\n                                                        <CardText className=\"mb-0\">\r\n                                                            Etsy mixtape wayfarers, ethical wes anderson tofu\r\n                                                            before they sold out mcsweeney's organic lomo retro\r\n                                                            fanny pack lo-fi farm-to-table readymade. Messenger\r\n                                                            bag gentrify pitchfork tattooed craft beer, iphone\r\n                                                            skateboard locavore carles etsy salvia banksy hoodie\r\n                                                            helvetica. DIY synth PBR banksy irony. Leggings\r\n                                                            gentrify squid 8-bit cred pitchfork. Williamsburg\r\n                                                            banh mi whatever gluten-free, carles pitchfork\r\n                                                            biodiesel fixie etsy retro mlkshk vice blog.\r\n                                                            Scenester cred you probably haven't heard of them,\r\n                                                            vinyl craft beer blog stumptown. Pitchfork\r\n                                                            sustainable tofu synth chambray yr.\r\n                                                        </CardText>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </TabPane>\r\n\r\n                                            <TabPane tabId=\"8\">\r\n                                                <Row>\r\n                                                    <Col sm=\"12\">\r\n                                                        <CardText className=\"mb-0\">\r\n                                                            Trust fund seitan letterpress, keytar raw denim\r\n                                                            keffiyeh etsy art party before they sold out master\r\n                                                            cleanse gluten-free squid scenester freegan cosby\r\n                                                            sweater. Fanny pack portland seitan DIY, art party\r\n                                                            locavore wolf cliche high life echo park Austin.\r\n                                                            Cred vinyl keffiyeh DIY salvia PBR, banh mi before\r\n                                                            they sold out farm-to-table VHS viral locavore cosby\r\n                                                            sweater. Lomo wolf viral, mustache readymade\r\n                                                            thundercats keffiyeh craft beer marfa ethical. Wolf\r\n                                                            salvia freegan, sartorial keffiyeh echo park vegan.\r\n                                                        </CardText>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </TabPane>\r\n                                            <TabPane tabId=\"9\">\r\n                                                <Row>\r\n                                                    <Col sm=\"12\">\r\n                                                        <CardText className=\"mb-0\">\r\n                                                            Etsy mixtape wayfarers, ethical wes anderson tofu\r\n                                                            before they sold out mcsweeney's organic lomo retro\r\n                                                            fanny pack lo-fi farm-to-table readymade. Messenger\r\n                                                            bag gentrify pitchfork tattooed craft beer, iphone\r\n                                                            skateboard locavore carles etsy salvia banksy hoodie\r\n                                                            helvetica. DIY synth PBR banksy irony. Leggings\r\n                                                            gentrify squid 8-bit cred pitchfork. Williamsburg\r\n                                                            banh mi whatever gluten-free, carles pitchfork\r\n                                                            biodiesel fixie etsy retro mlkshk vice blog.\r\n                                                            Scenester cred you probably haven't heard of them,\r\n                                                            vinyl craft beer blog stumptown. Pitchfork\r\n                                                            sustainable tofu synth chambray yr.\r\n                                                        </CardText>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </TabPane>\r\n                                            <TabPane tabId=\"10\">\r\n                                                <Row>\r\n                                                    <Col md={12}  >\r\n                                                        <Card className=\"text-black\">\r\n                                                            <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                                <Row>\r\n                                                                    <h5>Item Name :<Label className=\"text-primary\" >{name}</Label></h5>\r\n                                                                </Row>\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">MRP</Label>\r\n                                                                        <AvField name=\"MRP\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                            placeholder=\" Please Enter MRP \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            validate={{\r\n                                                                                required: { value: true, errorMessage: 'Please Enter MRP ' },\r\n                                                                            }}\r\n                                                                            onChange={(e) => { (setName(e.target.value)) }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">GST</Label>\r\n                                                                        <AvField name=\"GST\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                            placeholder=\" Please Enter GST \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            validate={{\r\n                                                                                required: { value: true, errorMessage: 'Please Enter GST' },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n                                                                </Row>\r\n\r\n                                                                <Row>\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">HSN</Label>\r\n                                                                        <AvField name=\"HSN\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                            placeholder=\" Please Enter HSN \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            validate={{\r\n                                                                                required: { value: true, errorMessage: 'Please Enter HSN' },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup className=\"mb-3 col col-sm-4 \" >\r\n                                                                        <Label htmlFor=\"validationCustom01\">Margin</Label>\r\n                                                                        <AvField name=\"Margin\" value={\"\"} type=\"text\" id='txtName'\r\n                                                                            placeholder=\" Please Enter Margin \"\r\n                                                                            autoComplete=\"off\"\r\n                                                                            validate={{\r\n                                                                                required: { value: true, errorMessage: 'Please Enter Margin' },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </FormGroup>\r\n\r\n                                                                </Row>\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </TabPane>\r\n                                        </TabContent>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                    </AvForm>\r\n                </Container>\r\n            </div>\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default ItemsMaster;\r\n"],"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"},"metadata":{},"sourceType":"module"}