{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\components\\\\Common\\\\CustomAlert.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Modal, UncontrolledAlert } from \"reactstrap\";\nimport { AlertShow } from '../../store/Utilites/CustomAlertRedux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomAlert = () => {\n  // const history = useHistory();\n  // const dispatch = useDispatch();\n  // //redux Spinner State\n  // const { AlertData } = useSelector((state) => ({\n  //   AlertData: state.AlertReducer.AlertState,\n  // }))\n  // //  Alert Modal Show and Hide Controller\n  // function tog_standard() {\n  //   dispatch(AlertShow({ Status: false }));\n  //   removeBodyCss()\n  //   if (!AlertData.AfterResponseAction === false) {\n  //     let Action = AlertData.AfterResponseAction;\n  //     dispatch(Action());\n  //   };\n  // }\n  // // console.log(\"test1\",AlertData)\n  // // console.log(\"test1\",AlertData.hasOwnProperty('myProperty'))\n  // //remove Css when modul hide Mode \n  // function removeBodyCss() {\n  //   // document.body.classList.add(\"no_padding\")\n  // }\n  // // Success Alert Ok button Hnadller\n  // function Success_Ok_Button_Handeler() {\n  //   dispatch(AlertShow({ Status: false }));\n  //   removeBodyCss()\n  //   if (!AlertData.AfterResponseAction === false) {\n  //     let Action = AlertData.AfterResponseAction;\n  //     dispatch(Action());\n  //   };\n  //   if (!AlertData.RedirectPath === false) {\n  //     history.push({\n  //       pathname: AlertData.RedirectPath,\n  //       state: history.location.state\n  //     });\n  //   }\n  // }\n  // function Ok_handeler() {\n  //   dispatch(AlertShow({ Status: false }));\n  //   removeBodyCss()\n  // }\n  // //Permission Alert Ok button handller\n  // function Permission_Ok_handeler() {\n  //   dispatch(AlertShow({ Status: false }));\n  //   if (!AlertData.PermissionAction === false) {\n  //     let DeleteId = AlertData.ID\n  //     dispatch(AlertData.PermissionAction(DeleteId))\n  //   };\n  // }\n  // // All alert Cancel Button handler\n  // function cancel_handeler() {\n  //   tog_standard();\n  // }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomAlert;\nexport default CustomAlert;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomAlert\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useHistory","Modal","UncontrolledAlert","AlertShow","CustomAlert"],"sources":["D:/GitProjects/Manthan/src/components/Common/CustomAlert.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, UncontrolledAlert, } from \"reactstrap\";\r\nimport { AlertShow } from '../../store/Utilites/CustomAlertRedux/actions';\r\n\r\nconst CustomAlert = () => {\r\n\r\n  // const history = useHistory();\r\n  // const dispatch = useDispatch();\r\n\r\n  // //redux Spinner State\r\n  // const { AlertData } = useSelector((state) => ({\r\n  //   AlertData: state.AlertReducer.AlertState,\r\n  // }))\r\n\r\n  // //  Alert Modal Show and Hide Controller\r\n  // function tog_standard() {\r\n  //   dispatch(AlertShow({ Status: false }));\r\n  //   removeBodyCss()\r\n  //   if (!AlertData.AfterResponseAction === false) {\r\n  //     let Action = AlertData.AfterResponseAction;\r\n  //     dispatch(Action());\r\n  //   };\r\n  // }\r\n  // // console.log(\"test1\",AlertData)\r\n  // // console.log(\"test1\",AlertData.hasOwnProperty('myProperty'))\r\n\r\n  // //remove Css when modul hide Mode \r\n  // function removeBodyCss() {\r\n  //   // document.body.classList.add(\"no_padding\")\r\n  // }\r\n\r\n  // // Success Alert Ok button Hnadller\r\n  // function Success_Ok_Button_Handeler() {\r\n  //   dispatch(AlertShow({ Status: false }));\r\n  //   removeBodyCss()\r\n  //   if (!AlertData.AfterResponseAction === false) {\r\n  //     let Action = AlertData.AfterResponseAction;\r\n  //     dispatch(Action());\r\n  //   };\r\n  //   if (!AlertData.RedirectPath === false) {\r\n    \r\n  //     history.push({\r\n  //       pathname: AlertData.RedirectPath,\r\n  //       state: history.location.state\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // function Ok_handeler() {\r\n  //   dispatch(AlertShow({ Status: false }));\r\n  //   removeBodyCss()\r\n  // }\r\n\r\n  // //Permission Alert Ok button handller\r\n  // function Permission_Ok_handeler() {\r\n  //   dispatch(AlertShow({ Status: false }));\r\n  //   if (!AlertData.PermissionAction === false) {\r\n  //     let DeleteId = AlertData.ID\r\n  //     dispatch(AlertData.PermissionAction(DeleteId))\r\n  //   };\r\n  // }\r\n\r\n  // // All alert Cancel Button handler\r\n  // function cancel_handeler() {\r\n  //   tog_standard();\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Modal\r\n        isOpen={AlertData.Status}\r\n        toggle={() => { tog_standard() }}\r\n        // scrollable={true}\r\n      // centered={true} \r\n      // size={\"sm\"}\r\n      >\r\n        {(AlertData.Type === 1) &&\r\n          <UncontrolledAlert color=\"success\" className=\"px-6 mb-0 text-center\">\r\n            <i className=\"mdi mdi-check-all d-block display-6 mt-2 mb-3  text-success\"></i>\r\n            <p> <h5 className=\"text-success\">{AlertData.Message}</h5></p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary \"\r\n              onClick={() => {\r\n                Success_Ok_Button_Handeler()\r\n              }}\r\n            >\r\n              OK\r\n            </button>\r\n          </UncontrolledAlert>\r\n        }\r\n\r\n        {(AlertData.Type === 2) &&\r\n          <UncontrolledAlert color=\"danger\" className=\"px-4 mb-0 text-center\">\r\n            <i className=\"mdi mdi-block-helper d-block display-4 mt-2 mb-3  text-danger\"></i>\r\n            <p> <h5 className=\"text-danger\">{AlertData.Message}</h5></p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary \"\r\n              onClick={() => {\r\n                Ok_handeler()\r\n              }}\r\n            >\r\n              OK\r\n            </button>\r\n          </UncontrolledAlert>\r\n        }\r\n        {(AlertData.Type === 3) &&\r\n          <UncontrolledAlert color=\"info\" className=\"px-4 mb-0 text-center\">\r\n            <i className=\"mdi mdi-alert-circle-outline d-block display-4 mt-2 mb-3 text-info\"></i>\r\n            <p> <h5 className=\"text-\">{AlertData.Message}</h5></p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary \"\r\n              onClick={() => {\r\n                Ok_handeler()\r\n              }}\r\n            >\r\n              OK\r\n            </button>\r\n          </UncontrolledAlert>\r\n        }\r\n        {(AlertData.Type === 4) &&\r\n          <UncontrolledAlert color=\"warning\" className=\"px-4 mb-0 text-center\">\r\n            <i className=\"mdi mdi-alert-outline  d-block display-4 mt-2 mb-3 text-warning\"></i>\r\n            <p> <h5 className=\"text-\">{AlertData.Message}</h5></p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary \"\r\n              onClick={() => {\r\n                Ok_handeler()\r\n              }}\r\n            >\r\n              OK\r\n            </button>\r\n          </UncontrolledAlert>\r\n        }\r\n        {(AlertData.Type === 5) &&\r\n          <UncontrolledAlert color=\"info\" className=\"px-4 mb-0 text-center\">\r\n            <i className=\"mdi mdi-alert-circle-outline d-block display-6 mt-2 mb-3 text-info\"></i>\r\n            <p>\r\n              <h5>{AlertData.Message}</h5></p>\r\n            <div className=\"d-flex flex-wrap gap-2 \" style={{ float: \"right\" }}>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={() => {\r\n                  Permission_Ok_handeler()\r\n                }}\r\n              >\r\n                Yes\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger w-xm waves-effect waves-light\"\r\n                onClick={() => {\r\n                  cancel_handeler()\r\n                }}\r\n              >\r\n                No\r\n              </button>\r\n            </div>\r\n          </UncontrolledAlert>\r\n        }\r\n      </Modal> */}\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default CustomAlert\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,EAAgBC,iBAAhB,QAA0C,YAA1C;AACA,SAASC,SAAT,QAA0B,+CAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAExB;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA;IAAA;IAAA;EAAA,QADF;AAoGD,CAnKD;;KAAMA,W;AAoKN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}