{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\CompanyPages\\\\CompanyModule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Card, CardBody, Col, Container, Row, Label, CardHeader, FormGroup, Input } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport AvField from \"availity-reactstrap-validation/lib/AvField\";\nimport { editCompanyIDSuccess, PostCompanySubmit, PostCompanySubmitSuccess, updateCompanyID, getCompanyGroup, updateCompanyIDSuccess } from \"../../../store/Administrator/CompanyRedux/actions\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { AlertState, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\nimport { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\nimport { comAddPageFieldFunc, formValChange, formValid, onChangeSelect, onChangeText } from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\nimport { COMPANY_lIST } from \"../../../routes/route_url\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyModule = props => {\n  _s();\n\n  const formRef = useRef(null);\n  const dispatch = useDispatch();\n  const history = useHistory(); //*** \"isEditdata get all data from ModuleID for Binding  Form controls\n\n  const [EditData, setEditData] = useState({});\n  const [modalCss, setModalCss] = useState(false);\n  const [pageMode, setPageMode] = useState(\"save\");\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [CompanyGroupselect, setCompanyGroup] = useState(\"\"); //Access redux store Data /  'save_ModuleSuccess' action data\n\n  const {\n    postMsg,\n    updateMsg,\n    userAccess,\n    pageField\n  } = useSelector(state => ({\n    postMsg: state.Company.postMsg,\n    updateMsg: state.Company.updateMessage,\n    userAccess: state.Login.RoleAccessUpdateData,\n    pageField: state.CommonPageFieldReducer.pageField\n  }));\n  {\n    /** Dyanamic Page access state and OnChange function */\n  }\n  const [state, setState] = useState({\n    values: {\n      id: \"\",\n      Name: \"\",\n      Address: \"\",\n      GSTIN: \"\",\n      PhoneNo: \"\",\n      CompanyAbbreviation: \"\",\n      EmailID: \"\",\n      CompanyGroup: \"\"\n    },\n    fieldLabel: {\n      Name: \"\",\n      Address: \"\",\n      GSTIN: \"\",\n      PhoneNo: \"\",\n      CompanyAbbreviation: \"\",\n      EmailID: \"\",\n      CompanyGroup: \"\"\n    },\n    isError: {\n      Name: \"\",\n      Address: \"\",\n      GSTIN: \"\",\n      PhoneNo: \"\",\n      CompanyAbbreviation: \"\",\n      EmailID: \"\",\n      CompanyGroup: \"\"\n    },\n    hasValid: {\n      Name: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      Address: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      GSTIN: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      PhoneNo: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      CompanyAbbreviation: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      EmailID: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      },\n      CompanyGroup: {\n        regExp: '',\n        inValidMsg: \"\",\n        valid: false\n      }\n    },\n    required: {}\n  });\n  const values = { ...state.values\n  };\n  const {\n    isError\n  } = state;\n  const {\n    fieldLabel\n  } = state;\n  useEffect(() => {\n    dispatch(commonPageFieldSuccess(null));\n    dispatch(commonPageField(2));\n    dispatch(getCompanyGroup());\n  }, [dispatch]);\n  const location = { ...history.location\n  };\n  const hasShowloction = location.hasOwnProperty(\"editValue\");\n  const hasShowModal = props.hasOwnProperty(\"editValue\"); // userAccess useEffect\n\n  useEffect(() => {\n    let userAcc = null;\n    let locationPath = location.pathname;\n\n    if (hasShowModal) {\n      locationPath = props.masterPath;\n    }\n\n    ;\n    userAcc = userAccess.find(inx => {\n      return `/${inx.ActualPagePath}` === locationPath;\n    });\n\n    if (userAcc) {\n      setUserPageAccessState(userAcc);\n    }\n\n    ;\n  }, [userAccess]);\n  useEffect(() => {\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\n    if (hasShowloction || hasShowModal) {\n      let hasEditVal = null;\n\n      if (hasShowloction) {\n        setPageMode(location.pageMode);\n        hasEditVal = location.editValue;\n      } else if (hasShowModal) {\n        hasEditVal = props.editValue;\n        setPageMode(props.pageMode);\n        setModalCss(true);\n      }\n\n      if (hasEditVal) {\n        const {\n          id,\n          Name,\n          Address,\n          GSTIN,\n          PhoneNo,\n          CompanyAbbreviation,\n          EmailID,\n          CompanyGroup,\n          CompanyGroupName\n        } = hasEditVal;\n        const {\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        } = { ...state\n        };\n        hasValid.Name.valid = true;\n        hasValid.Address.valid = true;\n        hasValid.GSTIN.valid = true;\n        hasValid.PhoneNo.valid = true;\n        hasValid.CompanyAbbreviation.valid = true;\n        hasValid.EmailID.valid = true;\n        hasValid.CompanyGroup.valid = true;\n        values.id = id;\n        values.Name = Name;\n        values.Address = Address;\n        values.GSTIN = GSTIN;\n        values.PhoneNo = PhoneNo;\n        values.CompanyAbbreviation = CompanyAbbreviation;\n        values.EmailID = EmailID;\n        values.CompanyGroup = {\n          label: CompanyGroupName,\n          value: CompanyGroup\n        };\n        setState({\n          values,\n          fieldLabel,\n          hasValid,\n          required,\n          isError\n        });\n        dispatch(BreadcrumbShow(hasEditVal.Name));\n      }\n\n      dispatch(editCompanyIDSuccess({\n        Status: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (postMsg.Status === true && postMsg.StatusCode === 200 && !(pageMode === \"dropdownAdd\")) {\n      dispatch(PostCompanySubmitSuccess({\n        Status: false\n      }));\n      setCompanyGroup('');\n      formRef.current.reset();\n\n      if (pageMode === \"other\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: postMsg.Message,\n          RedirectPath: COMPANY_lIST\n        }));\n      }\n    } else if (postMsg.Status === true && !(pageMode === \"dropdownAdd\")) {\n      dispatch(PostCompanySubmitSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(postMessage.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [postMsg]);\n  useEffect(() => {\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\n      history.push({\n        pathname: COMPANY_lIST\n      });\n    } else if (updateMsg.Status === true && !modalCss) {\n      dispatch(updateCompanyIDSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: JSON.stringify(updateMsg.Message)\n      }));\n    }\n  }, [updateMsg, modalCss]);\n  const {\n    CompanyGroup\n  } = useSelector(state => ({\n    CompanyGroup: state.Company.CompanyGroup\n  }));\n  const CompanyGroupValues = CompanyGroup.map(Data => ({\n    value: Data.id,\n    label: Data.Name\n  }));\n  useEffect(() => {\n    if (pageField) {\n      const fieldArr = pageField.PageFieldMaster;\n      comAddPageFieldFunc({\n        state,\n        setState,\n        fieldArr\n      });\n    }\n  }, [pageField]);\n\n  const formSubmitHandler = event => {\n    debugger;\n    event.preventDefault();\n\n    if (formValid(state, setState)) {\n      const jsonBody = JSON.stringify({\n        Name: values.Name,\n        Address: values.Address,\n        GSTIN: values.GSTIN,\n        PhoneNo: values.PhoneNo,\n        CompanyAbbreviation: values.CompanyAbbreviation,\n        EmailID: values.EmailID,\n        CompanyGroup: values.CompanyGroup.value,\n        CreatedBy: 1,\n        UpdatedBy: 1\n      });\n\n      if (pageMode === \"edit\") {\n        dispatch(updateCompanyID(jsonBody, values.id));\n        console.log(\"Update jsonBody\", jsonBody);\n      } else {\n        dispatch(PostCompanySubmit(jsonBody));\n        console.log(\"post jsonBody\", jsonBody);\n      }\n    }\n  }; // //'Save' And 'Update' Button Handller\n  // const handleValidSubmit = (event, values) => {\n  //   debugger\n  //   const jsonBody = JSON.stringify({\n  //     Name: values.Name,\n  //     Address: values.Address,\n  //     GSTIN: values.GSTIN,\n  //     PhoneNo: values.PhoneNo,\n  //     CompanyAbbreviation: values.CompanyAbbreviation,\n  //     EmailID: values.EmailID,\n  //     CompanyGroup: values.CompanyGroupselect,\n  //     CreatedBy: 1,\n  //     UpdatedBy: 1,\n  //   });\n  //   if (pageMode === 'edit') {\n  //     dispatch(updateCompanyID(jsonBody, EditData.id));\n  //     console.log(\"Update jsonBody\", jsonBody)\n  //   }\n  //   else {\n  //     dispatch(PostCompanySubmit(jsonBody));\n  //     console.log(\"Post jsonBody\", jsonBody)\n  //   }\n  // };\n\n\n  var IsEditMode_Css = '';\n\n  if (modalCss || pageMode === \"dropdownAdd\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: [userPageAccessState.PageHeading, \" | FoodERP-React FrontEnd\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n          breadcrumbItem: userPageAccessState.PageHeading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"text-black\",\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  className: \"card-header   text-black\",\n                  style: {\n                    backgroundColor: \"#dddddd\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"card-title text-black\",\n                    children: userPageAccessState.PageDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-title-desc text-black\",\n                    children: userPageAccessState.PageDescriptionDetails\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: formSubmitHandler,\n                    ref: formRef,\n                    noValidate: true,\n                    children: [/*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.Name, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 368,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"Name\",\n                              id: \"txtName\",\n                              value: values.Name,\n                              type: \"text\",\n                              className: isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter Name\",\n                              autoComplete: \"off\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                                dispatch(BreadcrumbShow(event.target.value));\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 369,\n                              columnNumber: 31\n                            }, this), isError.Name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 383,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 367,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"1\",\n                            children: \"  \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.Address, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 389,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"Address\",\n                              value: values.Address,\n                              type: \"text\",\n                              className: isError.Address.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter Address\",\n                              autoComplete: \"off\",\n                              onChange: event => onChangeText({\n                                event,\n                                state,\n                                setState\n                              })\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 390,\n                              columnNumber: 31\n                            }, this), isError.Address.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.Address\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 400,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 388,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 365,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          className: \"mb-1\",\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.PhoneNo, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 409,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"PhoneNo\",\n                              value: values.PhoneNo,\n                              type: \"text\",\n                              className: isError.PhoneNo.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter PhoneNo\",\n                              autoComplete: \"off\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 410,\n                              columnNumber: 31\n                            }, this), isError.PhoneNo.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.PhoneNo\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 422,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 408,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"1\",\n                            children: \"  \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 426,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.EmailID, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 428,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"EmailID\",\n                              value: values.EmailID,\n                              type: \"text\",\n                              className: isError.EmailID.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter EmailID\",\n                              autoComplete: \"off\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 429,\n                              columnNumber: 31\n                            }, this), isError.EmailID.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.EmailID\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 441,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 427,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 406,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 364,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card, {\n                      className: \"mt-n2\",\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        style: {\n                          backgroundColor: \"whitesmoke\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.GSTIN, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 453,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"GSTIN\",\n                              value: values.GSTIN,\n                              type: \"text\",\n                              className: isError.GSTIN.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter GSTIN\",\n                              autoComplete: \"off\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 454,\n                              columnNumber: 31\n                            }, this), isError.GSTIN.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.GSTIN\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 466,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 452,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"1\",\n                            children: \"  \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 470,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                            className: \"mb-2 col col-sm-4 \",\n                            children: [/*#__PURE__*/_jsxDEV(Label, {\n                              htmlFor: \"validationCustom01\",\n                              children: [fieldLabel.CompanyAbbreviation, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 472,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(Input, {\n                              name: \"CompanyAbbreviation\",\n                              value: values.CompanyAbbreviation,\n                              type: \"text\",\n                              className: isError.CompanyAbbreviation.length > 0 ? \"is-invalid form-control\" : \"form-control\",\n                              placeholder: \"Please Enter CompanyAbbreviation\",\n                              autoComplete: \"off\",\n                              onChange: event => {\n                                onChangeText({\n                                  event,\n                                  state,\n                                  setState\n                                });\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 473,\n                              columnNumber: 31\n                            }, this), isError.CompanyAbbreviation.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"invalid-feedback\",\n                              children: isError.CompanyAbbreviation\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 485,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 471,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 451,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          className: \" mb-3\",\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              className: \"mb-3 \",\n                              children: [/*#__PURE__*/_jsxDEV(Label, {\n                                htmlFor: \"validationCustom01\",\n                                children: [\" \", fieldLabel.CompanyGroup, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 495,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                                name: \"CategoryTypeName\",\n                                value: values.CompanyGroup //   value={{label:\"abc\",value:1}}//default value set\n                                ,\n                                isSearchable: false,\n                                className: \"react-dropdown\",\n                                classNamePrefix: \"dropdown\",\n                                options: CompanyGroupValues,\n                                onChange: (v, e) => onChangeSelect({\n                                  e,\n                                  v,\n                                  state,\n                                  setState\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 496,\n                                columnNumber: 33\n                              }, this), isError.CompanyGroup.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"text-danger f-8\",\n                                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                                  children: isError.CompanyGroup\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 507,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 507,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 494,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 492,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 490,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(Col, {\n                              sm: 2,\n                              children: SaveButton({\n                                pageMode,\n                                userPageAccessState,\n                                module: \"Company\"\n                              })\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 516,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 515,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 514,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CompanyModule, \"rh0CrL3aB0GEELiTFu0KBcbb2FU=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = CompanyModule;\nexport default CompanyModule;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyModule\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardBody","Col","Container","Row","Label","CardHeader","FormGroup","Input","Select","AvForm","AvInput","useDispatch","useSelector","Breadcrumb","AvField","editCompanyIDSuccess","PostCompanySubmit","PostCompanySubmitSuccess","updateCompanyID","getCompanyGroup","updateCompanyIDSuccess","MetaTags","AlertState","commonPageField","commonPageFieldSuccess","BreadcrumbShow","useHistory","SaveButton","comAddPageFieldFunc","formValChange","formValid","onChangeSelect","onChangeText","COMPANY_lIST","CompanyModule","props","formRef","dispatch","history","EditData","setEditData","modalCss","setModalCss","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","CompanyGroupselect","setCompanyGroup","postMsg","updateMsg","userAccess","pageField","state","Company","updateMessage","Login","RoleAccessUpdateData","CommonPageFieldReducer","setState","values","id","Name","Address","GSTIN","PhoneNo","CompanyAbbreviation","EmailID","CompanyGroup","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","hasEditVal","editValue","CompanyGroupName","label","value","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","push","CompanyGroupValues","map","Data","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","CreatedBy","UpdatedBy","console","log","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","v","e","module"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/CompanyPages/CompanyModule.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Label,\r\n  CardHeader,\r\n  FormGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport AvField from \"availity-reactstrap-validation/lib/AvField\";\r\nimport {\r\n  editCompanyIDSuccess,\r\n  PostCompanySubmit,\r\n  PostCompanySubmitSuccess,\r\n  updateCompanyID,\r\n  getCompanyGroup,\r\n  updateCompanyIDSuccess\r\n} from \"../../../store/Administrator/CompanyRedux/actions\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState, commonPageField, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SaveButton } from \"../../../components/CommonSaveButton\";\r\nimport {\r\n  comAddPageFieldFunc,\r\n  formValChange,\r\n  formValid,\r\n  onChangeSelect,\r\n  onChangeText,\r\n\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\nimport { COMPANY_lIST } from \"../../../routes/route_url\";\r\n\r\nconst CompanyModule = (props) => {\r\n\r\n  const formRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n\r\n  //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n\r\n  const [EditData, setEditData] = useState({});\r\n  const [modalCss, setModalCss] = useState(false);\r\n  const [pageMode, setPageMode] = useState(\"save\");\r\n  const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n  const [CompanyGroupselect, setCompanyGroup] = useState(\"\");\r\n\r\n  //Access redux store Data /  'save_ModuleSuccess' action data\r\n  const { postMsg,updateMsg, userAccess, pageField } = useSelector((state) => ({\r\n    postMsg: state.Company.postMsg,\r\n    updateMsg: state.Company.updateMessage,\r\n    userAccess: state.Login.RoleAccessUpdateData,\r\n    pageField: state.CommonPageFieldReducer.pageField\r\n  }));\r\n\r\n  {/** Dyanamic Page access state and OnChange function */ }\r\n\r\n  const [state, setState] = useState({\r\n    values: {\r\n      id: \"\",\r\n      Name: \"\",\r\n      Address: \"\",\r\n      GSTIN: \"\",\r\n      PhoneNo: \"\",\r\n      CompanyAbbreviation: \"\",\r\n      EmailID: \"\",\r\n      CompanyGroup: \"\"\r\n\r\n    },\r\n    fieldLabel: {\r\n      Name: \"\",\r\n      Address: \"\",\r\n      GSTIN: \"\",\r\n      PhoneNo: \"\",\r\n      CompanyAbbreviation: \"\",\r\n      EmailID: \"\",\r\n      CompanyGroup: \"\"\r\n\r\n    },\r\n\r\n    isError: {\r\n      Name: \"\",\r\n      Address: \"\",\r\n      GSTIN: \"\",\r\n      PhoneNo: \"\",\r\n      CompanyAbbreviation: \"\",\r\n      EmailID: \"\",\r\n      CompanyGroup: \"\",\r\n\r\n    },\r\n\r\n    hasValid: {\r\n      Name: {\r\n        regExp: '',\r\n        inValidMsg: \"\",\r\n        valid: false\r\n      },\r\n      Address: {\r\n        regExp: '',\r\n        inValidMsg: \"\",\r\n        valid: false\r\n      },\r\n      GSTIN: {\r\n        regExp: '',\r\n        inValidMsg: \"\",\r\n        valid: false\r\n      },\r\n      PhoneNo: {\r\n        regExp: '',\r\n        inValidMsg: \"\",\r\n        valid: false\r\n      },\r\n      CompanyAbbreviation: {\r\n        regExp: '',\r\n        inValidMsg: \"\",\r\n        valid: false\r\n      },\r\n      EmailID: {\r\n        regExp: '',\r\n        inValidMsg: \"\",\r\n        valid: false\r\n      },\r\n      CompanyGroup: {\r\n        regExp: '',\r\n        inValidMsg: \"\",\r\n        valid: false\r\n      },\r\n    },\r\n    required: {\r\n\r\n    }\r\n  })\r\n\r\n  const values = { ...state.values }\r\n  const { isError } = state;\r\n  const { fieldLabel } = state;\r\n\r\n  useEffect(() => {\r\n    dispatch(commonPageFieldSuccess(null));\r\n    dispatch(commonPageField(2))\r\n    dispatch(getCompanyGroup());\r\n  }, [dispatch]);\r\n\r\n  const location = { ...history.location }\r\n  const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n  const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n  // userAccess useEffect\r\n  useEffect(() => {\r\n    let userAcc = null;\r\n    let locationPath = location.pathname;\r\n\r\n    if (hasShowModal) {\r\n      locationPath = props.masterPath;\r\n    };\r\n\r\n    userAcc = userAccess.find((inx) => {\r\n      return (`/${inx.ActualPagePath}` === locationPath)\r\n    })\r\n\r\n    if (userAcc) {\r\n      setUserPageAccessState(userAcc)\r\n    };\r\n  }, [userAccess])\r\n\r\n  useEffect(() => {\r\n\r\n    // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n    if ((hasShowloction || hasShowModal)) {\r\n\r\n      let hasEditVal = null\r\n      if (hasShowloction) {\r\n        setPageMode(location.pageMode)\r\n        hasEditVal = location.editValue\r\n      }\r\n      else if (hasShowModal) {\r\n        hasEditVal = props.editValue\r\n        setPageMode(props.pageMode)\r\n        setModalCss(true)\r\n      }\r\n\r\n      if (hasEditVal) {\r\n        const { id, Name, Address, GSTIN, PhoneNo, CompanyAbbreviation, EmailID, CompanyGroup ,CompanyGroupName} = hasEditVal\r\n        const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n\r\n        hasValid.Name.valid = true;\r\n        hasValid.Address.valid = true;\r\n        hasValid.GSTIN.valid = true;\r\n        hasValid.PhoneNo.valid = true;\r\n        hasValid.CompanyAbbreviation.valid = true;\r\n        hasValid.EmailID.valid = true;\r\n        hasValid.CompanyGroup.valid = true;\r\n\r\n        values.id = id\r\n        values.Name = Name\r\n        values.Address = Address;\r\n        values.GSTIN = GSTIN;\r\n        values.PhoneNo = PhoneNo;\r\n        values.CompanyAbbreviation = CompanyAbbreviation;\r\n        values.EmailID = EmailID;\r\n        values.CompanyGroup = { label: CompanyGroupName, value: CompanyGroup };\r\n        setState({ values, fieldLabel, hasValid, required, isError })\r\n        dispatch(BreadcrumbShow(hasEditVal.Name))\r\n      }\r\n      dispatch(editCompanyIDSuccess({ Status: false }))\r\n    }\r\n\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if ((postMsg.Status === true) && (postMsg.StatusCode === 200) && !(pageMode === \"dropdownAdd\")) {\r\n      dispatch(PostCompanySubmitSuccess({ Status: false }))\r\n      setCompanyGroup('')\r\n      formRef.current.reset();\r\n      if (pageMode === \"other\") {\r\n        dispatch(AlertState({\r\n          Type: 1,\r\n          Status: true,\r\n          Message: postMsg.Message,\r\n        }))\r\n      }\r\n      else {\r\n        dispatch(AlertState({\r\n          Type: 1,\r\n          Status: true,\r\n          Message: postMsg.Message,\r\n          RedirectPath: COMPANY_lIST,\r\n        }))\r\n      }\r\n    }\r\n    else if ((postMsg.Status === true) && !(pageMode === \"dropdownAdd\")) {\r\n      dispatch(PostCompanySubmitSuccess({ Status: false }))\r\n      dispatch(AlertState({\r\n        Type: 4,\r\n        Status: true,\r\n        Message: JSON.stringify(postMessage.Message),\r\n        RedirectPath: false,\r\n        AfterResponseAction: false\r\n      }));\r\n    }\r\n  }, [postMsg])\r\n\r\n  useEffect(() => {\r\n    if (updateMsg.Status === true && updateMsg.StatusCode === 200 && !modalCss) {\r\n        history.push({\r\n            pathname: COMPANY_lIST,\r\n        })\r\n    } else if (updateMsg.Status === true && !modalCss) {\r\n        dispatch(updateCompanyIDSuccess({ Status: false }));\r\n        dispatch(\r\n            AlertState({\r\n                Type: 3,\r\n                Status: true,\r\n                Message: JSON.stringify(updateMsg.Message),\r\n            })\r\n        );\r\n    }\r\n}, [updateMsg, modalCss]);\r\n\r\n  const { CompanyGroup } = useSelector((state) => ({\r\n    CompanyGroup: state.Company.CompanyGroup\r\n  }));\r\n\r\n  const CompanyGroupValues = CompanyGroup.map((Data) => ({\r\n    value: Data.id,\r\n    label: Data.Name\r\n  }));\r\n\r\n  useEffect(() => {\r\n\r\n    if (pageField) {\r\n      const fieldArr = pageField.PageFieldMaster\r\n      comAddPageFieldFunc({ state, setState, fieldArr })\r\n    }\r\n  }, [pageField])\r\n\r\n  const formSubmitHandler = (event) => {\r\n    debugger\r\n    event.preventDefault();\r\n    if (formValid(state, setState)) {\r\n      const jsonBody = JSON.stringify({\r\n        Name: values.Name,\r\n        Address: values.Address,\r\n        GSTIN: values.GSTIN,\r\n        PhoneNo: values.PhoneNo,\r\n        CompanyAbbreviation: values.CompanyAbbreviation,\r\n        EmailID: values.EmailID,\r\n        CompanyGroup: values.CompanyGroup.value,\r\n        CreatedBy: 1,\r\n        UpdatedBy: 1,\r\n      });\r\n\r\n      if (pageMode === \"edit\") {\r\n        dispatch(updateCompanyID(jsonBody, values.id,));\r\n        console.log(\"Update jsonBody\", jsonBody)\r\n      }\r\n      else {\r\n        dispatch(PostCompanySubmit(jsonBody));\r\n        console.log(\"post jsonBody\", jsonBody)\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  // //'Save' And 'Update' Button Handller\r\n  // const handleValidSubmit = (event, values) => {\r\n  //   debugger\r\n  //   const jsonBody = JSON.stringify({\r\n  //     Name: values.Name,\r\n  //     Address: values.Address,\r\n  //     GSTIN: values.GSTIN,\r\n  //     PhoneNo: values.PhoneNo,\r\n  //     CompanyAbbreviation: values.CompanyAbbreviation,\r\n  //     EmailID: values.EmailID,\r\n  //     CompanyGroup: values.CompanyGroupselect,\r\n  //     CreatedBy: 1,\r\n  //     UpdatedBy: 1,\r\n  //   });\r\n\r\n  //   if (pageMode === 'edit') {\r\n  //     dispatch(updateCompanyID(jsonBody, EditData.id));\r\n  //     console.log(\"Update jsonBody\", jsonBody)\r\n  //   }\r\n\r\n  //   else {\r\n  //     dispatch(PostCompanySubmit(jsonBody));\r\n  //     console.log(\"Post jsonBody\", jsonBody)\r\n  //   }\r\n  // };\r\n\r\n  var IsEditMode_Css = ''\r\n  if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };\r\n\r\n  if (!(userPageAccessState === '')) {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={\"page-content\"} style={{ marginTop: IsEditMode_Css }} >\r\n          <MetaTags>\r\n            <title>{userPageAccessState.PageHeading} | FoodERP-React FrontEnd</title>\r\n          </MetaTags>\r\n          <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n          <Container fluid>\r\n            <Row>\r\n              <Col lg={12}>\r\n                <Card className=\"text-black\" >\r\n                  <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                    <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                    <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                  </CardHeader>\r\n\r\n                  <CardBody>\r\n                    <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n                      <Card >\r\n                        <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                          <Row>\r\n\r\n                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                              <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n                              <Input\r\n                                name=\"Name\"\r\n                                id=\"txtName\"\r\n                                value={values.Name}\r\n                                type=\"text\"\r\n                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                placeholder=\"Please Enter Name\"\r\n                                autoComplete='off'\r\n                                onChange={(event) => {\r\n                                  onChangeText({ event, state, setState })\r\n                                  dispatch(BreadcrumbShow(event.target.value))\r\n                                }}\r\n                              />\r\n                              {isError.Name.length > 0 && (\r\n                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                              )}\r\n                            </FormGroup>\r\n\r\n                            <Col md=\"1\">  </Col>\r\n                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                              <Label htmlFor=\"validationCustom01\">{fieldLabel.Address} </Label>\r\n                              <Input\r\n                                name=\"Address\"\r\n                                value={values.Address}\r\n                                type=\"text\"\r\n                                className={isError.Address.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                placeholder=\"Please Enter Address\"\r\n                                autoComplete='off'\r\n                                onChange={(event) => onChangeText({ event, state, setState })}\r\n                              />\r\n                              {isError.Address.length > 0 && (\r\n                                <span className=\"invalid-feedback\">{isError.Address}</span>\r\n                              )}\r\n                            </FormGroup>\r\n\r\n                          </Row>\r\n\r\n                          <Row className=\"mb-1\">\r\n\r\n                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                              <Label htmlFor=\"validationCustom01\">{fieldLabel.PhoneNo} </Label>\r\n                              <Input\r\n                                name=\"PhoneNo\"\r\n                                value={values.PhoneNo}\r\n                                type=\"text\"\r\n                                className={isError.PhoneNo.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                placeholder=\"Please Enter PhoneNo\"\r\n                                autoComplete='off'\r\n                                onChange={(event) => {\r\n                                  onChangeText({ event, state, setState })\r\n                                }}\r\n                              />\r\n                              {isError.PhoneNo.length > 0 && (\r\n                                <span className=\"invalid-feedback\">{isError.PhoneNo}</span>\r\n                              )}\r\n                            </FormGroup>\r\n\r\n                            <Col md=\"1\">  </Col>\r\n                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                              <Label htmlFor=\"validationCustom01\">{fieldLabel.EmailID} </Label>\r\n                              <Input\r\n                                name=\"EmailID\"\r\n                                value={values.EmailID}\r\n                                type=\"text\"\r\n                                className={isError.EmailID.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                placeholder=\"Please Enter EmailID\"\r\n                                autoComplete='off'\r\n                                onChange={(event) => {\r\n                                  onChangeText({ event, state, setState })\r\n                                }}\r\n                              />\r\n                              {isError.EmailID.length > 0 && (\r\n                                <span className=\"invalid-feedback\">{isError.EmailID}</span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Card>\r\n\r\n                      <Card className=\"mt-n2\">\r\n                        <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n\r\n                          <Row>\r\n                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                              <Label htmlFor=\"validationCustom01\">{fieldLabel.GSTIN} </Label>\r\n                              <Input\r\n                                name=\"GSTIN\"\r\n                                value={values.GSTIN}\r\n                                type=\"text\"\r\n                                className={isError.GSTIN.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                placeholder=\"Please Enter GSTIN\"\r\n                                autoComplete='off'\r\n                                onChange={(event) => {\r\n                                  onChangeText({ event, state, setState })\r\n                                }}\r\n                              />\r\n                              {isError.GSTIN.length > 0 && (\r\n                                <span className=\"invalid-feedback\">{isError.GSTIN}</span>\r\n                              )}\r\n                            </FormGroup>\r\n\r\n                            <Col md=\"1\">  </Col>\r\n                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                              <Label htmlFor=\"validationCustom01\">{fieldLabel.CompanyAbbreviation} </Label>\r\n                              <Input\r\n                                name=\"CompanyAbbreviation\"\r\n                                value={values.CompanyAbbreviation}\r\n                                type=\"text\"\r\n                                className={isError.CompanyAbbreviation.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                placeholder=\"Please Enter CompanyAbbreviation\"\r\n                                autoComplete='off'\r\n                                onChange={(event) => {\r\n                                  onChangeText({ event, state, setState })\r\n                                }}\r\n                              />\r\n                              {isError.CompanyAbbreviation.length > 0 && (\r\n                                <span className=\"invalid-feedback\">{isError.CompanyAbbreviation}</span>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Row>\r\n\r\n                          <Row className=\" mb-3\">\r\n\r\n                            <Col md=\"4\">\r\n\r\n                              <FormGroup className=\"mb-3 \">\r\n                                <Label htmlFor=\"validationCustom01\"> {fieldLabel.CompanyGroup} </Label>\r\n                                <Select\r\n                                  name=\"CategoryTypeName\"\r\n                                  value={values.CompanyGroup}\r\n                                  //   value={{label:\"abc\",value:1}}//default value set\r\n                                  isSearchable={false}\r\n                                  className=\"react-dropdown\"\r\n                                  classNamePrefix=\"dropdown\"\r\n                                  options={CompanyGroupValues}\r\n                                  onChange={(v, e) => onChangeSelect({ e, v, state, setState })}\r\n                                />\r\n                                {isError.CompanyGroup.length > 0 && (\r\n                                  <span className=\"text-danger f-8\"><small>{isError.CompanyGroup}</small></span>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n\r\n\r\n                          <FormGroup >\r\n                            <Row >\r\n                              <Col sm={2}>\r\n                                {SaveButton({ pageMode, userPageAccessState, module: \"Company\" })}\r\n                              </Col>\r\n                            </Row>\r\n                          </FormGroup >\r\n                        </CardBody>\r\n                      </Card>\r\n                    </form>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col >\r\n            </Row >\r\n          </Container >\r\n        </div >\r\n      </React.Fragment >\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <React.Fragment></React.Fragment>\r\n    )\r\n  }\r\n};\r\nexport default CompanyModule;\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,SAJF,EAKEC,GALF,EAMEC,KANF,EAOEC,UAPF,EAQEC,SARF,EASEC,KATF,QAUO,YAVP;AAWA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,SACEC,oBADF,EAEEC,iBAFF,EAGEC,wBAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,sBANF,QAOO,mDAPP;AAQA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,sBAAtC,QAAoE,wBAApE;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,sCAA3B;AACA,SACEC,mBADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,cAJF,EAKEC,YALF,QAOO,yEAPP;AAQA,SAASC,YAAT,QAA6B,2BAA7B;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAAA;;EAE/B,MAAMC,OAAO,GAAGtC,MAAM,CAAC,IAAD,CAAtB;EACA,MAAMuC,QAAQ,GAAG1B,WAAW,EAA5B;EACA,MAAM2B,OAAO,GAAGZ,UAAU,EAA1B,CAJ+B,CAM/B;;EAEA,MAAM,CAACa,QAAD,EAAWC,WAAX,IAA0B5C,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAC6C,QAAD,EAAWC,WAAX,IAA0B9C,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAAC+C,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,MAAD,CAAxC;EACA,MAAM,CAACiD,mBAAD,EAAsBC,sBAAtB,IAAgDlD,QAAQ,CAAC,EAAD,CAA9D;EAEA,MAAM,CAACmD,kBAAD,EAAqBC,eAArB,IAAwCpD,QAAQ,CAAC,EAAD,CAAtD,CAb+B,CAe/B;;EACA,MAAM;IAAEqD,OAAF;IAAUC,SAAV;IAAqBC,UAArB;IAAiCC;EAAjC,IAA+CxC,WAAW,CAAEyC,KAAD,KAAY;IAC3EJ,OAAO,EAAEI,KAAK,CAACC,OAAN,CAAcL,OADoD;IAE3EC,SAAS,EAAEG,KAAK,CAACC,OAAN,CAAcC,aAFkD;IAG3EJ,UAAU,EAAEE,KAAK,CAACG,KAAN,CAAYC,oBAHmD;IAI3EL,SAAS,EAAEC,KAAK,CAACK,sBAAN,CAA6BN;EAJmC,CAAZ,CAAD,CAAhE;EAOA;IAAC;EAAyD;EAE1D,MAAM,CAACC,KAAD,EAAQM,QAAR,IAAoB/D,QAAQ,CAAC;IACjCgE,MAAM,EAAE;MACNC,EAAE,EAAE,EADE;MAENC,IAAI,EAAE,EAFA;MAGNC,OAAO,EAAE,EAHH;MAINC,KAAK,EAAE,EAJD;MAKNC,OAAO,EAAE,EALH;MAMNC,mBAAmB,EAAE,EANf;MAONC,OAAO,EAAE,EAPH;MAQNC,YAAY,EAAE;IARR,CADyB;IAYjCC,UAAU,EAAE;MACVP,IAAI,EAAE,EADI;MAEVC,OAAO,EAAE,EAFC;MAGVC,KAAK,EAAE,EAHG;MAIVC,OAAO,EAAE,EAJC;MAKVC,mBAAmB,EAAE,EALX;MAMVC,OAAO,EAAE,EANC;MAOVC,YAAY,EAAE;IAPJ,CAZqB;IAuBjCE,OAAO,EAAE;MACPR,IAAI,EAAE,EADC;MAEPC,OAAO,EAAE,EAFF;MAGPC,KAAK,EAAE,EAHA;MAIPC,OAAO,EAAE,EAJF;MAKPC,mBAAmB,EAAE,EALd;MAMPC,OAAO,EAAE,EANF;MAOPC,YAAY,EAAE;IAPP,CAvBwB;IAkCjCG,QAAQ,EAAE;MACRT,IAAI,EAAE;QACJU,MAAM,EAAE,EADJ;QAEJC,UAAU,EAAE,EAFR;QAGJC,KAAK,EAAE;MAHH,CADE;MAMRX,OAAO,EAAE;QACPS,MAAM,EAAE,EADD;QAEPC,UAAU,EAAE,EAFL;QAGPC,KAAK,EAAE;MAHA,CAND;MAWRV,KAAK,EAAE;QACLQ,MAAM,EAAE,EADH;QAELC,UAAU,EAAE,EAFP;QAGLC,KAAK,EAAE;MAHF,CAXC;MAgBRT,OAAO,EAAE;QACPO,MAAM,EAAE,EADD;QAEPC,UAAU,EAAE,EAFL;QAGPC,KAAK,EAAE;MAHA,CAhBD;MAqBRR,mBAAmB,EAAE;QACnBM,MAAM,EAAE,EADW;QAEnBC,UAAU,EAAE,EAFO;QAGnBC,KAAK,EAAE;MAHY,CArBb;MA0BRP,OAAO,EAAE;QACPK,MAAM,EAAE,EADD;QAEPC,UAAU,EAAE,EAFL;QAGPC,KAAK,EAAE;MAHA,CA1BD;MA+BRN,YAAY,EAAE;QACZI,MAAM,EAAE,EADI;QAEZC,UAAU,EAAE,EAFA;QAGZC,KAAK,EAAE;MAHK;IA/BN,CAlCuB;IAuEjCC,QAAQ,EAAE;EAvEuB,CAAD,CAAlC;EA4EA,MAAMf,MAAM,GAAG,EAAE,GAAGP,KAAK,CAACO;EAAX,CAAf;EACA,MAAM;IAAEU;EAAF,IAAcjB,KAApB;EACA,MAAM;IAAEgB;EAAF,IAAiBhB,KAAvB;EAEAxD,SAAS,CAAC,MAAM;IACdwC,QAAQ,CAACb,sBAAsB,CAAC,IAAD,CAAvB,CAAR;IACAa,QAAQ,CAACd,eAAe,CAAC,CAAD,CAAhB,CAAR;IACAc,QAAQ,CAAClB,eAAe,EAAhB,CAAR;EACD,CAJQ,EAIN,CAACkB,QAAD,CAJM,CAAT;EAMA,MAAMuC,QAAQ,GAAG,EAAE,GAAGtC,OAAO,CAACsC;EAAb,CAAjB;EACA,MAAMC,cAAc,GAAGD,QAAQ,CAACE,cAAT,CAAwB,WAAxB,CAAvB;EACA,MAAMC,YAAY,GAAG5C,KAAK,CAAC2C,cAAN,CAAqB,WAArB,CAArB,CAjH+B,CAmH/B;;EACAjF,SAAS,CAAC,MAAM;IACd,IAAImF,OAAO,GAAG,IAAd;IACA,IAAIC,YAAY,GAAGL,QAAQ,CAACM,QAA5B;;IAEA,IAAIH,YAAJ,EAAkB;MAChBE,YAAY,GAAG9C,KAAK,CAACgD,UAArB;IACD;;IAAA;IAEDH,OAAO,GAAG7B,UAAU,CAACiC,IAAX,CAAiBC,GAAD,IAAS;MACjC,OAAS,IAAGA,GAAG,CAACC,cAAe,EAAvB,KAA6BL,YAArC;IACD,CAFS,CAAV;;IAIA,IAAID,OAAJ,EAAa;MACXlC,sBAAsB,CAACkC,OAAD,CAAtB;IACD;;IAAA;EACF,CAfQ,EAeN,CAAC7B,UAAD,CAfM,CAAT;EAiBAtD,SAAS,CAAC,MAAM;IAEd;IACA,IAAKgF,cAAc,IAAIE,YAAvB,EAAsC;MAEpC,IAAIQ,UAAU,GAAG,IAAjB;;MACA,IAAIV,cAAJ,EAAoB;QAClBjC,WAAW,CAACgC,QAAQ,CAACjC,QAAV,CAAX;QACA4C,UAAU,GAAGX,QAAQ,CAACY,SAAtB;MACD,CAHD,MAIK,IAAIT,YAAJ,EAAkB;QACrBQ,UAAU,GAAGpD,KAAK,CAACqD,SAAnB;QACA5C,WAAW,CAACT,KAAK,CAACQ,QAAP,CAAX;QACAD,WAAW,CAAC,IAAD,CAAX;MACD;;MAED,IAAI6C,UAAJ,EAAgB;QACd,MAAM;UAAE1B,EAAF;UAAMC,IAAN;UAAYC,OAAZ;UAAqBC,KAArB;UAA4BC,OAA5B;UAAqCC,mBAArC;UAA0DC,OAA1D;UAAmEC,YAAnE;UAAiFqB;QAAjF,IAAqGF,UAA3G;QACA,MAAM;UAAE3B,MAAF;UAAUS,UAAV;UAAsBE,QAAtB;UAAgCI,QAAhC;UAA0CL;QAA1C,IAAsD,EAAE,GAAGjB;QAAL,CAA5D;QAEAkB,QAAQ,CAACT,IAAT,CAAcY,KAAd,GAAsB,IAAtB;QACAH,QAAQ,CAACR,OAAT,CAAiBW,KAAjB,GAAyB,IAAzB;QACAH,QAAQ,CAACP,KAAT,CAAeU,KAAf,GAAuB,IAAvB;QACAH,QAAQ,CAACN,OAAT,CAAiBS,KAAjB,GAAyB,IAAzB;QACAH,QAAQ,CAACL,mBAAT,CAA6BQ,KAA7B,GAAqC,IAArC;QACAH,QAAQ,CAACJ,OAAT,CAAiBO,KAAjB,GAAyB,IAAzB;QACAH,QAAQ,CAACH,YAAT,CAAsBM,KAAtB,GAA8B,IAA9B;QAEAd,MAAM,CAACC,EAAP,GAAYA,EAAZ;QACAD,MAAM,CAACE,IAAP,GAAcA,IAAd;QACAF,MAAM,CAACG,OAAP,GAAiBA,OAAjB;QACAH,MAAM,CAACI,KAAP,GAAeA,KAAf;QACAJ,MAAM,CAACK,OAAP,GAAiBA,OAAjB;QACAL,MAAM,CAACM,mBAAP,GAA6BA,mBAA7B;QACAN,MAAM,CAACO,OAAP,GAAiBA,OAAjB;QACAP,MAAM,CAACQ,YAAP,GAAsB;UAAEsB,KAAK,EAAED,gBAAT;UAA2BE,KAAK,EAAEvB;QAAlC,CAAtB;QACAT,QAAQ,CAAC;UAAEC,MAAF;UAAUS,UAAV;UAAsBE,QAAtB;UAAgCI,QAAhC;UAA0CL;QAA1C,CAAD,CAAR;QACAjC,QAAQ,CAACZ,cAAc,CAAC8D,UAAU,CAACzB,IAAZ,CAAf,CAAR;MACD;;MACDzB,QAAQ,CAACtB,oBAAoB,CAAC;QAAE6E,MAAM,EAAE;MAAV,CAAD,CAArB,CAAR;IACD;EAEF,CA1CQ,EA0CN,EA1CM,CAAT;EA6CA/F,SAAS,CAAC,MAAM;IAEd,IAAKoD,OAAO,CAAC2C,MAAR,KAAmB,IAApB,IAA8B3C,OAAO,CAAC4C,UAAR,KAAuB,GAArD,IAA6D,EAAElD,QAAQ,KAAK,aAAf,CAAjE,EAAgG;MAC9FN,QAAQ,CAACpB,wBAAwB,CAAC;QAAE2E,MAAM,EAAE;MAAV,CAAD,CAAzB,CAAR;MACA5C,eAAe,CAAC,EAAD,CAAf;MACAZ,OAAO,CAAC0D,OAAR,CAAgBC,KAAhB;;MACA,IAAIpD,QAAQ,KAAK,OAAjB,EAA0B;QACxBN,QAAQ,CAACf,UAAU,CAAC;UAClB0E,IAAI,EAAE,CADY;UAElBJ,MAAM,EAAE,IAFU;UAGlBK,OAAO,EAAEhD,OAAO,CAACgD;QAHC,CAAD,CAAX,CAAR;MAKD,CAND,MAOK;QACH5D,QAAQ,CAACf,UAAU,CAAC;UAClB0E,IAAI,EAAE,CADY;UAElBJ,MAAM,EAAE,IAFU;UAGlBK,OAAO,EAAEhD,OAAO,CAACgD,OAHC;UAIlBC,YAAY,EAAEjE;QAJI,CAAD,CAAX,CAAR;MAMD;IACF,CAnBD,MAoBK,IAAKgB,OAAO,CAAC2C,MAAR,KAAmB,IAApB,IAA6B,EAAEjD,QAAQ,KAAK,aAAf,CAAjC,EAAgE;MACnEN,QAAQ,CAACpB,wBAAwB,CAAC;QAAE2E,MAAM,EAAE;MAAV,CAAD,CAAzB,CAAR;MACAvD,QAAQ,CAACf,UAAU,CAAC;QAClB0E,IAAI,EAAE,CADY;QAElBJ,MAAM,EAAE,IAFU;QAGlBK,OAAO,EAAEE,IAAI,CAACC,SAAL,CAAeC,WAAW,CAACJ,OAA3B,CAHS;QAIlBC,YAAY,EAAE,KAJI;QAKlBI,mBAAmB,EAAE;MALH,CAAD,CAAX,CAAR;IAOD;EACF,CAhCQ,EAgCN,CAACrD,OAAD,CAhCM,CAAT;EAkCApD,SAAS,CAAC,MAAM;IACd,IAAIqD,SAAS,CAAC0C,MAAV,KAAqB,IAArB,IAA6B1C,SAAS,CAAC2C,UAAV,KAAyB,GAAtD,IAA6D,CAACpD,QAAlE,EAA4E;MACxEH,OAAO,CAACiE,IAAR,CAAa;QACTrB,QAAQ,EAAEjD;MADD,CAAb;IAGH,CAJD,MAIO,IAAIiB,SAAS,CAAC0C,MAAV,KAAqB,IAArB,IAA6B,CAACnD,QAAlC,EAA4C;MAC/CJ,QAAQ,CAACjB,sBAAsB,CAAC;QAAEwE,MAAM,EAAE;MAAV,CAAD,CAAvB,CAAR;MACAvD,QAAQ,CACJf,UAAU,CAAC;QACP0E,IAAI,EAAE,CADC;QAEPJ,MAAM,EAAE,IAFD;QAGPK,OAAO,EAAEE,IAAI,CAACC,SAAL,CAAelD,SAAS,CAAC+C,OAAzB;MAHF,CAAD,CADN,CAAR;IAOH;EACJ,CAfU,EAeR,CAAC/C,SAAD,EAAYT,QAAZ,CAfQ,CAAT;EAiBA,MAAM;IAAE2B;EAAF,IAAmBxD,WAAW,CAAEyC,KAAD,KAAY;IAC/Ce,YAAY,EAAEf,KAAK,CAACC,OAAN,CAAcc;EADmB,CAAZ,CAAD,CAApC;EAIA,MAAMoC,kBAAkB,GAAGpC,YAAY,CAACqC,GAAb,CAAkBC,IAAD,KAAW;IACrDf,KAAK,EAAEe,IAAI,CAAC7C,EADyC;IAErD6B,KAAK,EAAEgB,IAAI,CAAC5C;EAFyC,CAAX,CAAjB,CAA3B;EAKAjE,SAAS,CAAC,MAAM;IAEd,IAAIuD,SAAJ,EAAe;MACb,MAAMuD,QAAQ,GAAGvD,SAAS,CAACwD,eAA3B;MACAhF,mBAAmB,CAAC;QAAEyB,KAAF;QAASM,QAAT;QAAmBgD;MAAnB,CAAD,CAAnB;IACD;EACF,CANQ,EAMN,CAACvD,SAAD,CANM,CAAT;;EAQA,MAAMyD,iBAAiB,GAAIC,KAAD,IAAW;IACnC;IACAA,KAAK,CAACC,cAAN;;IACA,IAAIjF,SAAS,CAACuB,KAAD,EAAQM,QAAR,CAAb,EAAgC;MAC9B,MAAMqD,QAAQ,GAAGb,IAAI,CAACC,SAAL,CAAe;QAC9BtC,IAAI,EAAEF,MAAM,CAACE,IADiB;QAE9BC,OAAO,EAAEH,MAAM,CAACG,OAFc;QAG9BC,KAAK,EAAEJ,MAAM,CAACI,KAHgB;QAI9BC,OAAO,EAAEL,MAAM,CAACK,OAJc;QAK9BC,mBAAmB,EAAEN,MAAM,CAACM,mBALE;QAM9BC,OAAO,EAAEP,MAAM,CAACO,OANc;QAO9BC,YAAY,EAAER,MAAM,CAACQ,YAAP,CAAoBuB,KAPJ;QAQ9BsB,SAAS,EAAE,CARmB;QAS9BC,SAAS,EAAE;MATmB,CAAf,CAAjB;;MAYA,IAAIvE,QAAQ,KAAK,MAAjB,EAAyB;QACvBN,QAAQ,CAACnB,eAAe,CAAC8F,QAAD,EAAWpD,MAAM,CAACC,EAAlB,CAAhB,CAAR;QACAsD,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,QAA/B;MACD,CAHD,MAIK;QACH3E,QAAQ,CAACrB,iBAAiB,CAACgG,QAAD,CAAlB,CAAR;QACAG,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,QAA7B;MAED;IACF;EACF,CA1BD,CAtP+B,CAkR/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EAEA,IAAIK,cAAc,GAAG,EAArB;;EACA,IAAK5E,QAAD,IAAeE,QAAQ,KAAK,aAAhC,EAAgD;IAAE0E,cAAc,GAAG,OAAjB;EAA0B;;EAAA;;EAE5E,IAAI,EAAExE,mBAAmB,KAAK,EAA1B,CAAJ,EAAmC;IACjC,oBACE,QAAC,KAAD,CAAO,QAAP;MAAA,uBACE;QAAK,SAAS,EAAE,cAAhB;QAAgC,KAAK,EAAE;UAAEyE,SAAS,EAAED;QAAb,CAAvC;QAAA,wBACE,QAAC,QAAD;UAAA,uBACE;YAAA,WAAQxE,mBAAmB,CAAC0E,WAA5B;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE,QAAC,UAAD;UAAY,cAAc,EAAE1E,mBAAmB,CAAC0E;QAAhD;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,SAAD;UAAW,KAAK,MAAhB;UAAA,uBACE,QAAC,GAAD;YAAA,uBACE,QAAC,GAAD;cAAK,EAAE,EAAE,EAAT;cAAA,uBACE,QAAC,IAAD;gBAAM,SAAS,EAAC,YAAhB;gBAAA,wBACE,QAAC,UAAD;kBAAY,SAAS,EAAC,0BAAtB;kBAAiD,KAAK,EAAE;oBAAEC,eAAe,EAAE;kBAAnB,CAAxD;kBAAA,wBACE;oBAAI,SAAS,EAAC,uBAAd;oBAAA,UAAuC3E,mBAAmB,CAAC4E;kBAA3D;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAEE;oBAAG,SAAS,EAAC,4BAAb;oBAAA,UAA2C5E,mBAAmB,CAAC6E;kBAA/D;oBAAA;oBAAA;oBAAA;kBAAA,QAFF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAME,QAAC,QAAD;kBAAA,uBACE;oBAAM,QAAQ,EAAEb,iBAAhB;oBAAmC,GAAG,EAAEzE,OAAxC;oBAAiD,UAAU,MAA3D;oBAAA,wBACE,QAAC,IAAD;sBAAA,uBACE,QAAC,QAAD;wBAAU,KAAK,EAAE;0BAAEoF,eAAe,EAAE;wBAAnB,CAAjB;wBAAA,wBACE,QAAC,GAAD;0BAAA,wBAEE,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACE,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA,WAAqCnD,UAAU,CAACP,IAAhD;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADF,eAEE,QAAC,KAAD;8BACE,IAAI,EAAC,MADP;8BAEE,EAAE,EAAC,SAFL;8BAGE,KAAK,EAAEF,MAAM,CAACE,IAHhB;8BAIE,IAAI,EAAC,MAJP;8BAKE,SAAS,EAAEQ,OAAO,CAACR,IAAR,CAAa6D,MAAb,GAAsB,CAAtB,GAA0B,yBAA1B,GAAsD,cALnE;8BAME,WAAW,EAAC,mBANd;8BAOE,YAAY,EAAC,KAPf;8BAQE,QAAQ,EAAGb,KAAD,IAAW;gCACnB9E,YAAY,CAAC;kCAAE8E,KAAF;kCAASzD,KAAT;kCAAgBM;gCAAhB,CAAD,CAAZ;gCACAtB,QAAQ,CAACZ,cAAc,CAACqF,KAAK,CAACc,MAAN,CAAajC,KAAd,CAAf,CAAR;8BACD;4BAXH;8BAAA;8BAAA;8BAAA;4BAAA,QAFF,EAeGrB,OAAO,CAACR,IAAR,CAAa6D,MAAb,GAAsB,CAAtB,iBACC;8BAAM,SAAS,EAAC,kBAAhB;8BAAA,UAAoCrD,OAAO,CAACR;4BAA5C;8BAAA;8BAAA;8BAAA;4BAAA,QAhBJ;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAFF,eAsBE,QAAC,GAAD;4BAAK,EAAE,EAAC,GAAR;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAtBF,eAuBE,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACE,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA,WAAqCO,UAAU,CAACN,OAAhD;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADF,eAEE,QAAC,KAAD;8BACE,IAAI,EAAC,SADP;8BAEE,KAAK,EAAEH,MAAM,CAACG,OAFhB;8BAGE,IAAI,EAAC,MAHP;8BAIE,SAAS,EAAEO,OAAO,CAACP,OAAR,CAAgB4D,MAAhB,GAAyB,CAAzB,GAA6B,yBAA7B,GAAyD,cAJtE;8BAKE,WAAW,EAAC,sBALd;8BAME,YAAY,EAAC,KANf;8BAOE,QAAQ,EAAGb,KAAD,IAAW9E,YAAY,CAAC;gCAAE8E,KAAF;gCAASzD,KAAT;gCAAgBM;8BAAhB,CAAD;4BAPnC;8BAAA;8BAAA;8BAAA;4BAAA,QAFF,EAWGW,OAAO,CAACP,OAAR,CAAgB4D,MAAhB,GAAyB,CAAzB,iBACC;8BAAM,SAAS,EAAC,kBAAhB;8BAAA,UAAoCrD,OAAO,CAACP;4BAA5C;8BAAA;8BAAA;8BAAA;4BAAA,QAZJ;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAvBF;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA,QADF,eA0CE,QAAC,GAAD;0BAAK,SAAS,EAAC,MAAf;0BAAA,wBAEE,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACE,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA,WAAqCM,UAAU,CAACJ,OAAhD;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADF,eAEE,QAAC,KAAD;8BACE,IAAI,EAAC,SADP;8BAEE,KAAK,EAAEL,MAAM,CAACK,OAFhB;8BAGE,IAAI,EAAC,MAHP;8BAIE,SAAS,EAAEK,OAAO,CAACL,OAAR,CAAgB0D,MAAhB,GAAyB,CAAzB,GAA6B,yBAA7B,GAAyD,cAJtE;8BAKE,WAAW,EAAC,sBALd;8BAME,YAAY,EAAC,KANf;8BAOE,QAAQ,EAAGb,KAAD,IAAW;gCACnB9E,YAAY,CAAC;kCAAE8E,KAAF;kCAASzD,KAAT;kCAAgBM;gCAAhB,CAAD,CAAZ;8BACD;4BATH;8BAAA;8BAAA;8BAAA;4BAAA,QAFF,EAaGW,OAAO,CAACL,OAAR,CAAgB0D,MAAhB,GAAyB,CAAzB,iBACC;8BAAM,SAAS,EAAC,kBAAhB;8BAAA,UAAoCrD,OAAO,CAACL;4BAA5C;8BAAA;8BAAA;8BAAA;4BAAA,QAdJ;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAFF,eAoBE,QAAC,GAAD;4BAAK,EAAE,EAAC,GAAR;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QApBF,eAqBE,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACE,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA,WAAqCI,UAAU,CAACF,OAAhD;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADF,eAEE,QAAC,KAAD;8BACE,IAAI,EAAC,SADP;8BAEE,KAAK,EAAEP,MAAM,CAACO,OAFhB;8BAGE,IAAI,EAAC,MAHP;8BAIE,SAAS,EAAEG,OAAO,CAACH,OAAR,CAAgBwD,MAAhB,GAAyB,CAAzB,GAA6B,yBAA7B,GAAyD,cAJtE;8BAKE,WAAW,EAAC,sBALd;8BAME,YAAY,EAAC,KANf;8BAOE,QAAQ,EAAGb,KAAD,IAAW;gCACnB9E,YAAY,CAAC;kCAAE8E,KAAF;kCAASzD,KAAT;kCAAgBM;gCAAhB,CAAD,CAAZ;8BACD;4BATH;8BAAA;8BAAA;8BAAA;4BAAA,QAFF,EAaGW,OAAO,CAACH,OAAR,CAAgBwD,MAAhB,GAAyB,CAAzB,iBACC;8BAAM,SAAS,EAAC,kBAAhB;8BAAA,UAAoCrD,OAAO,CAACH;4BAA5C;8BAAA;8BAAA;8BAAA;4BAAA,QAdJ;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QArBF;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA,QA1CF;sBAAA;wBAAA;wBAAA;wBAAA;sBAAA;oBADF;sBAAA;sBAAA;sBAAA;oBAAA,QADF,eAsFE,QAAC,IAAD;sBAAM,SAAS,EAAC,OAAhB;sBAAA,uBACE,QAAC,QAAD;wBAAU,KAAK,EAAE;0BAAEqD,eAAe,EAAE;wBAAnB,CAAjB;wBAAA,wBAEE,QAAC,GAAD;0BAAA,wBACE,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACE,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA,WAAqCnD,UAAU,CAACL,KAAhD;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADF,eAEE,QAAC,KAAD;8BACE,IAAI,EAAC,OADP;8BAEE,KAAK,EAAEJ,MAAM,CAACI,KAFhB;8BAGE,IAAI,EAAC,MAHP;8BAIE,SAAS,EAAEM,OAAO,CAACN,KAAR,CAAc2D,MAAd,GAAuB,CAAvB,GAA2B,yBAA3B,GAAuD,cAJpE;8BAKE,WAAW,EAAC,oBALd;8BAME,YAAY,EAAC,KANf;8BAOE,QAAQ,EAAGb,KAAD,IAAW;gCACnB9E,YAAY,CAAC;kCAAE8E,KAAF;kCAASzD,KAAT;kCAAgBM;gCAAhB,CAAD,CAAZ;8BACD;4BATH;8BAAA;8BAAA;8BAAA;4BAAA,QAFF,EAaGW,OAAO,CAACN,KAAR,CAAc2D,MAAd,GAAuB,CAAvB,iBACC;8BAAM,SAAS,EAAC,kBAAhB;8BAAA,UAAoCrD,OAAO,CAACN;4BAA5C;8BAAA;8BAAA;8BAAA;4BAAA,QAdJ;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QADF,eAmBE,QAAC,GAAD;4BAAK,EAAE,EAAC,GAAR;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QAnBF,eAoBE,QAAC,SAAD;4BAAW,SAAS,EAAC,oBAArB;4BAAA,wBACE,QAAC,KAAD;8BAAO,OAAO,EAAC,oBAAf;8BAAA,WAAqCK,UAAU,CAACH,mBAAhD;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA,QADF,eAEE,QAAC,KAAD;8BACE,IAAI,EAAC,qBADP;8BAEE,KAAK,EAAEN,MAAM,CAACM,mBAFhB;8BAGE,IAAI,EAAC,MAHP;8BAIE,SAAS,EAAEI,OAAO,CAACJ,mBAAR,CAA4ByD,MAA5B,GAAqC,CAArC,GAAyC,yBAAzC,GAAqE,cAJlF;8BAKE,WAAW,EAAC,kCALd;8BAME,YAAY,EAAC,KANf;8BAOE,QAAQ,EAAGb,KAAD,IAAW;gCACnB9E,YAAY,CAAC;kCAAE8E,KAAF;kCAASzD,KAAT;kCAAgBM;gCAAhB,CAAD,CAAZ;8BACD;4BATH;8BAAA;8BAAA;8BAAA;4BAAA,QAFF,EAaGW,OAAO,CAACJ,mBAAR,CAA4ByD,MAA5B,GAAqC,CAArC,iBACC;8BAAM,SAAS,EAAC,kBAAhB;8BAAA,UAAoCrD,OAAO,CAACJ;4BAA5C;8BAAA;8BAAA;8BAAA;4BAAA,QAdJ;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA,QApBF;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA,QAFF,eAyCE,QAAC,GAAD;0BAAK,SAAS,EAAC,OAAf;0BAAA,uBAEE,QAAC,GAAD;4BAAK,EAAE,EAAC,GAAR;4BAAA,uBAEE,QAAC,SAAD;8BAAW,SAAS,EAAC,OAArB;8BAAA,wBACE,QAAC,KAAD;gCAAO,OAAO,EAAC,oBAAf;gCAAA,gBAAsCG,UAAU,CAACD,YAAjD;8BAAA;gCAAA;gCAAA;gCAAA;8BAAA,QADF,eAEE,QAAC,MAAD;gCACE,IAAI,EAAC,kBADP;gCAEE,KAAK,EAAER,MAAM,CAACQ,YAFhB,CAGE;gCAHF;gCAIE,YAAY,EAAE,KAJhB;gCAKE,SAAS,EAAC,gBALZ;gCAME,eAAe,EAAC,UANlB;gCAOE,OAAO,EAAEoC,kBAPX;gCAQE,QAAQ,EAAE,CAACqB,CAAD,EAAIC,CAAJ,KAAU/F,cAAc,CAAC;kCAAE+F,CAAF;kCAAKD,CAAL;kCAAQxE,KAAR;kCAAeM;gCAAf,CAAD;8BARpC;gCAAA;gCAAA;gCAAA;8BAAA,QAFF,EAYGW,OAAO,CAACF,YAAR,CAAqBuD,MAArB,GAA8B,CAA9B,iBACC;gCAAM,SAAS,EAAC,iBAAhB;gCAAA,uBAAkC;kCAAA,UAAQrD,OAAO,CAACF;gCAAhB;kCAAA;kCAAA;kCAAA;gCAAA;8BAAlC;gCAAA;gCAAA;gCAAA;8BAAA,QAbJ;4BAAA;8BAAA;8BAAA;8BAAA;4BAAA;0BAFF;4BAAA;4BAAA;4BAAA;0BAAA;wBAFF;0BAAA;0BAAA;0BAAA;wBAAA,QAzCF,eAiEE,QAAC,SAAD;0BAAA,uBACE,QAAC,GAAD;4BAAA,uBACE,QAAC,GAAD;8BAAK,EAAE,EAAE,CAAT;8BAAA,UACGzC,UAAU,CAAC;gCAAEgB,QAAF;gCAAYE,mBAAZ;gCAAiCkF,MAAM,EAAE;8BAAzC,CAAD;4BADb;8BAAA;8BAAA;8BAAA;4BAAA;0BADF;4BAAA;4BAAA;4BAAA;0BAAA;wBADF;0BAAA;0BAAA;0BAAA;wBAAA,QAjEF;sBAAA;wBAAA;wBAAA;wBAAA;sBAAA;oBADF;sBAAA;sBAAA;sBAAA;oBAAA,QAtFF;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QANF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EA2LD,CA5LD,MA6LK;IACH,oBACE,QAAC,KAAD,CAAO,QAAP;MAAA;MAAA;MAAA;IAAA,QADF;EAGD;AACF,CAjfD;;GAAM7F,a;UAGavB,W,EACDe,U,EAYqCd,W,EAqN5BA,W;;;KArOrBsB,a;AAkfN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}