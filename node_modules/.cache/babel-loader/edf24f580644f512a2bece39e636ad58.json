{"ast":null,"code":"import _objectSpread from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/GitProjects/Manthan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import Breadcrumb from\"../../../components/Common/Breadcrumb\";import{Card,CardBody,CardHeader,Col,Container,FormGroup,Input,Label,Row}from\"reactstrap\";import{MetaTags}from\"react-meta-tags\";import{BreadcrumbShow,commonPageFieldSuccess}from\"../../../store/actions\";import{useDispatch,useSelector}from\"react-redux\";import{AlertState,commonPageField}from\"../../../store/actions\";import{PostMethodForDriverMaster,PostMethod_ForDriverMasterSuccess,getMethod_ForDriverListSuccess,editDriverTypeSuccess,updateDriverTypeID}from\"../../../store/Administrator/DriverRedux/action\";import{useHistory}from\"react-router-dom\";import Flatpickr from\"react-flatpickr\";import{comAddPageFieldFunc,formValid,onChangeText,onChangeDate}from\"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";// import { pageField } from './validfiles'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DriverMaster=function DriverMaster(props){var dispatch=useDispatch();var history=useHistory();var formRef=useRef(null);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),pageMode=_useState2[0],setPageMode=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),userPageAccessState=_useState4[0],setUserPageAccessState=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modalCss=_useState6[0],setModalCss=_useState6[1];// new change\n// ////////////////////////////////////\nvar _useState7=useState({values:{id:\"\",// new change\nName:\"\",Address:\"\",UID:\"\",DOB:''},fieldLabel:{Name:\"\",Address:\"\",UID:\"\",DOB:''},isError:{Name:\"\",Address:\"\",UID:\"\",DOB:''},hasValid:{Name:{regExp:'',inValidMsg:\"\",valid:false},Address:{regExp:'',inValidMsg:\"\",valid:false},UID:{regExp:'',inValidMsg:\"\",valid:false},DOB:{regExp:'',inValidMsg:\"\",valid:false}},required:{}}),_useState8=_slicedToArray(_useState7,2),state=_useState8[0],setState=_useState8[1];//////////////////////////\n//Access redux store Data /  'save_ModuleSuccess' action data\nvar _useSelector=useSelector(function(state){return{PostAPIResponse:state.DriverReducer.PostDataMessage,userAccess:state.Login.RoleAccessUpdateData,pageField:state.CommonPageFieldReducer.pageField};}),PostAPIResponse=_useSelector.PostAPIResponse,pageField=_useSelector.pageField,userAccess=_useSelector.userAccess;// new change\nvar location=_objectSpread({},history.location);var hasShowloction=location.hasOwnProperty(\"editValue\");var hasShowModal=props.hasOwnProperty(\"editValue\");useEffect(function(){dispatch(commonPageFieldSuccess(null));// new change\ndispatch(commonPageField(91));},[]);// new change\n// userAccess useEffect\nuseEffect(function(){var userAcc=null;var locationPath=location.pathname;if(hasShowModal){locationPath=props.masterPath;};userAcc=userAccess.find(function(inx){return\"/\".concat(inx.ActualPagePath)===locationPath;});if(userAcc){setUserPageAccessState(userAcc);};},[userAccess]);// new change\n// This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\nuseEffect(function(){if(!(userPageAccessState==='')){document.getElementById(\"txtName\").focus();}// if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\nif(hasShowloction||hasShowModal){var hasEditVal=null;if(hasShowloction){setPageMode(location.pageMode);hasEditVal=location.editValue;}else if(hasShowModal){hasEditVal=props.editValue;setPageMode(props.pageMode);setModalCss(true);}if(hasEditVal){var _hasEditVal=hasEditVal,id=_hasEditVal.id,Name=_hasEditVal.Name,DOB=_hasEditVal.DOB,UID=_hasEditVal.UID,Address=_hasEditVal.Address;// new change\nvar _state=_objectSpread({},state),_values=_state.values,_fieldLabel=_state.fieldLabel,hasValid=_state.hasValid,required=_state.required,_isError=_state.isError;hasValid.Name.valid=true;hasValid.DOB.valid=true;hasValid.UID.valid=true;hasValid.Address.valid=true;_values.Name=Name;_values.DOB=DOB;_values.UID=UID;_values.Address=Address;_values.id=id;setState({values:_values,fieldLabel:_fieldLabel,hasValid:hasValid,required:required,isError:_isError});dispatch(BreadcrumbShow(hasEditVal.DriverMaster));}dispatch(editDriverTypeSuccess({Status:false}));}},[]);useEffect(function(){if(PostAPIResponse.Status===true&&PostAPIResponse.StatusCode===200){dispatch(PostMethod_ForDriverMasterSuccess({Status:false}));formRef.current.reset();if(pageMode===\"dropdownAdd\"){dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message}));}else{dispatch(AlertState({Type:1,Status:true,Message:PostAPIResponse.Message,RedirectPath:'/DriverList'}));}}else if(PostAPIResponse.Status===true){dispatch(getMethod_ForDriverListSuccess({Status:false}));dispatch(AlertState({Type:4,Status:true,Message:JSON.stringify(postMessage.Message),RedirectPath:false,AfterResponseAction:false}));}},[PostAPIResponse]);// new change\n// ////////////////////////////////////////////////////////////\nuseEffect(function(){if(pageField){var fieldArr=pageField.PageFieldMaster;comAddPageFieldFunc({state:state,setState:setState,fieldArr:fieldArr});// new change\n}},[pageField]);var values=_objectSpread({},state.values);var isError=state.isError;var fieldLabel=state.fieldLabel;var formSubmitHandler=function formSubmitHandler(event){event.preventDefault();if(formValid(state,setState)){var jsonBody=JSON.stringify({Name:values.Name,Address:values.Address,DOB:values.DOB,UID:values.UID});if(pageMode==='edit'){dispatch(updateDriverTypeID(jsonBody,values.id));// new change\n}else{dispatch(PostMethodForDriverMaster(jsonBody));}}};// IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\nvar IsEditMode_Css='';if(modalCss||pageMode===\"dropdownAdd\"){IsEditMode_Css=\"-5.5%\";};// new change\nif(!(userPageAccessState==='')){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",style:{marginTop:IsEditMode_Css},children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsx(\"title\",{children:\"DriverMaster | FoodERP-React FrontEnd\"})}),/*#__PURE__*/_jsx(Breadcrumb,{breadcrumbItem:userPageAccessState.PageHeading}),/*#__PURE__*/_jsxs(Card,{className:\"text-black\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"card-header   text-black\",style:{backgroundColor:\"#dddddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-black\",children:userPageAccessState.PageDescription}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc text-black\",children:userPageAccessState.PageDescriptionDetails})]}),/*#__PURE__*/_jsx(CardBody,{className:\" vh-10 0 text-black\",style:{backgroundColor:\"#whitesmoke\"},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formSubmitHandler,ref:formRef,noValidate:true,children:/*#__PURE__*/_jsx(Row,{className:\"\",children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{style:{backgroundColor:\"whitesmoke\"},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[fieldLabel.Name,\" \"]}),/*#__PURE__*/_jsx(Input,{id:\"txtName\",name:\"Name\",type:\"text\",value:values.Name,className:isError.Name.length>0?\"is-invalid form-control\":\"form-control\",placeholder:\"Please Enter Name\",onChange:function onChange(event){onChangeText({event:event,state:state,setState:setState});dispatch(BreadcrumbShow(event.target.value));}}),isError.Name.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"invalid-feedback\",children:isError.Name})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{children:\"Date of Birth\"}),/*#__PURE__*/_jsx(Flatpickr,{name:\"DOB\",value:values.DOB,className:\"form-control d-block p-2 bg-white text-dark\",placeholder:\"YYYY-MM-DD\",autoComplete:\"0,''\",options:{altInput:true,altFormat:\"F j, Y\",dateFormat:\"Y-m-d\",minDate:new Date().fp_incr(\"n\"),maxDate:new Date().fp_incr(0)// 14 days from now\"0,''\"\n},onChange:function onChange(y,v,e){onChangeDate({e:e,v:v,state:state,setState:setState});}})]})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"validationCustom01\",children:[fieldLabel.Address,\" \"]}),/*#__PURE__*/_jsx(Input,{name:\"Address\",value:values.Address,type:\"text\",className:isError.Address.length>0?\"is-invalid form-control\":\"form-control\",placeholder:\"Please Enter Address\",autoComplete:\"off\",onChange:function onChange(event){return onChangeText({event:event,state:state,setState:setState});}}),isError.Address.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"invalid-feedback\",children:isError.Address})]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(FormGroup,{className:\"mb-2 col col-sm-4 \",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"validationCustom01\",children:fieldLabel.UID}),/*#__PURE__*/_jsx(Input,{name:\"UID\",value:values.UID,type:\"text\",placeholder:\"Please Enter UID\",autoComplete:\"off\",className:isError.UID.length>0?\"is-invalid form-control\":\"form-control\",onChange:function onChange(event){return onChangeText({event:event,state:state,setState:setState});}}),isError.UID.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"invalid-feedback\",children:isError.UID})]})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:2,children:/*#__PURE__*/_jsx(\"div\",{children:pageMode===\"edit\"?userPageAccessState.RoleAccess_IsEdit?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Update Party Type\",className:\"btn btn-success w-md mt-3\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-edit me-2\"}),\"Update\"]}):/*#__PURE__*/_jsx(_Fragment,{}):userPageAccessState.RoleAccess_IsSave?/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",\"data-mdb-toggle\":\"tooltip\",\"data-mdb-placement\":\"top\",title:\"Save Party Type\",className:\"btn btn-primary w-md mt-3 \",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save me-2\"}),\" Save\"]}):/*#__PURE__*/_jsx(_Fragment,{})})})})})]})})})})})})})]})]})})});}else{return/*#__PURE__*/_jsx(React.Fragment,{});}};export default DriverMaster;var Email=RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);var Mobile=RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);var NotNull=RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);","map":{"version":3,"names":["React","useEffect","useRef","useState","Breadcrumb","Card","CardBody","CardHeader","Col","Container","FormGroup","Input","Label","Row","MetaTags","BreadcrumbShow","commonPageFieldSuccess","useDispatch","useSelector","AlertState","commonPageField","PostMethodForDriverMaster","PostMethod_ForDriverMasterSuccess","getMethod_ForDriverListSuccess","editDriverTypeSuccess","updateDriverTypeID","useHistory","Flatpickr","comAddPageFieldFunc","formValid","onChangeText","onChangeDate","DriverMaster","props","dispatch","history","formRef","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","modalCss","setModalCss","values","id","Name","Address","UID","DOB","fieldLabel","isError","hasValid","regExp","inValidMsg","valid","required","state","setState","PostAPIResponse","DriverReducer","PostDataMessage","userAccess","Login","RoleAccessUpdateData","pageField","CommonPageFieldReducer","location","hasShowloction","hasOwnProperty","hasShowModal","userAcc","locationPath","pathname","masterPath","find","inx","ActualPagePath","document","getElementById","focus","hasEditVal","editValue","Status","StatusCode","current","reset","Type","Message","RedirectPath","JSON","stringify","postMessage","AfterResponseAction","fieldArr","PageFieldMaster","formSubmitHandler","event","preventDefault","jsonBody","IsEditMode_Css","marginTop","PageHeading","backgroundColor","PageDescription","PageDescriptionDetails","length","target","value","altInput","altFormat","dateFormat","minDate","Date","fp_incr","maxDate","y","v","e","RoleAccess_IsEdit","RoleAccess_IsSave","Email","RegExp","Mobile","NotNull"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/DriverPage/DriverMaster.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { BreadcrumbShow, commonPageFieldSuccess } from \"../../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AlertState, commonPageField } from \"../../../store/actions\";\r\n\r\nimport {\r\n    PostMethodForDriverMaster,\r\n    PostMethod_ForDriverMasterSuccess,\r\n    getMethod_ForDriverListSuccess,\r\n    editDriverTypeSuccess,\r\n    updateDriverTypeID\r\n} from \"../../../store/Administrator/DriverRedux/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport {\r\n    comAddPageFieldFunc,\r\n    formValid,\r\n    onChangeText,\r\n    onChangeDate\r\n} from \"../../../components/Common/CmponentRelatedCommonFile/validationFunction\";\r\n\r\n// import { pageField } from './validfiles'\r\n\r\n\r\nconst DriverMaster = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const formRef = useRef(null);\r\n    const [pageMode, setPageMode] = useState(\"\");\r\n    const [userPageAccessState, setUserPageAccessState] = useState(\"\");\r\n    const [modalCss, setModalCss] = useState(false);// new change\r\n\r\n    // ////////////////////////////////////\r\n    const [state, setState] = useState({\r\n        values: {\r\n            id: \"\",// new change\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n        fieldLabel: {\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n\r\n        isError: {\r\n            Name: \"\",\r\n            Address: \"\",\r\n            UID: \"\",\r\n            DOB: ''\r\n        },\r\n\r\n        hasValid: {\r\n            Name: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            Address: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n\r\n            UID: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            },\r\n            DOB: {\r\n                regExp: '',\r\n                inValidMsg: \"\",\r\n                valid: false\r\n            }\r\n        },\r\n        required: {\r\n\r\n        }\r\n    }\r\n    )\r\n    //////////////////////////\r\n\r\n\r\n    //Access redux store Data /  'save_ModuleSuccess' action data\r\n    const {\r\n        PostAPIResponse,\r\n        pageField,\r\n        userAccess,\r\n    } = useSelector((state) => ({\r\n        PostAPIResponse: state.DriverReducer.PostDataMessage,\r\n        userAccess: state.Login.RoleAccessUpdateData,\r\n        pageField: state.CommonPageFieldReducer.pageField\r\n    }));\r\n\r\n    // new change\r\n    const location = { ...history.location }\r\n    const hasShowloction = location.hasOwnProperty(\"editValue\")\r\n    const hasShowModal = props.hasOwnProperty(\"editValue\")\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(commonPageFieldSuccess(null));// new change\r\n        dispatch(commonPageField(91))\r\n    }, []);\r\n\r\n    // new change\r\n    // userAccess useEffect\r\n    useEffect(() => {\r\n       \r\n        let userAcc = null;\r\n        let locationPath = location.pathname;\r\n\r\n        if (hasShowModal) {\r\n            locationPath = props.masterPath;\r\n        };\r\n\r\n        userAcc = userAccess.find((inx) => {\r\n            return (`/${inx.ActualPagePath}` === locationPath)\r\n        })\r\n\r\n        if (userAcc) {\r\n            setUserPageAccessState(userAcc)\r\n        };\r\n    }, [userAccess])\r\n\r\n// new change\r\n    // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n    useEffect(() => {\r\n\r\n        if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        // if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n        if ((hasShowloction || hasShowModal)) {\r\n\r\n            let hasEditVal = null\r\n            if (hasShowloction) {\r\n                setPageMode(location.pageMode)\r\n                hasEditVal = location.editValue\r\n            }\r\n            else if (hasShowModal) {\r\n                hasEditVal = props.editValue\r\n                setPageMode(props.pageMode)\r\n                setModalCss(true)\r\n            }\r\n\r\n            if (hasEditVal) {\r\n                const { id, Name, DOB, UID, Address } = hasEditVal// new change\r\n                const { values, fieldLabel, hasValid, required, isError } = { ...state }\r\n\r\n                hasValid.Name.valid = true;\r\n                hasValid.DOB.valid = true;\r\n                hasValid.UID.valid = true;\r\n                hasValid.Address.valid = true;\r\n\r\n                values.Name = Name;\r\n                values.DOB = DOB;\r\n                values.UID = UID;\r\n                values.Address = Address;\r\n                values.id = id\r\n\r\n                setState({ values, fieldLabel, hasValid, required, isError })\r\n                dispatch(BreadcrumbShow(hasEditVal.DriverMaster))\r\n            }\r\n            dispatch(editDriverTypeSuccess({ Status: false }))\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if ((PostAPIResponse.Status === true) && (PostAPIResponse.StatusCode === 200)) {\r\n            dispatch(PostMethod_ForDriverMasterSuccess({ Status: false }))\r\n            formRef.current.reset();\r\n            if (pageMode === \"dropdownAdd\") {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(AlertState({\r\n                    Type: 1,\r\n                    Status: true,\r\n                    Message: PostAPIResponse.Message,\r\n                    RedirectPath: '/DriverList',\r\n                }))\r\n            }\r\n        }\r\n        else if (PostAPIResponse.Status === true) {\r\n            dispatch(getMethod_ForDriverListSuccess({ Status: false }))\r\n            dispatch(AlertState({\r\n                Type: 4,\r\n                Status: true,\r\n                Message: JSON.stringify(postMessage.Message),\r\n                RedirectPath: false,\r\n                AfterResponseAction: false\r\n            }));\r\n        }\r\n    }, [PostAPIResponse])\r\n\r\n// new change\r\n    // ////////////////////////////////////////////////////////////\r\n    useEffect(() => {\r\n     \r\n        if (pageField) {\r\n            const fieldArr = pageField.PageFieldMaster\r\n            comAddPageFieldFunc({ state, setState, fieldArr })// new change\r\n        }\r\n    }, [pageField])\r\n\r\n\r\n    const values = { ...state.values }\r\n    const { isError } = state;\r\n    const { fieldLabel } = state;\r\n\r\n\r\n\r\n    const formSubmitHandler = (event) => {\r\n        \r\n        event.preventDefault();\r\n        if (formValid(state, setState)) {\r\n\r\n            const jsonBody = JSON.stringify({\r\n                Name: values.Name,\r\n                Address: values.Address,\r\n                DOB: values.DOB,\r\n                UID: values.UID\r\n            });\r\n\r\n            if (pageMode === 'edit') {\r\n                dispatch(updateDriverTypeID(jsonBody, values.id));// new change\r\n            }\r\n\r\n            else {\r\n                dispatch(PostMethodForDriverMaster(jsonBody));\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n    var IsEditMode_Css = ''\r\n    if ((modalCss) || (pageMode === \"dropdownAdd\")) { IsEditMode_Css = \"-5.5%\" };// new change\r\n\r\n    if (!(userPageAccessState === '')) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n                    <Container fluid>\r\n                        <MetaTags>\r\n                            <title>DriverMaster | FoodERP-React FrontEnd</title>\r\n                        </MetaTags>\r\n                        <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n\r\n                        <Card className=\"text-black\">\r\n                            <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\" vh-10 0 text-black\" style={{ backgroundColor: \"#whitesmoke\" }} >\r\n\r\n                                <form onSubmit={formSubmitHandler} ref={formRef} noValidate>\r\n\r\n                                    <Row className=\"\">\r\n                                        <Col md={12}>\r\n                                            <Card>\r\n                                                <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                                                    <Row>\r\n                                                        <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                            <Label htmlFor=\"validationCustom01\">{fieldLabel.Name} </Label>\r\n                                                            <Input\r\n                                                                id=\"txtName\"\r\n                                                                name=\"Name\"\r\n                                                                type=\"text\"\r\n                                                                value={values.Name}\r\n                                                                className={isError.Name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                placeholder=\"Please Enter Name\"\r\n                                                                onChange={(event) => {\r\n                                                                    onChangeText({ event, state, setState })\r\n                                                                    dispatch(BreadcrumbShow(event.target.value))\r\n                                                                }}\r\n\r\n                                                            />\r\n                                                            {isError.Name.length > 0 && (\r\n                                                                <span className=\"invalid-feedback\">{isError.Name}</span>\r\n                                                            )}\r\n                                                        </FormGroup>\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label>Date of Birth</Label>\r\n                                                                    <Flatpickr\r\n                                                                        name=\"DOB\"\r\n                                                                        value={values.DOB}\r\n                                                                        className=\"form-control d-block p-2 bg-white text-dark\"\r\n                                                                        placeholder=\"YYYY-MM-DD\"\r\n                                                                        autoComplete=\"0,''\"\r\n                                                                        options={{\r\n                                                                            altInput: true,\r\n                                                                            altFormat: \"F j, Y\",\r\n                                                                            dateFormat: \"Y-m-d\",\r\n                                                                            minDate: new Date().fp_incr(\"n\"),\r\n                                                                            maxDate: new Date().fp_incr(0) // 14 days from now\"0,''\"\r\n                                                                        }}\r\n                                                                        onChange={(y, v, e) => { onChangeDate({ e, v, state, setState }) }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        {/* <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <FormGroup className=\"mb-3\">\r\n                                                                    <Label htmlFor=\"validationCustom01\">{fieldLabel.Address} </Label>\r\n                                                                    <Select\r\n                                                                        defaultValue={options[0]}\r\n                                                                        isSearchable={false}\r\n                                                                        className=\"react-dropdown\"\r\n                                                                        onChange={(v, e) => onChangeSelect({ e, v, state, setState })}\r\n                                                                        classNamePrefix=\"dropdown\"\r\n                                                                        options={options}\r\n                                                                        name=\"Address\"\r\n                                                                        styles={{\r\n                                                                            control: base => ({\r\n                                                                                ...base,\r\n                                                                                border: isError.Address.length > 0 ? '1px solid red' : '',\r\n\r\n                                                                            })\r\n                                                                        }}\r\n                                                                    />\r\n                                                                     {isError.Name.length > 0 && (\r\n                                                                <span className=\"tex\">{isError.Name}</span>\r\n                                                            )}\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row> */}\r\n\r\n\r\n\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.Address} </Label>\r\n                                                                <Input\r\n                                                                    name=\"Address\"\r\n                                                                    value={values.Address}\r\n                                                                    type=\"text\"\r\n                                                                    className={isError.Address.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    placeholder=\"Please Enter Address\"\r\n                                                                    autoComplete='off'\r\n                                                                    onChange={(event) => onChangeText({ event, state, setState })}\r\n                                                                />\r\n                                                                {isError.Address.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.Address}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n                                                        </Row>\r\n\r\n                                                        <Row>\r\n                                                            <FormGroup className=\"mb-2 col col-sm-4 \">\r\n                                                                <Label htmlFor=\"validationCustom01\">{fieldLabel.UID}</Label>\r\n                                                                <Input\r\n                                                                    name=\"UID\"\r\n                                                                    value={values.UID}\r\n                                                                    type=\"text\"\r\n                                                                    placeholder=\"Please Enter UID\"\r\n                                                                    autoComplete='off'\r\n                                                                    className={isError.UID.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                                                    onChange={(event) => onChangeText({ event, state, setState })}\r\n                                                                />\r\n                                                                {isError.UID.length > 0 && (\r\n                                                                    <span className=\"invalid-feedback\">{isError.UID}</span>\r\n                                                                )}\r\n                                                            </FormGroup>\r\n\r\n                                                        </Row>\r\n                                                        <FormGroup>\r\n                                                            <Row>\r\n                                                                <Col sm={2}>\r\n                                                                    <div>\r\n                                                                        {\r\n                                                                            pageMode === \"edit\" ?\r\n                                                                                userPageAccessState.RoleAccess_IsEdit ?\r\n                                                                                    <button\r\n                                                                                        type=\"submit\"\r\n                                                                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Party Type\"\r\n                                                                                        className=\"btn btn-success w-md mt-3\"\r\n                                                                                    >\r\n                                                                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                                                                    </button>\r\n                                                                                    :\r\n                                                                                    <></>\r\n                                                                                : (\r\n\r\n                                                                                    userPageAccessState.RoleAccess_IsSave ?\r\n                                                                                        <button\r\n                                                                                            type=\"submit\"\r\n                                                                                            data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Party Type\"\r\n                                                                                            className=\"btn btn-primary w-md mt-3 \"\r\n                                                                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                                                                        </button>\r\n                                                                                        :\r\n                                                                                        <></>\r\n                                                                                )\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </FormGroup>\r\n                                                    </Row>\r\n\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment></React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default DriverMaster\r\n\r\n\r\n\r\n\r\nconst Email = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\n\r\nconst Mobile = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\nconst NotNull = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)"],"mappings":"iNAAA,MAAOA,MAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAoD,OAApD,CACA,MAAOC,WAAP,KAAuB,uCAAvB,CACA,OACIC,IADJ,CAEIC,QAFJ,CAGIC,UAHJ,CAIIC,GAJJ,CAKIC,SALJ,CAMIC,SANJ,CAOIC,KAPJ,CAQIC,KARJ,CASIC,GATJ,KAUO,YAVP,CAWA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,cAAT,CAAyBC,sBAAzB,KAAuD,wBAAvD,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,CAAqBC,eAArB,KAA4C,wBAA5C,CAEA,OACIC,yBADJ,CAEIC,iCAFJ,CAGIC,8BAHJ,CAIIC,qBAJJ,CAKIC,kBALJ,KAMO,iDANP,CAOA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,UAAP,KAAsB,iBAAtB,CACA,OACIC,mBADJ,CAEIC,SAFJ,CAGIC,YAHJ,CAIIC,YAJJ,KAKO,yEALP,CAOA;6IAGA,GAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,KAAD,CAAW,CAE5B,GAAMC,SAAQ,CAAGjB,WAAW,EAA5B,CACA,GAAMkB,QAAO,CAAGT,UAAU,EAA1B,CAEA,GAAMU,QAAO,CAAGlC,MAAM,CAAC,IAAD,CAAtB,CACA,cAAgCC,QAAQ,CAAC,EAAD,CAAxC,wCAAOkC,QAAP,eAAiBC,WAAjB,eACA,eAAsDnC,QAAQ,CAAC,EAAD,CAA9D,yCAAOoC,mBAAP,eAA4BC,sBAA5B,eACA,eAAgCrC,QAAQ,CAAC,KAAD,CAAxC,yCAAOsC,QAAP,eAAiBC,WAAjB,eAAgD;AAEhD;AACA,eAA0BvC,QAAQ,CAAC,CAC/BwC,MAAM,CAAE,CACJC,EAAE,CAAE,EADA,CACG;AACPC,IAAI,CAAE,EAFF,CAGJC,OAAO,CAAE,EAHL,CAIJC,GAAG,CAAE,EAJD,CAKJC,GAAG,CAAE,EALD,CADuB,CAQ/BC,UAAU,CAAE,CACRJ,IAAI,CAAE,EADE,CAERC,OAAO,CAAE,EAFD,CAGRC,GAAG,CAAE,EAHG,CAIRC,GAAG,CAAE,EAJG,CARmB,CAe/BE,OAAO,CAAE,CACLL,IAAI,CAAE,EADD,CAELC,OAAO,CAAE,EAFJ,CAGLC,GAAG,CAAE,EAHA,CAILC,GAAG,CAAE,EAJA,CAfsB,CAsB/BG,QAAQ,CAAE,CACNN,IAAI,CAAE,CACFO,MAAM,CAAE,EADN,CAEFC,UAAU,CAAE,EAFV,CAGFC,KAAK,CAAE,KAHL,CADA,CAMNR,OAAO,CAAE,CACLM,MAAM,CAAE,EADH,CAELC,UAAU,CAAE,EAFP,CAGLC,KAAK,CAAE,KAHF,CANH,CAYNP,GAAG,CAAE,CACDK,MAAM,CAAE,EADP,CAEDC,UAAU,CAAE,EAFX,CAGDC,KAAK,CAAE,KAHN,CAZC,CAiBNN,GAAG,CAAE,CACDI,MAAM,CAAE,EADP,CAEDC,UAAU,CAAE,EAFX,CAGDC,KAAK,CAAE,KAHN,CAjBC,CAtBqB,CA6C/BC,QAAQ,CAAE,EA7CqB,CAAD,CAAlC,yCAAOC,KAAP,eAAcC,QAAd,eAkDA;AAGA;AACA,iBAIIvC,WAAW,CAAC,SAACsC,KAAD,QAAY,CACxBE,eAAe,CAAEF,KAAK,CAACG,aAAN,CAAoBC,eADb,CAExBC,UAAU,CAAEL,KAAK,CAACM,KAAN,CAAYC,oBAFA,CAGxBC,SAAS,CAAER,KAAK,CAACS,sBAAN,CAA6BD,SAHhB,CAAZ,EAAD,CAJf,CACIN,eADJ,cACIA,eADJ,CAEIM,SAFJ,cAEIA,SAFJ,CAGIH,UAHJ,cAGIA,UAHJ,CAUA;AACA,GAAMK,SAAQ,kBAAQ/B,OAAO,CAAC+B,QAAhB,CAAd,CACA,GAAMC,eAAc,CAAGD,QAAQ,CAACE,cAAT,CAAwB,WAAxB,CAAvB,CACA,GAAMC,aAAY,CAAGpC,KAAK,CAACmC,cAAN,CAAqB,WAArB,CAArB,CAGAnE,SAAS,CAAC,UAAM,CACZiC,QAAQ,CAAClB,sBAAsB,CAAC,IAAD,CAAvB,CAAR,CAAuC;AACvCkB,QAAQ,CAACd,eAAe,CAAC,EAAD,CAAhB,CAAR,CACH,CAHQ,CAGN,EAHM,CAAT,CAKA;AACA;AACAnB,SAAS,CAAC,UAAM,CAEZ,GAAIqE,QAAO,CAAG,IAAd,CACA,GAAIC,aAAY,CAAGL,QAAQ,CAACM,QAA5B,CAEA,GAAIH,YAAJ,CAAkB,CACdE,YAAY,CAAGtC,KAAK,CAACwC,UAArB,CACH,EAEDH,OAAO,CAAGT,UAAU,CAACa,IAAX,CAAgB,SAACC,GAAD,CAAS,CAC/B,MAAQ,WAAIA,GAAG,CAACC,cAAR,IAA6BL,YAArC,CACH,CAFS,CAAV,CAIA,GAAID,OAAJ,CAAa,CACT9B,sBAAsB,CAAC8B,OAAD,CAAtB,CACH,EACJ,CAhBQ,CAgBN,CAACT,UAAD,CAhBM,CAAT,CAkBJ;AACI;AACA5D,SAAS,CAAC,UAAM,CAEZ,GAAI,EAAEsC,mBAAmB,GAAK,EAA1B,CAAJ,CAAmC,CAAEsC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,GAA6C,CAClF;AACA,GAAKZ,cAAc,EAAIE,YAAvB,CAAsC,CAElC,GAAIW,WAAU,CAAG,IAAjB,CACA,GAAIb,cAAJ,CAAoB,CAChB7B,WAAW,CAAC4B,QAAQ,CAAC7B,QAAV,CAAX,CACA2C,UAAU,CAAGd,QAAQ,CAACe,SAAtB,CACH,CAHD,IAIK,IAAIZ,YAAJ,CAAkB,CACnBW,UAAU,CAAG/C,KAAK,CAACgD,SAAnB,CACA3C,WAAW,CAACL,KAAK,CAACI,QAAP,CAAX,CACAK,WAAW,CAAC,IAAD,CAAX,CACH,CAED,GAAIsC,UAAJ,CAAgB,CACZ,gBAAwCA,UAAxC,CAAQpC,EAAR,aAAQA,EAAR,CAAYC,IAAZ,aAAYA,IAAZ,CAAkBG,GAAlB,aAAkBA,GAAlB,CAAuBD,GAAvB,aAAuBA,GAAvB,CAA4BD,OAA5B,aAA4BA,OAA5B,CAAkD;AAClD,4BAAiEU,KAAjE,EAAQb,OAAR,QAAQA,MAAR,CAAgBM,WAAhB,QAAgBA,UAAhB,CAA4BE,QAA5B,QAA4BA,QAA5B,CAAsCI,QAAtC,QAAsCA,QAAtC,CAAgDL,QAAhD,QAAgDA,OAAhD,CAEAC,QAAQ,CAACN,IAAT,CAAcS,KAAd,CAAsB,IAAtB,CACAH,QAAQ,CAACH,GAAT,CAAaM,KAAb,CAAqB,IAArB,CACAH,QAAQ,CAACJ,GAAT,CAAaO,KAAb,CAAqB,IAArB,CACAH,QAAQ,CAACL,OAAT,CAAiBQ,KAAjB,CAAyB,IAAzB,CAEAX,OAAM,CAACE,IAAP,CAAcA,IAAd,CACAF,OAAM,CAACK,GAAP,CAAaA,GAAb,CACAL,OAAM,CAACI,GAAP,CAAaA,GAAb,CACAJ,OAAM,CAACG,OAAP,CAAiBA,OAAjB,CACAH,OAAM,CAACC,EAAP,CAAYA,EAAZ,CAEAa,QAAQ,CAAC,CAAEd,MAAM,CAANA,OAAF,CAAUM,UAAU,CAAVA,WAAV,CAAsBE,QAAQ,CAARA,QAAtB,CAAgCI,QAAQ,CAARA,QAAhC,CAA0CL,OAAO,CAAPA,QAA1C,CAAD,CAAR,CACAhB,QAAQ,CAACnB,cAAc,CAACiE,UAAU,CAAChD,YAAZ,CAAf,CAAR,CACH,CACDE,QAAQ,CAACV,qBAAqB,CAAC,CAAE0D,MAAM,CAAE,KAAV,CAAD,CAAtB,CAAR,CACH,CACJ,CArCQ,CAqCN,EArCM,CAAT,CAyCAjF,SAAS,CAAC,UAAM,CACZ,GAAKyD,eAAe,CAACwB,MAAhB,GAA2B,IAA5B,EAAsCxB,eAAe,CAACyB,UAAhB,GAA+B,GAAzE,CAA+E,CAC3EjD,QAAQ,CAACZ,iCAAiC,CAAC,CAAE4D,MAAM,CAAE,KAAV,CAAD,CAAlC,CAAR,CACA9C,OAAO,CAACgD,OAAR,CAAgBC,KAAhB,GACA,GAAIhD,QAAQ,GAAK,aAAjB,CAAgC,CAC5BH,QAAQ,CAACf,UAAU,CAAC,CAChBmE,IAAI,CAAE,CADU,CAEhBJ,MAAM,CAAE,IAFQ,CAGhBK,OAAO,CAAE7B,eAAe,CAAC6B,OAHT,CAAD,CAAX,CAAR,CAKH,CAND,IAOK,CACDrD,QAAQ,CAACf,UAAU,CAAC,CAChBmE,IAAI,CAAE,CADU,CAEhBJ,MAAM,CAAE,IAFQ,CAGhBK,OAAO,CAAE7B,eAAe,CAAC6B,OAHT,CAIhBC,YAAY,CAAE,aAJE,CAAD,CAAX,CAAR,CAMH,CACJ,CAlBD,IAmBK,IAAI9B,eAAe,CAACwB,MAAhB,GAA2B,IAA/B,CAAqC,CACtChD,QAAQ,CAACX,8BAA8B,CAAC,CAAE2D,MAAM,CAAE,KAAV,CAAD,CAA/B,CAAR,CACAhD,QAAQ,CAACf,UAAU,CAAC,CAChBmE,IAAI,CAAE,CADU,CAEhBJ,MAAM,CAAE,IAFQ,CAGhBK,OAAO,CAAEE,IAAI,CAACC,SAAL,CAAeC,WAAW,CAACJ,OAA3B,CAHO,CAIhBC,YAAY,CAAE,KAJE,CAKhBI,mBAAmB,CAAE,KALL,CAAD,CAAX,CAAR,CAOH,CACJ,CA9BQ,CA8BN,CAAClC,eAAD,CA9BM,CAAT,CAgCJ;AACI;AACAzD,SAAS,CAAC,UAAM,CAEZ,GAAI+D,SAAJ,CAAe,CACX,GAAM6B,SAAQ,CAAG7B,SAAS,CAAC8B,eAA3B,CACAlE,mBAAmB,CAAC,CAAE4B,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAmBoC,QAAQ,CAARA,QAAnB,CAAD,CAAnB,CAAkD;AACrD,CACJ,CANQ,CAMN,CAAC7B,SAAD,CANM,CAAT,CASA,GAAMrB,OAAM,kBAAQa,KAAK,CAACb,MAAd,CAAZ,CACA,GAAQO,QAAR,CAAoBM,KAApB,CAAQN,OAAR,CACA,GAAQD,WAAR,CAAuBO,KAAvB,CAAQP,UAAR,CAIA,GAAM8C,kBAAiB,CAAG,QAApBA,kBAAoB,CAACC,KAAD,CAAW,CAEjCA,KAAK,CAACC,cAAN,GACA,GAAIpE,SAAS,CAAC2B,KAAD,CAAQC,QAAR,CAAb,CAAgC,CAE5B,GAAMyC,SAAQ,CAAGT,IAAI,CAACC,SAAL,CAAe,CAC5B7C,IAAI,CAAEF,MAAM,CAACE,IADe,CAE5BC,OAAO,CAAEH,MAAM,CAACG,OAFY,CAG5BE,GAAG,CAAEL,MAAM,CAACK,GAHgB,CAI5BD,GAAG,CAAEJ,MAAM,CAACI,GAJgB,CAAf,CAAjB,CAOA,GAAIV,QAAQ,GAAK,MAAjB,CAAyB,CACrBH,QAAQ,CAACT,kBAAkB,CAACyE,QAAD,CAAWvD,MAAM,CAACC,EAAlB,CAAnB,CAAR,CAAkD;AACrD,CAFD,IAIK,CACDV,QAAQ,CAACb,yBAAyB,CAAC6E,QAAD,CAA1B,CAAR,CACH,CACJ,CAGJ,CAtBD,CAyBA;AACA,GAAIC,eAAc,CAAG,EAArB,CACA,GAAK1D,QAAD,EAAeJ,QAAQ,GAAK,aAAhC,CAAgD,CAAE8D,cAAc,CAAG,OAAjB,CAA0B,EAAC;AAE7E,GAAI,EAAE5D,mBAAmB,GAAK,EAA1B,CAAJ,CAAmC,CAC/B,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,YAAK,SAAS,CAAC,cAAf,CAA8B,KAAK,CAAE,CAAE6D,SAAS,CAAED,cAAb,CAArC,uBACI,MAAC,SAAD,EAAW,KAAK,KAAhB,wBACI,KAAC,QAAD,wBACI,gEADJ,EADJ,cAII,KAAC,UAAD,EAAY,cAAc,CAAE5D,mBAAmB,CAAC8D,WAAhD,EAJJ,cAMI,MAAC,IAAD,EAAM,SAAS,CAAC,YAAhB,wBACI,MAAC,UAAD,EAAY,SAAS,CAAC,0BAAtB,CAAiD,KAAK,CAAE,CAAEC,eAAe,CAAE,SAAnB,CAAxD,wBACI,WAAI,SAAS,CAAC,uBAAd,UAAuC/D,mBAAmB,CAACgE,eAA3D,EADJ,cAEI,UAAG,SAAS,CAAC,4BAAb,UAA2ChE,mBAAmB,CAACiE,sBAA/D,EAFJ,GADJ,cAMI,KAAC,QAAD,EAAU,SAAS,CAAC,qBAApB,CAA0C,KAAK,CAAE,CAAEF,eAAe,CAAE,aAAnB,CAAjD,uBAEI,aAAM,QAAQ,CAAEP,iBAAhB,CAAmC,GAAG,CAAE3D,OAAxC,CAAiD,UAAU,KAA3D,uBAEI,KAAC,GAAD,EAAK,SAAS,CAAC,EAAf,uBACI,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,uBACI,KAAC,IAAD,wBACI,KAAC,QAAD,EAAU,KAAK,CAAE,CAAEkE,eAAe,CAAE,YAAnB,CAAjB,uBACI,MAAC,GAAD,yBACI,MAAC,SAAD,EAAW,SAAS,CAAC,oBAArB,wBACI,MAAC,KAAD,EAAO,OAAO,CAAC,oBAAf,WAAqCrD,UAAU,CAACJ,IAAhD,OADJ,cAEI,KAAC,KAAD,EACI,EAAE,CAAC,SADP,CAEI,IAAI,CAAC,MAFT,CAGI,IAAI,CAAC,MAHT,CAII,KAAK,CAAEF,MAAM,CAACE,IAJlB,CAKI,SAAS,CAAEK,OAAO,CAACL,IAAR,CAAa4D,MAAb,CAAsB,CAAtB,CAA0B,yBAA1B,CAAsD,cALrE,CAMI,WAAW,CAAC,mBANhB,CAOI,QAAQ,CAAE,kBAACT,KAAD,CAAW,CACjBlE,YAAY,CAAC,CAAEkE,KAAK,CAALA,KAAF,CAASxC,KAAK,CAALA,KAAT,CAAgBC,QAAQ,CAARA,QAAhB,CAAD,CAAZ,CACAvB,QAAQ,CAACnB,cAAc,CAACiF,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAf,CAAR,CACH,CAVL,EAFJ,CAeKzD,OAAO,CAACL,IAAR,CAAa4D,MAAb,CAAsB,CAAtB,eACG,aAAM,SAAS,CAAC,kBAAhB,UAAoCvD,OAAO,CAACL,IAA5C,EAhBR,GADJ,cAoBI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,uBACI,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACI,KAAC,KAAD,4BADJ,cAEI,KAAC,SAAD,EACI,IAAI,CAAC,KADT,CAEI,KAAK,CAAEF,MAAM,CAACK,GAFlB,CAGI,SAAS,CAAC,6CAHd,CAII,WAAW,CAAC,YAJhB,CAKI,YAAY,CAAC,MALjB,CAMI,OAAO,CAAE,CACL4D,QAAQ,CAAE,IADL,CAELC,SAAS,CAAE,QAFN,CAGLC,UAAU,CAAE,OAHP,CAILC,OAAO,CAAE,GAAIC,KAAJ,GAAWC,OAAX,CAAmB,GAAnB,CAJJ,CAKLC,OAAO,CAAE,GAAIF,KAAJ,GAAWC,OAAX,CAAmB,CAAnB,CAAsB;AAL1B,CANb,CAaI,QAAQ,CAAE,kBAACE,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAa,CAAEtF,YAAY,CAAC,CAAEsF,CAAC,CAADA,CAAF,CAAKD,CAAC,CAADA,CAAL,CAAQ5D,KAAK,CAALA,KAAR,CAAeC,QAAQ,CAARA,QAAf,CAAD,CAAZ,CAAyC,CAbtE,EAFJ,GADJ,EADJ,EApBJ,cAwEI,KAAC,GAAD,wBACI,MAAC,SAAD,EAAW,SAAS,CAAC,oBAArB,wBACI,MAAC,KAAD,EAAO,OAAO,CAAC,oBAAf,WAAqCR,UAAU,CAACH,OAAhD,OADJ,cAEI,KAAC,KAAD,EACI,IAAI,CAAC,SADT,CAEI,KAAK,CAAEH,MAAM,CAACG,OAFlB,CAGI,IAAI,CAAC,MAHT,CAII,SAAS,CAAEI,OAAO,CAACJ,OAAR,CAAgB2D,MAAhB,CAAyB,CAAzB,CAA6B,yBAA7B,CAAyD,cAJxE,CAKI,WAAW,CAAC,sBALhB,CAMI,YAAY,CAAC,KANjB,CAOI,QAAQ,CAAE,kBAACT,KAAD,QAAWlE,aAAY,CAAC,CAAEkE,KAAK,CAALA,KAAF,CAASxC,KAAK,CAALA,KAAT,CAAgBC,QAAQ,CAARA,QAAhB,CAAD,CAAvB,EAPd,EAFJ,CAWKP,OAAO,CAACJ,OAAR,CAAgB2D,MAAhB,CAAyB,CAAzB,eACG,aAAM,SAAS,CAAC,kBAAhB,UAAoCvD,OAAO,CAACJ,OAA5C,EAZR,GADJ,EAxEJ,cA0FI,KAAC,GAAD,wBACI,MAAC,SAAD,EAAW,SAAS,CAAC,oBAArB,wBACI,KAAC,KAAD,EAAO,OAAO,CAAC,oBAAf,UAAqCG,UAAU,CAACF,GAAhD,EADJ,cAEI,KAAC,KAAD,EACI,IAAI,CAAC,KADT,CAEI,KAAK,CAAEJ,MAAM,CAACI,GAFlB,CAGI,IAAI,CAAC,MAHT,CAII,WAAW,CAAC,kBAJhB,CAKI,YAAY,CAAC,KALjB,CAMI,SAAS,CAAEG,OAAO,CAACH,GAAR,CAAY0D,MAAZ,CAAqB,CAArB,CAAyB,yBAAzB,CAAqD,cANpE,CAOI,QAAQ,CAAE,kBAACT,KAAD,QAAWlE,aAAY,CAAC,CAAEkE,KAAK,CAALA,KAAF,CAASxC,KAAK,CAALA,KAAT,CAAgBC,QAAQ,CAARA,QAAhB,CAAD,CAAvB,EAPd,EAFJ,CAWKP,OAAO,CAACH,GAAR,CAAY0D,MAAZ,CAAqB,CAArB,eACG,aAAM,SAAS,CAAC,kBAAhB,UAAoCvD,OAAO,CAACH,GAA5C,EAZR,GADJ,EA1FJ,cA4GI,KAAC,SAAD,wBACI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,qBAEQV,QAAQ,GAAK,MAAb,CACIE,mBAAmB,CAAC+E,iBAApB,cACI,gBACI,IAAI,CAAC,QADT,CAEI,kBAAgB,SAFpB,CAE8B,qBAAmB,KAFjD,CAEuD,KAAK,CAAC,mBAF7D,CAGI,SAAS,CAAC,2BAHd,wBAKI,UAAG,KAAK,CAAC,kBAAT,EALJ,YADJ,cASI,kBAVR,CAaQ/E,mBAAmB,CAACgF,iBAApB,cACI,gBACI,IAAI,CAAC,QADT,CAEI,kBAAgB,SAFpB,CAE8B,qBAAmB,KAFjD,CAEuD,KAAK,CAAC,iBAF7D,CAGI,SAAS,CAAC,4BAHd,4BAIE,UAAG,SAAS,CAAC,kBAAb,EAJF,WADJ,cAQI,kBAvBpB,EADJ,EADJ,EADJ,EA5GJ,GADJ,EADJ,EADJ,EADJ,EAFJ,EAFJ,EANJ,GANJ,GADJ,EADJ,EADJ,CAkLH,CAnLD,IAoLK,CACD,mBACI,KAAC,KAAD,CAAO,QAAP,IADJ,CAGH,CACJ,CA5ZD,CA8ZA,cAAevF,aAAf,CAKA,GAAMwF,MAAK,CAAGC,MAAM,CAChB,wCADgB,CAApB,CAIA,GAAMC,OAAM,CAAGD,MAAM,CACjB,wCADiB,CAArB,CAGA,GAAME,QAAO,CAAGF,MAAM,CAClB,wCADkB,CAAtB"},"metadata":{},"sourceType":"module"}