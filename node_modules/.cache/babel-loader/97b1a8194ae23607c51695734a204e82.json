{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { delete_GSTList_API, GetGSTList_For_Listpage, GoButton_Post_API_For_GSTMaster, GSTList_Delete_API, GST_MasterPage_delete_API, Post_GSTMaster_API } from \"../../../helpers/backend_helper\";\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\nimport { deleteGSTForMasterPageSuccess, deleteGSTListPageSuccess, getGSTListPageSuccess, postGoButtonForGST_Master_Success, postGSTMasterDataSuccess } from \"./action\";\nimport { DELETE_GST_FOR_MASTER_PAGE, DELETE_GST_LIST_PAGE, GET_GST_LIST_PAGE, POST_GO_BUTTON_FOR_GST_MASTER, POST_GST_MASTER_DATA } from \"./actionType\";\n\nfunction* Post_GSTMaster_GenratorFunction(_ref) {\n  let {\n    Data\n  } = _ref;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(Post_GSTMaster_API, Data);\n    yield put(SpinnerState(false));\n    yield put(postGSTMasterDataSuccess(response));\n    console.log(\"response\", response);\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} //listpage\n\n\n_c = Post_GSTMaster_GenratorFunction;\n\nfunction* get_GSTListPage_GenratorFunction() {\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(GetGSTList_For_Listpage);\n    yield put(SpinnerState(false));\n    yield put(getGSTListPageSuccess(response.Data));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} //delete\n\n\nfunction* delete_GSTListPage_GenratorFunction(_ref2) {\n  let {\n    CommonID\n  } = _ref2;\n  debugger;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(delete_GSTList_API, CommonID);\n    yield put(SpinnerState(false));\n    yield put(deleteGSTListPageSuccess(response));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* GSTGoButton_post_GenratorFunction(_ref3) {\n  let {\n    data\n  } = _ref3;\n  yield put(SpinnerState(true));\n\n  try {\n    const response = yield call(GoButton_Post_API_For_GSTMaster, data);\n    yield put(SpinnerState(false));\n    yield put(postGoButtonForGST_Master_Success(response.Data));\n    console.log(\"response\", response);\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n} // delete api for GST Master\n\n\n_c2 = GSTGoButton_post_GenratorFunction;\n\nfunction* deleteId_for_GSTMaster_GenratorFunction(_ref4) {\n  let {\n    id\n  } = _ref4;\n\n  try {\n    yield put(SpinnerState(true));\n    const response = yield call(GST_MasterPage_delete_API, id);\n    response[\"deletedId\"] = id;\n    yield put(deleteGSTForMasterPageSuccess(response));\n    yield put(SpinnerState(false));\n  } catch (error) {\n    yield put(SpinnerState(false));\n    yield put(AlertState({\n      Type: 4,\n      Status: true,\n      Message: \"500 Error Message\"\n    }));\n  }\n}\n\nfunction* GSTSaga() {\n  yield takeEvery(POST_GST_MASTER_DATA, Post_GSTMaster_GenratorFunction);\n  yield takeEvery(GET_GST_LIST_PAGE, get_GSTListPage_GenratorFunction);\n  yield takeEvery(DELETE_GST_LIST_PAGE, delete_GSTListPage_GenratorFunction);\n  yield takeEvery(POST_GO_BUTTON_FOR_GST_MASTER, GSTGoButton_post_GenratorFunction);\n  yield takeEvery(DELETE_GST_FOR_MASTER_PAGE, deleteId_for_GSTMaster_GenratorFunction);\n}\n\n_c3 = GSTSaga;\nexport default GSTSaga;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Post_GSTMaster_GenratorFunction\");\n$RefreshReg$(_c2, \"GSTGoButton_post_GenratorFunction\");\n$RefreshReg$(_c3, \"GSTSaga\");","map":{"version":3,"names":["call","put","takeEvery","delete_GSTList_API","GetGSTList_For_Listpage","GoButton_Post_API_For_GSTMaster","GSTList_Delete_API","GST_MasterPage_delete_API","Post_GSTMaster_API","AlertState","SpinnerState","deleteGSTForMasterPageSuccess","deleteGSTListPageSuccess","getGSTListPageSuccess","postGoButtonForGST_Master_Success","postGSTMasterDataSuccess","DELETE_GST_FOR_MASTER_PAGE","DELETE_GST_LIST_PAGE","GET_GST_LIST_PAGE","POST_GO_BUTTON_FOR_GST_MASTER","POST_GST_MASTER_DATA","Post_GSTMaster_GenratorFunction","Data","response","console","log","error","Type","Status","Message","get_GSTListPage_GenratorFunction","delete_GSTListPage_GenratorFunction","CommonID","GSTGoButton_post_GenratorFunction","data","deleteId_for_GSTMaster_GenratorFunction","id","GSTSaga"],"sources":["D:/GitProjects/Manthan/src/store/Administrator/GSTRedux/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { delete_GSTList_API, GetGSTList_For_Listpage, GoButton_Post_API_For_GSTMaster, GSTList_Delete_API, GST_MasterPage_delete_API, Post_GSTMaster_API } from \"../../../helpers/backend_helper\";\r\nimport { AlertState } from \"../../Utilites/CustomAlertRedux/actions\";\r\nimport { SpinnerState } from \"../../Utilites/Spinner/actions\";\r\nimport {\r\n  deleteGSTForMasterPageSuccess,\r\n  deleteGSTListPageSuccess,\r\n  getGSTListPageSuccess,\r\n  postGoButtonForGST_Master_Success,\r\n  postGSTMasterDataSuccess\r\n} from \"./action\";\r\nimport {\r\n  DELETE_GST_FOR_MASTER_PAGE,\r\n  DELETE_GST_LIST_PAGE,\r\n  GET_GST_LIST_PAGE,\r\n  POST_GO_BUTTON_FOR_GST_MASTER,\r\n  POST_GST_MASTER_DATA\r\n} from \"./actionType\";\r\n\r\nfunction* Post_GSTMaster_GenratorFunction({ Data }) {\r\n\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(Post_GSTMaster_API, Data);\r\n    yield put(SpinnerState(false))\r\n    yield put(postGSTMasterDataSuccess(response));\r\n    console.log(\"response\", response)\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n\r\n//listpage\r\nfunction* get_GSTListPage_GenratorFunction() {\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(GetGSTList_For_Listpage);\r\n    yield put(SpinnerState(false))\r\n    yield put(getGSTListPageSuccess(response.Data));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n//delete\r\nfunction* delete_GSTListPage_GenratorFunction({ CommonID }) {\r\n  debugger\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(delete_GSTList_API, CommonID);\r\n    yield put(SpinnerState(false))\r\n    yield put(deleteGSTListPageSuccess(response));\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\nfunction* GSTGoButton_post_GenratorFunction({ data }) {\r\n\r\n  yield put(SpinnerState(true))\r\n  try {\r\n    const response = yield call(GoButton_Post_API_For_GSTMaster, data);\r\n    yield put(SpinnerState(false))\r\n    yield put(postGoButtonForGST_Master_Success(response.Data));\r\n    console.log(\"response\",response)\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n// delete api for GST Master\r\nfunction* deleteId_for_GSTMaster_GenratorFunction({ id }) {\r\n  try {\r\n    yield put(SpinnerState(true))\r\n    const response = yield call(GST_MasterPage_delete_API, id);\r\n    response[\"deletedId\"] = id\r\n    yield put(deleteGSTForMasterPageSuccess(response))\r\n    yield put(SpinnerState(false))\r\n  } catch (error) {\r\n    yield put(SpinnerState(false))\r\n    yield put(AlertState({\r\n      Type: 4,\r\n      Status: true, Message: \"500 Error Message\",\r\n    }));\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction* GSTSaga() {\r\n  yield takeEvery(POST_GST_MASTER_DATA, Post_GSTMaster_GenratorFunction);\r\n  yield takeEvery(GET_GST_LIST_PAGE, get_GSTListPage_GenratorFunction);\r\n  yield takeEvery(DELETE_GST_LIST_PAGE, delete_GSTListPage_GenratorFunction);\r\n  yield takeEvery(POST_GO_BUTTON_FOR_GST_MASTER, GSTGoButton_post_GenratorFunction);\r\n  yield takeEvery(DELETE_GST_FOR_MASTER_PAGE, deleteId_for_GSTMaster_GenratorFunction);\r\n\r\n}\r\n\r\nexport default GSTSaga;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}