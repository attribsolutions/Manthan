{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitProjects\\\\Manthan\\\\src\\\\pages\\\\Adminisrator\\\\HPagesPages\\\\HPageMaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Select from \"react-select\";\nimport { Card, CardBody, Col, Container, Row, Label, Button, FormGroup, CardHeader, Modal } from \"reactstrap\";\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AvField from \"availity-reactstrap-validation/lib/AvField\";\nimport { Tbody, Thead, Table } from \"react-super-responsive-table\";\nimport { editHPagesIDSuccess, getPageAccess_DropDown_API, getPageList, getPageListSuccess, saveHPages, saveHPagesSuccess, updateHPages } from \"../../../store/Administrator/HPagesRedux/actions\";\nimport { fetchModelsList, PostModelsSubmitSuccess } from \"../../../store/Administrator/ModulesRedux/actions\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { AlertState } from \"../../../store/actions\";\nimport { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\nimport Modules from \"../ModulesPages/Modules\";\nimport { newCustomAlert } from \"../../../components/Common/CustomAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HPageMaster = props => {\n  _s();\n\n  const formRef = useRef(null);\n  const dispatch = useDispatch();\n  const history = useHistory(); //*** \"isEditdata get all data from ModuleID for Binding  Form controls\n\n  let editDataGatingFromList = props.state; //SetState  Edit data Geting From Modules List component\n\n  const [EditData, setEditData] = useState([]);\n  const [pageMode, setPageMode] = useState(\"save\");\n  const [userPageAccessState, setUserPageAccessState] = useState('');\n  const [tablePageAccessDataState, setTablePageAccessDataState] = useState([]);\n  const [module_DropdownSelect, setModule_DropdownSelect] = useState(\"\");\n  const [pageType_DropdownSelect, setPageType_DropdownSelect] = useState(\"\");\n  const [pageList_DropdownSelect, setPageList_DropdownSelect] = useState(\"\");\n  const [pageAccessDropDownView, setPageAccessDropDownView] = useState(false);\n  const [modal_center, setmodal_center] = useState(false);\n  const [pageAccess_DropDownSelect, setPageAccess_DropDownSelect] = useState(\"\"); //Access redux store Data\n\n  const {\n    ModuleData,\n    PostAPIResponse,\n    PageList,\n    PageAccess,\n    RoleAccessModifiedinSingleArray,\n    modulePostAPIResponse\n  } = useSelector(state => ({\n    ModuleData: state.Modules.modulesList,\n    PostAPIResponse: state.H_Pages.saveMessage,\n    PageList: state.H_Pages.PageList,\n    PageAccess: state.H_Pages.PageAccess,\n    RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\n    modulePostAPIResponse: state.Modules.modulesSubmitSuccesss\n  })); // userAccess useEffect\n\n  useEffect(() => {\n    if (editDataGatingFromList === undefined) {\n      const userAcc = CommonGetRoleAccessFunction(history);\n\n      if (!(userAcc === undefined)) {\n        setUserPageAccessState(userAcc);\n      }\n    } else {\n      let RelatedPageID = history.location.state.UserDetails.RelatedPageID;\n      const userfound = RoleAccessModifiedinSingleArray.find(element => {\n        return element.id === RelatedPageID;\n      });\n      setUserPageAccessState(userfound);\n    }\n  }, [history]); // For PageAccess DropDown\n\n  useEffect(() => {\n    dispatch(getPageAccess_DropDown_API());\n  }, [dispatch]); // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\n\n  useEffect(() => {\n    if (!(userPageAccessState === '')) {\n      document.getElementById(\"txtName\").focus();\n    }\n\n    dispatch(fetchModelsList());\n\n    if (!(editDataGatingFromList === undefined)) {\n      dispatch(BreadcrumbShow(editDataGatingFromList.Name));\n      setEditData(editDataGatingFromList);\n      setPageMode(\"edit\");\n      setTablePageAccessDataState(editDataGatingFromList.PagePageAccess);\n      setModule_DropdownSelect({\n        label: editDataGatingFromList.ModuleName,\n        value: editDataGatingFromList.Module\n      });\n      setPageList_DropdownSelect({\n        value: editDataGatingFromList.RelatedPageID,\n        label: editDataGatingFromList.RelatedPageName\n      }); // When value 2 is get then DropDown lable is \"ListPage\" and ShowMenu is disabled Otherwise DropDown lable is \"AddPage\" and ShowMenu is enabled\n\n      let pageType_ID = editDataGatingFromList.PageType;\n\n      if (pageType_ID === 2) {\n        setPageAccessDropDownView(true);\n        dispatch(getPageList(pageType_ID));\n        setPageType_DropdownSelect({\n          value: 2,\n          label: \"ListPage\"\n        });\n      } else if (pageType_ID === 1) {\n        dispatch(getPageListSuccess([]));\n        setPageList_DropdownSelect({\n          value: 0\n        });\n        setPageType_DropdownSelect({\n          value: 1,\n          label: \"AddPage\"\n        });\n      }\n\n      dispatch(editHPagesIDSuccess({\n        Status: false\n      }));\n    }\n  }, [editDataGatingFromList]); // This UseEffect clear Form Data and when modules Save Successfully.\n\n  useEffect(() => {\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\n      dispatch(saveHPagesSuccess({\n        Status: false\n      }));\n      setModule_DropdownSelect(\"\");\n      setPageAccess_DropDownSelect(\"\");\n      setPageType_DropdownSelect(\"\");\n      setPageList_DropdownSelect(\"\");\n      formRef.current.reset();\n\n      if (pageMode === \"true\") {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message\n        }));\n      } else {\n        dispatch(AlertState({\n          Type: 1,\n          Status: true,\n          Message: PostAPIResponse.Message,\n          RedirectPath: `/PageList`,\n          AfterResponseAction: false\n        }));\n      }\n    } else if (PostAPIResponse.Status === true) {\n      dispatch(saveHPagesSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(PostAPIResponse.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [PostAPIResponse]);\n  useEffect(() => {\n    if (modulePostAPIResponse.Status === true && modulePostAPIResponse.StatusCode === 200) {\n      dispatch(PostModelsSubmitSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 1,\n        Status: true,\n        Message: modulePostAPIResponse.Message\n      }));\n      tog_center();\n    } else if (modulePostAPIResponse.Status === true) {\n      dispatch(PostModelsSubmitSuccess({\n        Status: false\n      }));\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: JSON.stringify(modulePostAPIResponse.Message),\n        RedirectPath: false,\n        AfterResponseAction: false\n      }));\n    }\n  }, [modulePostAPIResponse]);\n  const PageAccessValues = PageAccess.map(Data => ({\n    value: Data.id,\n    label: Data.Name\n  }));\n  const Module_DropdownOption = ModuleData.map(d => ({\n    value: d.id,\n    label: d.Name\n  })); // PageList Dropdown\n\n  const PageList_DropdownOption = PageList.map(d => ({\n    value: d.id,\n    label: d.Name\n  })); // PageList Dropdown\n\n  const PageType_DropdownOption = [{\n    value: 1,\n    label: \"Add Page\"\n  }, {\n    value: 2,\n    label: \"Page List\"\n  }]; //'Save' And 'Update' Button Handller\n\n  const FormSubmitButton_Handler = (event, values) => {\n    if (tablePageAccessDataState.length <= 0 && !(pageType_DropdownSelect.value === 1)) {\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: \"At Least One PageAccess is Select\",\n        RedirectPath: false,\n        PermissionAction: false\n      }));\n      return;\n    }\n\n    const jsonBody = JSON.stringify({\n      Name: values.Name,\n      Module: module_DropdownSelect.value,\n      isActive: values.isActive,\n      DisplayIndex: values.displayIndex,\n      Icon: values.Icon,\n      ActualPagePath: values.pagePath,\n      PageType: pageType_DropdownSelect.value,\n      PageHeading: values.pageheading,\n      PageDescription: values.pagedescription,\n      PageDescriptionDetails: values.pageheadingdescription,\n      RelatedPageID: pageList_DropdownSelect.value,\n      CreatedBy: 1,\n      UpdatedBy: 1,\n      PagePageAccess: tablePageAccessDataState.map(d => ({\n        Access: d.AccessID\n      }))\n    });\n\n    if (pageMode === \"edit\") {\n      dispatch(updateHPages(jsonBody, EditData.id));\n    } else {\n      dispatch(saveHPages(jsonBody));\n    }\n  }; // for module dropdown\n\n\n  const Module_DropdownSelectHandller = e => {\n    setModule_DropdownSelect(e);\n  };\n\n  function PageAccess_DropdownSelect_Handler(e) {\n    setPageAccess_DropDownSelect(e);\n  } //  for PageType deropDown\n\n\n  const PageType_DropdownSelectHandller = e => {\n    if (e.value === 2) {\n      // let showCheckBox = document.getElementById(\"inp-showOnMenu\")\n      const findShowOnMenu = PageAccessValues.find(element => {\n        return element.label === \"IsShowOnMenu\";\n      });\n\n      if (!(findShowOnMenu === undefined)) {\n        setTablePageAccessDataState([{\n          AccessID: findShowOnMenu.value,\n          AccessName: findShowOnMenu.label\n        }]);\n      } // setisShowPageChecked(true)\n\n\n      dispatch(getPageList(e.value)); // showCheckBox.disabled = true\n\n      setPageAccessDropDownView(true);\n    } else if (e.value === 1) {\n      setTablePageAccessDataState([]); // showCheckBox.disabled = false\n\n      setPageAccessDropDownView(false);\n      dispatch(getPageListSuccess([]));\n      setPageList_DropdownSelect({\n        value: 0\n      });\n    }\n\n    setPageType_DropdownSelect(e);\n  };\n\n  const PageList_DropdownSelectHandller = e => {\n    setPageList_DropdownSelect(e);\n  }; // ADD Button handler\n\n\n  function Common_Find_Function(arry, elementValue, findvalue) {\n    return arry.find(index => {\n      return index[elementValue] === findvalue;\n    });\n  }\n\n  function AddRoleHandler() {\n    const drop_value = pageAccess_DropDownSelect.value;\n    const drop_label = pageAccess_DropDownSelect.label; // find function pass Parameter (array,indexParameter,findvalue)\n\n    const find = Common_Find_Function(tablePageAccessDataState, \"AccessID\", drop_value);\n\n    if (pageAccess_DropDownSelect.length <= 0) {\n      dispatch(AlertState({\n        Type: 3,\n        Status: true,\n        Message: \"Select One DropDown Value\"\n      }));\n    } else if (find === undefined) {\n      if (drop_label === \"IsEdit\") {\n        // find function pass Parameter (array,indexParameter,findvalue)\n        const findIsView = Common_Find_Function(tablePageAccessDataState, \"AccessName\", \"IsView\"); // find function pass Parameter (array,indexParameter,findvalue)\n\n        const find_IsEditSelf = Common_Find_Function(tablePageAccessDataState, \"AccessName\", \"IsEditSelf\");\n        const ViewValues = Common_Find_Function(PageAccessValues, \"label\", \"IsView\");\n        const IsEditSelfValues = Common_Find_Function(PageAccessValues, \"label\", \"IsEditSelf\");\n\n        if (findIsView === undefined && find_IsEditSelf === undefined) {\n          // find function pass Parameter (array,indexParameter,findvalue)\n          setTablePageAccessDataState([...tablePageAccessDataState, {\n            AccessID: ViewValues.value,\n            AccessName: ViewValues.label\n          }, {\n            AccessID: IsEditSelfValues.value,\n            AccessName: IsEditSelfValues.label\n          }, {\n            AccessID: drop_value,\n            AccessName: drop_label\n          }]);\n          return;\n        } else if (findIsView === undefined) {\n          setTablePageAccessDataState([...tablePageAccessDataState, {\n            AccessID: ViewValues.value,\n            AccessName: ViewValues.label\n          }, {\n            AccessID: drop_value,\n            AccessName: drop_label\n          }]);\n          return;\n        } else if (find_IsEditSelf === undefined) {\n          setTablePageAccessDataState([...tablePageAccessDataState, {\n            AccessID: IsEditSelfValues.value,\n            AccessName: IsEditSelfValues.label\n          }, {\n            AccessID: drop_value,\n            AccessName: drop_label\n          }]);\n          return;\n        }\n      }\n\n      setTablePageAccessDataState([...tablePageAccessDataState, {\n        AccessID: drop_value,\n        AccessName: drop_label\n      }]);\n    } else {\n      dispatch(AlertState({\n        Type: 4,\n        Status: true,\n        Message: \"PageAccess Data already Exists \"\n      }));\n    }\n  } // For Delete Button in table\n\n\n  function PageAccess_DeleteButton_Handller(tableValue) {\n    setTablePageAccessDataState(tablePageAccessDataState.filter(item => !(item.AccessID === tableValue)));\n  }\n\n  function tog_center() {\n    setmodal_center(!modal_center);\n  }\n\n  function DropDownAddHandler() {\n    newCustomAlert(); // tog_center()\n  }\n\n  function TableBodyFunction() {\n    return tablePageAccessDataState.map(TableValue => {\n      let ViewValues = false;\n\n      if (TableValue.AccessName === \"IsView\" || TableValue.AccessName === \"IsEditSelf\") {\n        // find function pass Parameter (array,indexParameter,findvalue)\n        // const ViewValues = Common_Find_Function(PageAccessValues, \"label\", \"IsView\");\n        const View = tablePageAccessDataState.find(element => {\n          return element.AccessName === \"IsEdit\";\n        });\n        if (!(View === undefined)) ViewValues = true;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: TableValue.AccessName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: !(TableValue.AccessName === \"IsShowOnMenu\") && !ViewValues ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-trash-can d-block text-danger font-size-20\",\n            onClick: () => {\n              PageAccess_DeleteButton_Handller(TableValue.AccessID);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this);\n    });\n  } // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\n\n\n  var IsEditMode_Css = \"\";\n\n  if (pageMode === \"edit\") {\n    IsEditMode_Css = \"-5.5%\";\n  }\n\n  ;\n\n  if (!(userPageAccessState === '')) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        style: {\n          marginTop: IsEditMode_Css\n        },\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          breadcrumbItem: userPageAccessState.PageHeading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"Page Master| FoodERP-React FrontEnd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-black\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"card-header   text-black\",\n              style: {\n                backgroundColor: \"#dddddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title text-black\",\n                children: userPageAccessState.PageDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc text-black\",\n                children: userPageAccessState.PageDescriptionDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(AvForm, {\n                onValidSubmit: (e, v) => {\n                  FormSubmitButton_Handler(e, v);\n                },\n                ref: formRef,\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    style: {\n                      backgroundColor: \"whitesmoke\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        md: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3 \",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            children: \"Name \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 508,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                            name: \"Name\",\n                            id: \"txtName\",\n                            value: EditData.Name,\n                            type: \"text\",\n                            placeholder: \"Please Enter Name\",\n                            autoComplete: \"off\",\n                            validate: {\n                              required: {\n                                value: true,\n                                errorMessage: \"Please Enter Name\"\n                              }\n                            },\n                            onChange: e => {\n                              dispatch(BreadcrumbShow(e.target.value));\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 509,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 507,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"1\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"7\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3 \",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            children: \"Page Description \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 533,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                            name: \"pagedescription\",\n                            value: EditData.PageDescription,\n                            type: \"text\",\n                            placeholder: \"Please Enter Page Description\",\n                            autoComplete: \"off\",\n                            validate: {\n                              required: {\n                                value: true,\n                                errorMessage: \"Please Enter Page Description\"\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 534,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 532,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        md: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            children: \"Page Heading\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 554,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                            name: \"pageheading\",\n                            type: \"text\",\n                            defaultValue: \"\",\n                            value: EditData.PageHeading,\n                            placeholder: \"Enter your Page Heading \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 555,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 553,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"1\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 565,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"7\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            children: \"Page Description Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 568,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                            name: \"pageheadingdescription\",\n                            type: \"text\",\n                            defaultValue: \"\",\n                            value: EditData.PageDescriptionDetails,\n                            placeholder: \"Enter your Description \",\n                            validate: {\n                              required: {\n                                value: true,\n                                errorMessage: \"Please Enter Page Description Deails\"\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 569,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 567,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 566,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  className: \" mt-n2 text-black\",\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    style: {\n                      backgroundColor: \"whitesmoke\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        md: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3 \",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            htmlFor: \"validationCustom01\",\n                            children: \"Module\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 595,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            value: module_DropdownSelect,\n                            options: Module_DropdownOption,\n                            autoComplete: \"off\",\n                            onChange: e => {\n                              Module_DropdownSelectHandller(e);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 596,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 594,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 592,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"1\",\n                        className: \" mt-3\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          className: \" mt-3 btn btn-sm\",\n                          type: \"button\",\n                          onClick: () => {\n                            DropDownAddHandler();\n                          },\n                          children: \"add\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 608,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 607,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            htmlFor: \"validationCustom01\",\n                            children: \"Page Type\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 613,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            value: pageType_DropdownSelect,\n                            options: PageType_DropdownOption,\n                            autoComplete: \"off\",\n                            onChange: e => {\n                              PageType_DropdownSelectHandller(e);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 614,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 612,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 611,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"1\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 625,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            htmlFor: \"validationCustom01\",\n                            children: \"Related Page List\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 628,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            value: pageList_DropdownSelect,\n                            options: PageList_DropdownOption,\n                            autoComplete: \"off\",\n                            onChange: e => {\n                              PageList_DropdownSelectHandller(e);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 631,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 627,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 626,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        md: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            htmlFor: \"validationCustom01\",\n                            children: \"Display Index\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 646,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                            name: \"displayIndex\",\n                            value: EditData.DisplayIndex,\n                            type: \"text\",\n                            autoComplete: \"off\",\n                            placeholder: \" Please Enter Display Index\",\n                            validate: {\n                              number: true,\n                              required: {\n                                value: true,\n                                errorMessage: \"Please Enter Display Index Only 2 Digit \"\n                              },\n                              tel: {\n                                pattern: /^\\d{1,2}$/\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 649,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 645,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"1\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 670,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            htmlFor: \"validationCustom01\",\n                            children: \"Page Path\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 673,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                            name: \"pagePath\",\n                            value: EditData.ActualPagePath,\n                            type: \"text\",\n                            placeholder: \"Please Enter Page Path\",\n                            validate: {\n                              required: {\n                                value: true,\n                                errorMessage: \"Please Enter Page Path\"\n                              }\n                            },\n                            autoComplete: \"off\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 674,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 672,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 671,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"1\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 690,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        md: \"3\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          className: \"mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            htmlFor: \"validationCustom01\",\n                            children: \"Icon\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 693,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                            name: \"Icon\",\n                            value: EditData.Icon,\n                            type: \"text\",\n                            placeholder: \"Please Enter Icon\",\n                            validate: {\n                              required: {\n                                value: true,\n                                errorMessage: \"Please Enter Icon\"\n                              }\n                            },\n                            autoComplete: \"off\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 694,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 692,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 691,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-1 col col-sm-6\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          className: \"justify-content-md-left\",\n                          children: [/*#__PURE__*/_jsxDEV(Label, {\n                            htmlFor: \"horizontal-firstname-input\",\n                            className: \"col-sm-2 col-form-label\",\n                            children: [\"Active\", \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 727,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: 2,\n                            style: {\n                              marginTop: \"9px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"form-check form-switch form-switch-md mb-1\",\n                              dir: \"ltr\",\n                              children: [/*#__PURE__*/_jsxDEV(AvInput, {\n                                type: \"checkbox\",\n                                className: \"form-check-input\",\n                                id: \"customSwitchsizemd\",\n                                checked: EditData.isActive,\n                                name: \"isActive\",\n                                defaultChecked: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 738,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-check-label\",\n                                htmlFor: \"customSwitchsizemd\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 746,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 734,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 733,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 713,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 712,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 711,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 19\n                }, this), pageAccessDropDownView ? /*#__PURE__*/_jsxDEV(Card, {\n                  className: \" mt-n2 text-black\",\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    style: {\n                      backgroundColor: \"whitesmoke\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      className: \"\",\n                      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \" ml-3 col col-sm-4 \",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom01\",\n                          children: \"Page Access\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 762,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          options: PageAccessValues,\n                          onChange: e => {\n                            PageAccess_DropdownSelect_Handler(e);\n                          } // defaultValue={{ label: \"IsShowOnMenu\", value: 1 }}\n                          ,\n                          classNamePrefix: \"select2-selection\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 765,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 761,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        sm: 1,\n                        style: {\n                          marginTop: \"28px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          type: \"button\",\n                          className: \"btn btn-sm mt-1 mb-0 btn-light  btn-outline-primary  \",\n                          onClick: () => AddRoleHandler(),\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"dripicons-plus \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 781,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 776,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 775,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        sm: 3,\n                        style: {\n                          marginTop: \"28px\"\n                        },\n                        children: tablePageAccessDataState.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"table-responsive\",\n                          children: /*#__PURE__*/_jsxDEV(Table, {\n                            className: \"table table-bordered  text-center\",\n                            children: [/*#__PURE__*/_jsxDEV(Thead, {\n                              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                  children: \"Page Access\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 791,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                  children: \"Action\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 793,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 790,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 789,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                              children: TableBodyFunction()\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 797,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 788,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 787,\n                          columnNumber: 31\n                        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: \" \"\n                        }, void 0, false)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 785,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 760,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          sm: 2,\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                              type: \"submit\",\n                              \"data-mdb-toggle\": \"tooltip\",\n                              \"data-mdb-placement\": \"top\",\n                              title: \"Update Role\",\n                              className: \"btn btn-success w-md\",\n                              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                class: \"fas fa-edit me-2\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 818,\n                                columnNumber: 41\n                              }, this), \"Update\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 813,\n                              columnNumber: 39\n                            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                              type: \"submit\",\n                              \"data-mdb-toggle\": \"tooltip\",\n                              \"data-mdb-placement\": \"top\",\n                              title: \"Save Role\",\n                              className: \"btn btn-primary w-md\",\n                              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fas fa-save me-2\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 828,\n                                columnNumber: 43\n                              }, this), \" Save\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 824,\n                              columnNumber: 41\n                            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 809,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 808,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 807,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 759,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Card, {\n                  className: \" mt-n2 text-black\",\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    style: {\n                      backgroundColor: \"whitesmoke\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          sm: 2,\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: pageMode === \"edit\" ? userPageAccessState.RoleAccess_IsEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n                              type: \"submit\",\n                              \"data-mdb-toggle\": \"tooltip\",\n                              \"data-mdb-placement\": \"top\",\n                              title: \"Update Role\",\n                              className: \"btn btn-success w-md\",\n                              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                class: \"fas fa-edit me-2\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 855,\n                                columnNumber: 41\n                              }, this), \"Update\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 850,\n                              columnNumber: 39\n                            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : userPageAccessState.RoleAccess_IsSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n                              type: \"submit\",\n                              \"data-mdb-toggle\": \"tooltip\",\n                              \"data-mdb-placement\": \"top\",\n                              title: \"Save Role\",\n                              className: \"btn btn-primary w-md\",\n                              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fas fa-save me-2\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 865,\n                                columnNumber: 43\n                              }, this), \" Save\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 861,\n                              columnNumber: 41\n                            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 846,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 845,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 844,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 843,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modal_center,\n            toggle: () => {\n              tog_center();\n            },\n            size: \"xl\",\n            children: /*#__PURE__*/_jsxDEV(Modules, {\n              pageMode: \"dropdownAdd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(HPageMaster, \"oqYCggbiKbnWdN++kqgYDCeEfeA=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = HPageMaster;\nexport default HPageMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"HPageMaster\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Select","Card","CardBody","Col","Container","Row","Label","Button","FormGroup","CardHeader","Modal","Breadcrumb","AvForm","AvInput","useDispatch","useSelector","AvField","Tbody","Thead","Table","editHPagesIDSuccess","getPageAccess_DropDown_API","getPageList","getPageListSuccess","saveHPages","saveHPagesSuccess","updateHPages","fetchModelsList","PostModelsSubmitSuccess","MetaTags","AlertState","BreadcrumbShow","useHistory","CommonGetRoleAccessFunction","Modules","newCustomAlert","HPageMaster","props","formRef","dispatch","history","editDataGatingFromList","state","EditData","setEditData","pageMode","setPageMode","userPageAccessState","setUserPageAccessState","tablePageAccessDataState","setTablePageAccessDataState","module_DropdownSelect","setModule_DropdownSelect","pageType_DropdownSelect","setPageType_DropdownSelect","pageList_DropdownSelect","setPageList_DropdownSelect","pageAccessDropDownView","setPageAccessDropDownView","modal_center","setmodal_center","pageAccess_DropDownSelect","setPageAccess_DropDownSelect","ModuleData","PostAPIResponse","PageList","PageAccess","RoleAccessModifiedinSingleArray","modulePostAPIResponse","modulesList","H_Pages","saveMessage","Login","RoleAccessUpdateData","modulesSubmitSuccesss","undefined","userAcc","RelatedPageID","location","UserDetails","userfound","find","element","id","document","getElementById","focus","Name","PagePageAccess","label","ModuleName","value","Module","RelatedPageName","pageType_ID","PageType","Status","StatusCode","current","reset","Type","Message","RedirectPath","AfterResponseAction","JSON","stringify","tog_center","PageAccessValues","map","Data","Module_DropdownOption","d","PageList_DropdownOption","PageType_DropdownOption","FormSubmitButton_Handler","event","values","length","PermissionAction","jsonBody","isActive","DisplayIndex","displayIndex","Icon","ActualPagePath","pagePath","PageHeading","pageheading","PageDescription","pagedescription","PageDescriptionDetails","pageheadingdescription","CreatedBy","UpdatedBy","Access","AccessID","Module_DropdownSelectHandller","e","PageAccess_DropdownSelect_Handler","PageType_DropdownSelectHandller","findShowOnMenu","AccessName","PageList_DropdownSelectHandller","Common_Find_Function","arry","elementValue","findvalue","index","AddRoleHandler","drop_value","drop_label","findIsView","find_IsEditSelf","ViewValues","IsEditSelfValues","PageAccess_DeleteButton_Handller","tableValue","filter","item","DropDownAddHandler","TableBodyFunction","TableValue","View","IsEditMode_Css","marginTop","backgroundColor","v","required","errorMessage","target","number","tel","pattern","RoleAccess_IsEdit","RoleAccess_IsSave"],"sources":["D:/GitProjects/Manthan/src/pages/Adminisrator/HPagesPages/HPageMaster.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CardHeader,\r\n  Modal,\r\n} from \"reactstrap\";\r\nimport Breadcrumb from \"../../../components/Common/Breadcrumb\";\r\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AvField from \"availity-reactstrap-validation/lib/AvField\";\r\nimport { Tbody, Thead, Table } from \"react-super-responsive-table\";\r\nimport {\r\n  editHPagesIDSuccess,\r\n  getPageAccess_DropDown_API,\r\n  getPageList,\r\n  getPageListSuccess,\r\n  saveHPages,\r\n  saveHPagesSuccess,\r\n  updateHPages,\r\n} from \"../../../store/Administrator/HPagesRedux/actions\";\r\nimport { fetchModelsList, PostModelsSubmitSuccess } from \"../../../store/Administrator/ModulesRedux/actions\";\r\nimport { MetaTags } from \"react-meta-tags\";\r\nimport { AlertState } from \"../../../store/actions\";\r\nimport { BreadcrumbShow } from \"../../../store/Utilites/Breadcrumb/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CommonGetRoleAccessFunction } from \"../../../components/Common/CommonGetRoleAccessFunction\";\r\nimport Modules from \"../ModulesPages/Modules\";\r\nimport { newCustomAlert } from \"../../../components/Common/CustomAlert\";\r\n\r\nconst HPageMaster = (props) => {\r\n\r\n  const formRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n\r\n  //*** \"isEditdata get all data from ModuleID for Binding  Form controls\r\n  let editDataGatingFromList = props.state;\r\n\r\n  //SetState  Edit data Geting From Modules List component\r\n  const [EditData, setEditData] = useState([]);\r\n  const [pageMode, setPageMode] = useState(\"save\");\r\n  const [userPageAccessState, setUserPageAccessState] = useState('');\r\n\r\n  const [tablePageAccessDataState, setTablePageAccessDataState] = useState([]);\r\n  const [module_DropdownSelect, setModule_DropdownSelect] = useState(\"\");\r\n  const [pageType_DropdownSelect, setPageType_DropdownSelect] = useState(\"\");\r\n  const [pageList_DropdownSelect, setPageList_DropdownSelect] = useState(\"\");\r\n  const [pageAccessDropDownView, setPageAccessDropDownView] = useState(false);\r\n  const [modal_center, setmodal_center] = useState(false);\r\n\r\n  const [pageAccess_DropDownSelect, setPageAccess_DropDownSelect] =\r\n    useState(\"\");\r\n\r\n  //Access redux store Data\r\n  const { ModuleData, PostAPIResponse, PageList, PageAccess, RoleAccessModifiedinSingleArray, modulePostAPIResponse } = useSelector(\r\n    (state) => ({\r\n      ModuleData: state.Modules.modulesList,\r\n      PostAPIResponse: state.H_Pages.saveMessage,\r\n      PageList: state.H_Pages.PageList,\r\n      PageAccess: state.H_Pages.PageAccess,\r\n      RoleAccessModifiedinSingleArray: state.Login.RoleAccessUpdateData,\r\n      modulePostAPIResponse: state.Modules.modulesSubmitSuccesss\r\n    })\r\n  );\r\n  // userAccess useEffect\r\n  useEffect(() => {\r\n    if ((editDataGatingFromList === undefined)) {\r\n      const userAcc = CommonGetRoleAccessFunction(history)\r\n      if (!(userAcc === undefined)) {\r\n        setUserPageAccessState(userAcc)\r\n      }\r\n    } else {\r\n      let RelatedPageID = history.location.state.UserDetails.RelatedPageID\r\n      const userfound = RoleAccessModifiedinSingleArray.find((element) => {\r\n        return element.id === RelatedPageID\r\n      })\r\n      setUserPageAccessState(userfound)\r\n    }\r\n\r\n  }, [history])\r\n  // For PageAccess DropDown\r\n  useEffect(() => {\r\n    dispatch(getPageAccess_DropDown_API());\r\n  }, [dispatch]);\r\n\r\n  // This UseEffect 'SetEdit' data and 'autoFocus' while this Component load First Time.\r\n  useEffect(() => {\r\n\r\n    if (!(userPageAccessState === '')) { document.getElementById(\"txtName\").focus(); }\r\n    dispatch(fetchModelsList());\r\n    if (!(editDataGatingFromList === undefined)) {\r\n      dispatch(BreadcrumbShow(editDataGatingFromList.Name))\r\n      setEditData(editDataGatingFromList);\r\n      setPageMode(\"edit\");\r\n      setTablePageAccessDataState(editDataGatingFromList.PagePageAccess);\r\n\r\n      setModule_DropdownSelect({\r\n        label: editDataGatingFromList.ModuleName,\r\n        value: editDataGatingFromList.Module,\r\n      });\r\n      setPageList_DropdownSelect({\r\n        value: editDataGatingFromList.RelatedPageID,\r\n        label: editDataGatingFromList.RelatedPageName,\r\n      });\r\n\r\n      // When value 2 is get then DropDown lable is \"ListPage\" and ShowMenu is disabled Otherwise DropDown lable is \"AddPage\" and ShowMenu is enabled\r\n      let pageType_ID = editDataGatingFromList.PageType;\r\n\r\n      if (pageType_ID === 2) {\r\n        setPageAccessDropDownView(true);\r\n        dispatch(getPageList(pageType_ID));\r\n        setPageType_DropdownSelect({ value: 2, label: \"ListPage\" });\r\n      } else if (pageType_ID === 1) {\r\n        dispatch(getPageListSuccess([]));\r\n        setPageList_DropdownSelect({ value: 0 });\r\n        setPageType_DropdownSelect({ value: 1, label: \"AddPage\" });\r\n      }\r\n      dispatch(editHPagesIDSuccess({ Status: false }));\r\n    }\r\n  }, [editDataGatingFromList]);\r\n\r\n  // This UseEffect clear Form Data and when modules Save Successfully.\r\n  useEffect(() => {\r\n    if (PostAPIResponse.Status === true && PostAPIResponse.StatusCode === 200) {\r\n      dispatch(saveHPagesSuccess({ Status: false }));\r\n      setModule_DropdownSelect(\"\");\r\n      setPageAccess_DropDownSelect(\"\");\r\n      setPageType_DropdownSelect(\"\");\r\n      setPageList_DropdownSelect(\"\");\r\n      formRef.current.reset();\r\n\r\n      if (pageMode === \"true\") {\r\n        dispatch(\r\n          AlertState({\r\n            Type: 1,\r\n            Status: true,\r\n            Message: PostAPIResponse.Message,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          AlertState({\r\n            Type: 1,\r\n            Status: true,\r\n            Message: PostAPIResponse.Message,\r\n            RedirectPath: `/PageList`,\r\n            AfterResponseAction: false,\r\n          })\r\n        );\r\n      }\r\n    } else if (PostAPIResponse.Status === true) {\r\n      dispatch(saveHPagesSuccess({ Status: false }));\r\n      dispatch(\r\n        AlertState({\r\n          Type: 4,\r\n          Status: true,\r\n          Message: JSON.stringify(PostAPIResponse.Message),\r\n          RedirectPath: false,\r\n          AfterResponseAction: false,\r\n        })\r\n      );\r\n    }\r\n  }, [PostAPIResponse]);\r\n\r\n  useEffect(() => {\r\n    if ((modulePostAPIResponse.Status === true) && (modulePostAPIResponse.StatusCode === 200)) {\r\n      dispatch(PostModelsSubmitSuccess({ Status: false }))\r\n      dispatch(AlertState({\r\n        Type: 1,\r\n        Status: true,\r\n        Message: modulePostAPIResponse.Message,\r\n      }))\r\n      tog_center()\r\n    } else if (modulePostAPIResponse.Status === true) {\r\n      dispatch(PostModelsSubmitSuccess({ Status: false }))\r\n      dispatch(AlertState({\r\n        Type: 4,\r\n        Status: true,\r\n        Message: JSON.stringify(modulePostAPIResponse.Message),\r\n        RedirectPath: false,\r\n        AfterResponseAction: false\r\n      }));\r\n    }\r\n\r\n  }, [modulePostAPIResponse])\r\n\r\n\r\n\r\n\r\n\r\n  const PageAccessValues = PageAccess.map((Data) => ({\r\n    value: Data.id,\r\n    label: Data.Name,\r\n  }));\r\n\r\n  const Module_DropdownOption = ModuleData.map((d) => ({\r\n    value: d.id,\r\n    label: d.Name,\r\n  }));\r\n\r\n  // PageList Dropdown\r\n  const PageList_DropdownOption = PageList.map((d) => ({\r\n    value: d.id,\r\n    label: d.Name,\r\n  }));\r\n\r\n  // PageList Dropdown\r\n  const PageType_DropdownOption = [\r\n    {\r\n      value: 1,\r\n      label: \"Add Page\",\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"Page List\",\r\n    },\r\n  ];\r\n\r\n  //'Save' And 'Update' Button Handller\r\n  const FormSubmitButton_Handler = (event, values) => {\r\n    if (\r\n      tablePageAccessDataState.length <= 0 &&\r\n      !(pageType_DropdownSelect.value === 1)\r\n    ) {\r\n      dispatch(\r\n        AlertState({\r\n          Type: 4,\r\n          Status: true,\r\n          Message: \"At Least One PageAccess is Select\",\r\n          RedirectPath: false,\r\n          PermissionAction: false,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    const jsonBody = JSON.stringify({\r\n      Name: values.Name,\r\n      Module: module_DropdownSelect.value,\r\n      isActive: values.isActive,\r\n      DisplayIndex: values.displayIndex,\r\n      Icon: values.Icon,\r\n      ActualPagePath: values.pagePath,\r\n      PageType: pageType_DropdownSelect.value,\r\n      PageHeading: values.pageheading,\r\n      PageDescription: values.pagedescription,\r\n      PageDescriptionDetails: values.pageheadingdescription,\r\n      RelatedPageID: pageList_DropdownSelect.value,\r\n      CreatedBy: 1,\r\n      UpdatedBy: 1,\r\n      PagePageAccess: tablePageAccessDataState.map((d) => ({\r\n        Access: d.AccessID,\r\n      })),\r\n    });\r\n\r\n    if (pageMode === \"edit\") {\r\n      dispatch(updateHPages(jsonBody, EditData.id));\r\n    } else {\r\n      dispatch(saveHPages(jsonBody));\r\n    }\r\n  };\r\n\r\n  // for module dropdown\r\n  const Module_DropdownSelectHandller = (e) => {\r\n    setModule_DropdownSelect(e);\r\n  };\r\n\r\n  function PageAccess_DropdownSelect_Handler(e) {\r\n    setPageAccess_DropDownSelect(e);\r\n  }\r\n\r\n  //  for PageType deropDown\r\n  const PageType_DropdownSelectHandller = (e) => {\r\n    if (e.value === 2) {\r\n      // let showCheckBox = document.getElementById(\"inp-showOnMenu\")\r\n      const findShowOnMenu = PageAccessValues.find((element) => {\r\n        return element.label === \"IsShowOnMenu\";\r\n      });\r\n      if (!(findShowOnMenu === undefined)) {\r\n        setTablePageAccessDataState([\r\n          {\r\n            AccessID: findShowOnMenu.value,\r\n            AccessName: findShowOnMenu.label,\r\n          },\r\n        ]);\r\n      }\r\n\r\n      // setisShowPageChecked(true)\r\n      dispatch(getPageList(e.value));\r\n      // showCheckBox.disabled = true\r\n      setPageAccessDropDownView(true);\r\n    } else if (e.value === 1) {\r\n      setTablePageAccessDataState([]);\r\n      // showCheckBox.disabled = false\r\n      setPageAccessDropDownView(false);\r\n      dispatch(getPageListSuccess([]));\r\n      setPageList_DropdownSelect({ value: 0 });\r\n    }\r\n    setPageType_DropdownSelect(e);\r\n  };\r\n\r\n  const PageList_DropdownSelectHandller = (e) => {\r\n    setPageList_DropdownSelect(e);\r\n  };\r\n\r\n  // ADD Button handler\r\n\r\n  function Common_Find_Function(arry, elementValue, findvalue) {\r\n    return arry.find((index) => {\r\n      return index[elementValue] === findvalue;\r\n    });\r\n  }\r\n\r\n  function AddRoleHandler() {\r\n    const drop_value = pageAccess_DropDownSelect.value;\r\n    const drop_label = pageAccess_DropDownSelect.label;\r\n\r\n    // find function pass Parameter (array,indexParameter,findvalue)\r\n    const find = Common_Find_Function(\r\n      tablePageAccessDataState,\r\n      \"AccessID\",\r\n      drop_value\r\n    );\r\n\r\n    if (pageAccess_DropDownSelect.length <= 0) {\r\n      dispatch(\r\n        AlertState({\r\n          Type: 3,\r\n          Status: true,\r\n          Message: \"Select One DropDown Value\",\r\n        })\r\n      );\r\n    } else if (find === undefined) {\r\n      if (drop_label === \"IsEdit\") {\r\n        // find function pass Parameter (array,indexParameter,findvalue)\r\n        const findIsView = Common_Find_Function(\r\n          tablePageAccessDataState,\r\n          \"AccessName\",\r\n          \"IsView\"\r\n        );\r\n        // find function pass Parameter (array,indexParameter,findvalue)\r\n        const find_IsEditSelf = Common_Find_Function(\r\n          tablePageAccessDataState,\r\n          \"AccessName\",\r\n          \"IsEditSelf\"\r\n        );\r\n\r\n        const ViewValues = Common_Find_Function(\r\n          PageAccessValues,\r\n          \"label\",\r\n          \"IsView\"\r\n        );\r\n\r\n        const IsEditSelfValues = Common_Find_Function(\r\n          PageAccessValues,\r\n          \"label\",\r\n          \"IsEditSelf\"\r\n        );\r\n        if ((findIsView === undefined) && (find_IsEditSelf === undefined)) {\r\n          // find function pass Parameter (array,indexParameter,findvalue)\r\n\r\n          setTablePageAccessDataState([\r\n            ...tablePageAccessDataState,\r\n            {\r\n              AccessID: ViewValues.value,\r\n              AccessName: ViewValues.label,\r\n            },\r\n            {\r\n              AccessID: IsEditSelfValues.value,\r\n              AccessName: IsEditSelfValues.label,\r\n            },\r\n            {\r\n              AccessID: drop_value,\r\n              AccessName: drop_label,\r\n            },\r\n          ]);\r\n          return;\r\n        }\r\n        else if (findIsView === undefined) {\r\n          setTablePageAccessDataState([\r\n            ...tablePageAccessDataState,\r\n            {\r\n              AccessID: ViewValues.value,\r\n              AccessName: ViewValues.label,\r\n            },\r\n            {\r\n              AccessID: drop_value,\r\n              AccessName: drop_label,\r\n            },\r\n          ]);\r\n          return;\r\n        }\r\n        else if (find_IsEditSelf === undefined) {\r\n          setTablePageAccessDataState([\r\n            ...tablePageAccessDataState,\r\n            {\r\n              AccessID: IsEditSelfValues.value,\r\n              AccessName: IsEditSelfValues.label,\r\n            },\r\n            {\r\n              AccessID: drop_value,\r\n              AccessName: drop_label,\r\n            },\r\n          ]);\r\n          return;\r\n        }\r\n      }\r\n\r\n      setTablePageAccessDataState([\r\n        ...tablePageAccessDataState,\r\n        { AccessID: drop_value, AccessName: drop_label },\r\n      ]);\r\n    } else {\r\n      dispatch(\r\n        AlertState({\r\n          Type: 4,\r\n          Status: true,\r\n          Message: \"PageAccess Data already Exists \",\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  // For Delete Button in table\r\n  function PageAccess_DeleteButton_Handller(tableValue) {\r\n    setTablePageAccessDataState(\r\n      tablePageAccessDataState.filter((item) => !(item.AccessID === tableValue))\r\n    );\r\n  }\r\n\r\n  function tog_center() {\r\n    setmodal_center(!modal_center)\r\n  }\r\n  function DropDownAddHandler() {\r\n    newCustomAlert()\r\n    // tog_center()\r\n  }\r\n\r\n  function TableBodyFunction() {\r\n    return tablePageAccessDataState.map((TableValue) => {\r\n      let ViewValues = false;\r\n\r\n      if ((TableValue.AccessName === \"IsView\") || (TableValue.AccessName === \"IsEditSelf\")) {\r\n        // find function pass Parameter (array,indexParameter,findvalue)\r\n        // const ViewValues = Common_Find_Function(PageAccessValues, \"label\", \"IsView\");\r\n        const View = tablePageAccessDataState.find((element) => {\r\n          return element.AccessName === \"IsEdit\";\r\n        });\r\n        if (!(View === undefined)) ViewValues = true;\r\n      }\r\n      return (\r\n        <tr>\r\n          <td>{TableValue.AccessName}</td>\r\n          <td>\r\n            {!(TableValue.AccessName === \"IsShowOnMenu\") && !ViewValues ? (\r\n              <i\r\n                className=\"mdi mdi-trash-can d-block text-danger font-size-20\"\r\n                onClick={() => {\r\n                  PageAccess_DeleteButton_Handller(TableValue.AccessID);\r\n                }}\r\n              ></i>\r\n            ) : null}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n  // IsEditMode_Css is use of module Edit_mode (reduce page-content marging)\r\n  var IsEditMode_Css = \"\";\r\n  if (pageMode === \"edit\") { IsEditMode_Css = \"-5.5%\" };\r\n\r\n  if (!(userPageAccessState === '')) {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content\" style={{ marginTop: IsEditMode_Css }}>\r\n          <Breadcrumb breadcrumbItem={userPageAccessState.PageHeading} />\r\n          <Container fluid>\r\n            <MetaTags>\r\n              <title>Page Master| FoodERP-React FrontEnd</title>\r\n            </MetaTags>\r\n\r\n            <Card className=\"text-black\" >\r\n              <CardHeader className=\"card-header   text-black\" style={{ backgroundColor: \"#dddddd\" }} >\r\n                <h4 className=\"card-title text-black\">{userPageAccessState.PageDescription}</h4>\r\n                <p className=\"card-title-desc text-black\">{userPageAccessState.PageDescriptionDetails}</p>\r\n              </CardHeader>\r\n\r\n              <CardBody>\r\n                <AvForm\r\n                  onValidSubmit={(e, v) => {\r\n                    FormSubmitButton_Handler(e, v);\r\n                  }}\r\n                  ref={formRef}\r\n                >\r\n                  <Card>\r\n                    <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                      <Row>\r\n                        <Col md=\"3\">\r\n                          <FormGroup className=\"mb-3 \">\r\n                            <Label>Name </Label>\r\n                            <AvField\r\n                              name=\"Name\"\r\n                              id=\"txtName\"\r\n                              value={EditData.Name}\r\n                              type=\"text\"\r\n                              placeholder=\"Please Enter Name\"\r\n                              autoComplete=\"off\"\r\n                              validate={{\r\n                                required: {\r\n                                  value: true,\r\n                                  errorMessage: \"Please Enter Name\",\r\n                                },\r\n                              }}\r\n                              onChange={(e) => {\r\n                                dispatch(BreadcrumbShow(e.target.value));\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"1\"> </Col>\r\n\r\n                        <Col md=\"7\">\r\n                          <FormGroup className=\"mb-3 \">\r\n                            <Label>Page Description </Label>\r\n                            <AvField\r\n                              name=\"pagedescription\"\r\n                              value={EditData.PageDescription}\r\n                              type=\"text\"\r\n                              placeholder=\"Please Enter Page Description\"\r\n                              autoComplete=\"off\"\r\n                              validate={{\r\n                                required: {\r\n                                  value: true,\r\n                                  errorMessage: \"Please Enter Page Description\",\r\n                                },\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <Col md=\"3\">\r\n                          <FormGroup className=\"mb-3\">\r\n                            <Label>Page Heading</Label>\r\n                            <AvField\r\n                              name=\"pageheading\"\r\n                              type=\"text\"\r\n                              defaultValue=\"\"\r\n                              value={EditData.PageHeading}\r\n                              placeholder=\"Enter your Page Heading \"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"1\"> </Col>\r\n                        <Col md=\"7\">\r\n                          <FormGroup className=\"mb-3\">\r\n                            <Label>Page Description Details</Label>\r\n                            <AvField\r\n                              name=\"pageheadingdescription\"\r\n                              type=\"text\"\r\n                              defaultValue=\"\"\r\n                              value={EditData.PageDescriptionDetails}\r\n                              placeholder=\"Enter your Description \"\r\n                              validate={{\r\n                                required: {\r\n                                  value: true,\r\n                                  errorMessage:\r\n                                    \"Please Enter Page Description Deails\",\r\n                                },\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </CardBody>\r\n                  </Card>\r\n\r\n                  <Card className=\" mt-n2 text-black\">\r\n                    <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                      <Row>\r\n                        <Col md=\"3\">\r\n\r\n                          <FormGroup className=\"mb-3 \">\r\n                            <Label htmlFor=\"validationCustom01\">Module</Label>\r\n                            <Select\r\n                              value={module_DropdownSelect}\r\n                              options={Module_DropdownOption}\r\n                              autoComplete=\"off\"\r\n                              onChange={(e) => {\r\n                                Module_DropdownSelectHandller(e);\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"1\" className=\" mt-3\">\r\n                          <Button className=\" mt-3 btn btn-sm\" type=\"button\" onClick={() => { DropDownAddHandler() }}>add</Button>\r\n                        </Col>\r\n\r\n                        <Col md=\"3\">\r\n                          <FormGroup className=\"mb-3\">\r\n                            <Label htmlFor=\"validationCustom01\">Page Type</Label>\r\n                            <Select\r\n                              value={pageType_DropdownSelect}\r\n                              options={PageType_DropdownOption}\r\n                              autoComplete=\"off\"\r\n                              onChange={(e) => {\r\n                                PageType_DropdownSelectHandller(e);\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"1\"> </Col>\r\n                        <Col md=\"3\">\r\n                          <FormGroup className=\"mb-3\">\r\n                            <Label htmlFor=\"validationCustom01\">\r\n                              Related Page List\r\n                            </Label>\r\n                            <Select\r\n                              value={pageList_DropdownSelect}\r\n                              options={PageList_DropdownOption}\r\n                              autoComplete=\"off\"\r\n                              onChange={(e) => {\r\n                                PageList_DropdownSelectHandller(e);\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <Col md=\"3\">\r\n                          <FormGroup>\r\n                            <Label htmlFor=\"validationCustom01\">\r\n                              Display Index\r\n                            </Label>\r\n                            <AvField\r\n                              name=\"displayIndex\"\r\n                              value={EditData.DisplayIndex}\r\n                              type=\"text\"\r\n                              autoComplete=\"off\"\r\n                              placeholder=\" Please Enter Display Index\"\r\n                              validate={{\r\n                                number: true,\r\n                                required: {\r\n                                  value: true,\r\n                                  errorMessage:\r\n                                    \"Please Enter Display Index Only 2 Digit \",\r\n                                },\r\n                                tel: {\r\n                                  pattern: /^\\d{1,2}$/,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"1\"> </Col>\r\n                        <Col md=\"3\">\r\n                          <FormGroup className=\"mb-3\">\r\n                            <Label htmlFor=\"validationCustom01\">Page Path</Label>\r\n                            <AvField\r\n                              name=\"pagePath\"\r\n                              value={EditData.ActualPagePath}\r\n                              type=\"text\"\r\n                              placeholder=\"Please Enter Page Path\"\r\n                              validate={{\r\n                                required: {\r\n                                  value: true,\r\n                                  errorMessage: \"Please Enter Page Path\",\r\n                                },\r\n                              }}\r\n                              autoComplete=\"off\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"1\"> </Col>\r\n                        <Col md=\"3\">\r\n                          <FormGroup className=\"mb-3\">\r\n                            <Label htmlFor=\"validationCustom01\">Icon</Label>\r\n                            <AvField\r\n                              name=\"Icon\"\r\n                              value={EditData.Icon}\r\n                              type=\"text\"\r\n                              placeholder=\"Please Enter Icon\"\r\n                              validate={{\r\n                                required: {\r\n                                  value: true,\r\n                                  errorMessage: \"Please Enter Icon\",\r\n                                },\r\n                              }}\r\n                              autoComplete=\"off\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <FormGroup className=\"mb-1 col col-sm-6\">\r\n                          <Row className=\"justify-content-md-left\">\r\n                            {/* <Label htmlFor=\"horizontal-firstname-input\" className=\"col-sm-3 col-form-label\" >Show on Menu</Label>\r\n                                                    <Col md={2} style={{ marginTop: '9px' }} >\r\n\r\n                                                        <div className=\"form-check form-switch form-switch-md mb-1\" dir=\"ltr\">\r\n                                                            <input type=\"checkbox\" className=\"form-check-input \" id=\"inp-showOnMenu\"\r\n                                                                checked={isShowPageChecked}\r\n                                                                name=\"isShowOnMenu\"\r\n                                                                onChange={() => { setisShowPageChecked(!isShowPageChecked) }}\r\n                                                            />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"customSwitchsizemd\"></label>\r\n                                                        </div>\r\n                                                    </Col> */}\r\n                            {/* <Col md=\"3\">  </Col> */}\r\n                            <Label\r\n                              htmlFor=\"horizontal-firstname-input\"\r\n                              className=\"col-sm-2 col-form-label\"\r\n                            >\r\n                              Active{\" \"}\r\n                            </Label>\r\n                            <Col md={2} style={{ marginTop: \"9px\" }}>\r\n                              <div\r\n                                className=\"form-check form-switch form-switch-md mb-1\"\r\n                                dir=\"ltr\"\r\n                              >\r\n                                <AvInput\r\n                                  type=\"checkbox\"\r\n                                  className=\"form-check-input\"\r\n                                  id=\"customSwitchsizemd\"\r\n                                  checked={EditData.isActive}\r\n                                  name=\"isActive\"\r\n                                  defaultChecked={true}\r\n                                />\r\n                                <label\r\n                                  className=\"form-check-label\"\r\n                                  htmlFor=\"customSwitchsizemd\"\r\n                                ></label>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </FormGroup>\r\n                      </Row>\r\n                    </CardBody>\r\n                  </Card>\r\n                  {pageAccessDropDownView ? (\r\n                    <Card className=\" mt-n2 text-black\">\r\n                      <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                        <Row className=\"\">\r\n                          <FormGroup className=\" ml-3 col col-sm-4 \">\r\n                            <Label htmlFor=\"validationCustom01\">\r\n                              Page Access\r\n                            </Label>\r\n                            <Select\r\n                              options={PageAccessValues}\r\n                              onChange={(e) => {\r\n                                PageAccess_DropdownSelect_Handler(e);\r\n                              }}\r\n                              // defaultValue={{ label: \"IsShowOnMenu\", value: 1 }}\r\n                              classNamePrefix=\"select2-selection\"\r\n                            />\r\n                          </FormGroup>\r\n\r\n                          <Col sm={1} style={{ marginTop: \"28px\" }}>\r\n                            <Button\r\n                              type=\"button\"\r\n                              className=\"btn btn-sm mt-1 mb-0 btn-light  btn-outline-primary  \"\r\n                              onClick={() => AddRoleHandler()}\r\n                            >\r\n                              <i className=\"dripicons-plus \"></i>\r\n                            </Button>\r\n                          </Col>\r\n\r\n                          <Col sm={3} style={{ marginTop: \"28px\" }}>\r\n                            {tablePageAccessDataState.length > 0 ? (\r\n                              <div className=\"table-responsive\">\r\n                                <Table className=\"table table-bordered  text-center\">\r\n                                  <Thead>\r\n                                    <tr>\r\n                                      <th>Page Access</th>\r\n\r\n                                      <th>Action</th>\r\n                                    </tr>\r\n                                  </Thead>\r\n\r\n                                  <Tbody>{TableBodyFunction()}</Tbody>\r\n                                </Table>\r\n                              </div>\r\n                            ) : (\r\n                              <> </>\r\n                            )}\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <FormGroup >\r\n                          <Row >\r\n                            <Col sm={2}>\r\n                              <div>\r\n                                {\r\n                                  pageMode === \"edit\" ?\r\n                                    userPageAccessState.RoleAccess_IsEdit ?\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Role\"\r\n                                        className=\"btn btn-success w-md\"\r\n                                      >\r\n                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                      </button>\r\n                                      :\r\n                                      <></>\r\n                                    : (\r\n                                      userPageAccessState.RoleAccess_IsSave ?\r\n                                        <button\r\n                                          type=\"submit\"\r\n                                          data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Role\"\r\n                                          className=\"btn btn-primary w-md\"\r\n                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                        </button>\r\n                                        :\r\n                                        <></>\r\n                                    )\r\n                                }\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </FormGroup >\r\n                      </CardBody>\r\n                    </Card>\r\n                  ) : (\r\n                    <Card className=\" mt-n2 text-black\">\r\n                      <CardBody style={{ backgroundColor: \"whitesmoke\" }}>\r\n                        <FormGroup >\r\n                          <Row >\r\n                            <Col sm={2}>\r\n                              <div>\r\n                                {\r\n                                  pageMode === \"edit\" ?\r\n                                    userPageAccessState.RoleAccess_IsEdit ?\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Update Role\"\r\n                                        className=\"btn btn-success w-md\"\r\n                                      >\r\n                                        <i class=\"fas fa-edit me-2\"></i>Update\r\n                                      </button>\r\n                                      :\r\n                                      <></>\r\n                                    : (\r\n                                      userPageAccessState.RoleAccess_IsSave ?\r\n                                        <button\r\n                                          type=\"submit\"\r\n                                          data-mdb-toggle=\"tooltip\" data-mdb-placement=\"top\" title=\"Save Role\"\r\n                                          className=\"btn btn-primary w-md\"\r\n                                        > <i className=\"fas fa-save me-2\"></i> Save\r\n                                        </button>\r\n                                        :\r\n                                        <></>\r\n                                    )\r\n                                }\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </FormGroup >\r\n                      </CardBody>\r\n                    </Card>\r\n                  )}\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n            <Modal\r\n              isOpen={modal_center}\r\n              toggle={() => {\r\n                tog_center();\r\n              }}\r\n              size=\"xl\"\r\n            >\r\n              <Modules pageMode={\"dropdownAdd\"} />\r\n            </Modal>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <React.Fragment></React.Fragment>\r\n    )\r\n  }\r\n};\r\n\r\nexport default HPageMaster;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}